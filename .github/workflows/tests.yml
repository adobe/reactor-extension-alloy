name: Alloy Reactor Extension
on:
  push:
  workflow_dispatch:
env:
  SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
  SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
  SAUCE_JOB: "Alloy Reactor Extension"
  SAUCE_CAPABILITIES_OVERRIDES_PATH: 'sauceLabsCapabilities.json'
  EDGE_E2E_PRIVATE_KEY_CONTENTS: ${{ secrets.EDGE_E2E_PRIVATE_KEY_CONTENTS }}
  EDGE_E2E_CLIENT_SECRET: ${{ secrets.EDGE_E2E_CLIENT_SECRET }}
  REACTOR_IO_INTEGRATION_PRIVATE_KEY_CONTENTS: ${{ secrets.REACTOR_IO_INTEGRATION_PRIVATE_KEY_CONTENTS }}
  REACTOR_IO_INTEGRATION_CLIENT_SECRET: ${{ secrets.REACTOR_IO_INTEGRATION_CLIENT_SECRET }}

jobs:
  unit-test:
    name: "Unit Test"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: npm-cache
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}-${{ secrets.NPM_CACHE_VERSION }} # increment NPM_CACHE_VERSION secret to force cache reset
    - name: Install dependencies
      if: steps.npm-cache.outputs.cache-hit != 'true'
      run: npm ci
    - name: Build
      run: npm run build
    - name: Run Unit Test
      run: npx karma start karma.saucelabs.conf.js --single-run
  functional-chrome:
    name: "Chrome Functional Test"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-node@v1
      with:
        node-version: '16'
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: npm-cache
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}-${{ secrets.NPM_CACHE_VERSION }} # increment NPM_CACHE_VERSION secret to force cache reset
    - name: Install node packages
      run: npm ci
    - name: Build
      run: npm run build
    - name: Run Functional Tests
      run: npm run test:functional:saucelabs:chrome
      env:
        SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
        SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
        EDGE_E2E_PRIVATE_KEY_CONTENTS: ${{ secrets.EDGE_E2E_PRIVATE_KEY_CONTENTS }}
        EDGE_E2E_CLIENT_SECRET: ${{ secrets.EDGE_E2E_CLIENT_SECRET }}
  # functional-firefox:
  #   name: "Firefox Functional Test"
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/setup-node@v1
  #     with:
  #       node-version: '16'
  #   - uses: actions/checkout@v2
  #   - uses: actions/cache@v2
  #     id: npm-cache
  #     with:
  #       path: '**/node_modules'
  #       key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}-${{ secrets.NPM_CACHE_VERSION }} # increment NPM_CACHE_VERSION secret to force cache reset
  #   - name: Install node packages
  #     run: npm ci
  #   - name: Build
  #     run: npm run build
  #   - name: Run Functional Tests
  #     run: npm run test:functional:saucelabs:firefox
  #     env:
  #       SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
  #       SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
  #       EDGE_E2E_PRIVATE_KEY_CONTENTS: ${{ secrets.EDGE_E2E_PRIVATE_KEY_CONTENTS }}
  #       EDGE_E2E_CLIENT_SECRET: ${{ secrets.EDGE_E2E_CLIENT_SECRET }}
  functional-edge:
    name: "Edge Functional Test"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-node@v1
      with:
        node-version: '16'
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: npm-cache
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}-${{ secrets.NPM_CACHE_VERSION }} # increment NPM_CACHE_VERSION secret to force cache reset
    - name: Install node packages
      run: npm ci
    - name: Build
      run: npm run build
    - name: Run Functional Tests
      run: npm run test:functional:saucelabs:edge
      env:
        SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
        SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
        EDGE_E2E_PRIVATE_KEY_CONTENTS: ${{ secrets.EDGE_E2E_PRIVATE_KEY_CONTENTS }}
        EDGE_E2E_CLIENT_SECRET: ${{ secrets.EDGE_E2E_CLIENT_SECRET }}
  functional-safari:
    name: "Safari Functional Test"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-node@v1
      with:
        node-version: '16'
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: npm-cache
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}-${{ secrets.NPM_CACHE_VERSION }} # increment NPM_CACHE_VERSION secret to force cache reset
    - name: Install node packages
      run: npm ci
    - name: Build
      run: npm run build
    - name: Run Functional Tests
      run: npm run test:functional:saucelabs:safari
      env:
        SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
        SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
        EDGE_E2E_PRIVATE_KEY_CONTENTS: ${{ secrets.EDGE_E2E_PRIVATE_KEY_CONTENTS }}
        EDGE_E2E_CLIENT_SECRET: ${{ secrets.EDGE_E2E_CLIENT_SECRET }}
