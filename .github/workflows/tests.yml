name: Alloy Reactor Extension
on:
  push:
  workflow_dispatch:
env:
  SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
  SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
  SAUCE_JOB: "Alloy Reactor Extension"
  SAUCE_CAPABILITIES_OVERRIDES_PATH: 'sauceLabsCapabilities.json'
  EDGE_E2E_PRIVATE_KEY_CONTENTS: ${{ secrets.EDGE_E2E_PRIVATE_KEY_CONTENTS }}
  EDGE_E2E_CLIENT_SECRET: ${{ secrets.EDGE_E2E_CLIENT_SECRET }}
  REACTOR_IO_INTEGRATION_PRIVATE_KEY_CONTENTS: ${{ secrets.REACTOR_IO_INTEGRATION_PRIVATE_KEY_CONTENTS }}
  REACTOR_IO_INTEGRATION_CLIENT_SECRET: ${{ secrets.REACTOR_IO_INTEGRATION_CLIENT_SECRET }}

jobs:
  unit-test:
    name: "Unit Test"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: npm-cache
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}-${{ secrets.NPM_CACHE_VERSION }} # increment NPM_CACHE_VERSION secret to force cache reset
    - name: Install dependencies
      if: steps.npm-cache.outputs.cache-hit != 'true'
      run: npm ci
    - name: Build
      run: npm run build
    - uses: saucelabs/sauce-connect-action@v2.2.1
      with:
        username: ${{ secrets.SAUCE_USERNAME }}
        accessKey: ${{ secrets.SAUCE_ACCESS_KEY }}
        tunnelName: $GITHUB_JOB
    - name: Run Unit Test
      run: npx karma start karma.saucelabs.conf.js --single-run
      env:
        BUILD_NUMBER: $GITHUB_RUN_NUMBER
        BUILD_ID: $GITHUB_RUN_ID
        JOB_NUMBER: $GITHUB_JOB

  functional-test:
    name: "Functional Test"
    needs: unit-test
    strategy:
      max-parallel: 4
      matrix:
        browsers:
          [
            "test:functional:saucelabs:chrome",
            "test:functional:saucelabs:firefox",
            "test:functional:saucelabs:edge",
            "test:functional:saucelabs:safari"
          ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: '18'
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}-${{ secrets.NPM_CACHE_VERSION }} # increment NPM_CACHE_VERSION secret to force cache reset
      - name: Install node packages
        run: npm ci
      - name: Build
        run: npm run build
      - name: Run Functional Test
        timeout-minutes: 60
        run: npm run ${{ matrix.browsers }}
        env:
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
          EDGE_E2E_PRIVATE_KEY_CONTENTS: ${{ secrets.EDGE_E2E_PRIVATE_KEY_CONTENTS }}
          EDGE_E2E_CLIENT_SECRET: ${{ secrets.EDGE_E2E_CLIENT_SECRET }}
