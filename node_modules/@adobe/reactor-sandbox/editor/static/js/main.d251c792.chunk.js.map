{"version":3,"sources":["models/currentRule.js","models/localStorage.js","models/rules.js","models/dataElements.js","models/propertySettings.js","models/otherSettings.js","models/extensionConfigurations.js","models/environment.js","models/brain.js","models/modals.js","store.js","models/registry.js","models/currentIframe.js","components/Menu.js","components/Modal.js","components/ModalCodeEditor.js","components/ModalDataElementSelector.js","components/PreloaderRoute.js","components/Main.js","components/OtherSettings.js","components/Settings.js","components/PropertySettings.js","components/List.js","components/RulesList.js","components/RuleComponentCard.js","components/RuleComponentsList.js","components/RuleEdit.js","components/ComponentIframe.js","components/Backdrop.js","components/RuleComponentEdit.js","components/DataElementsList.js","components/DataElementEdit.js","components/ExtensionConfigurationsList.js","components/ExtensionConfigurationEdit.js","App.js","index.js"],"names":["models_currentRule","state","reducers","setCurrentRule","payload","saveComponent","updateIn","type","id","item","component","addComponent","update","get","List","push","models_localStorage","extensionName","Map","dataElements","rules","extensions","this","loadStateFor","JSON","parse","localStorage","getItem","concat","fromJS","key","value","reduce","result","set","delete","toJS","setItem","stringify","models_rules","setRules","addRule","rule","Date","now","saveRule","deleteRule","models_dataElements","setDataElements","entrySeq","map","_ref","_ref2","Object","slicedToArray","merge","name","toList","addDataElement","dataElement","saveDataElement","deleteDataElement","models_propertySettings","setPropertySettings","models_otherSettings","setOtherSettings","models_extensionConfigurations","setExtensionConfigurations","extensionConfigurations","addExtensionConfiguration","extensionConfiguration","saveExtensionConfiguration","deleteExtensionConfiguration","environment","host","port","models_brain","setContainerDataLoaded","setContainerDataReseted","setInitialized","effects","initialize","_initialize","asyncToGenerator","regenerator_default","a","mark","_callee","rootState","response","data","jsData","_this","wrap","_context","prev","next","fetch","sent","ok","json","dispatch","registry","setRegistry","pushDataDown","setTimeout","stop","_x","_x2","apply","arguments","loadContainerData","_loadContainerData","_callee2","containerData","_context2","_x3","_x4","clearContainerData","property","settings","propertySettings","getIn","domains","otherSettings","company","orgId","tokens","imsAccess","save","_save","_callee3","localStorageData","_context3","setIn","method","cache","headers","Content-Type","body","window","location","alert","modals","openCodeEditorModal","codeEditorModal","open","code","onSave","onClose","closeCodeEditorModal","openDataElementSelectorModal","dataElementSelectorModal","closeDataElementSelectorModal","store","init","models","brain","currentIframe","setCurrentIframe","currentRule","withRouter","connect","match","react_default","createElement","className","react_router_dom","to","path","includes","indexOf","isSavedEnabled","onClick","components_Modal","show","title","children","ModalCodeEditor","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleOnSave","handleOnClose","handleCodeChange","event","setState","target","prevModalSize","size","onChange","nextProps","prevState","Component","ModalDataElementSelectorEditor","newDataElement","handleDataElementChange","valueSeq","v","dataElementList","rest","objectWithoutProperties","react_router","assign","render","src_components_ModalCodeEditor","components_ModalDataElementSelector","src_components_Menu","Main","OtherSettings","handleOrgIdChange","handleImsChange","handleSave","_this$props","history","isValid","errors","keys","length","_this$state","htmlFor","_ref2$brain","src_components_OtherSettings","PropertySettings","join","split","s","trim","handleDomainsChange","bind","items","nameProperty","deleteFn","linkPrefix","i","colSpan","src_components_List","index","handleDeleteClick","cardDetails","params","rule_id","handleOnClick","src_components_RuleComponentCard","isNewRule","ruleId","locationChecked","getCurrentRule","lastLocation","pathname","RuleEdit","handleNameChange","newRule","handleCancelClick","deleteIn","placeholder","src_components_RuleComponentsList","_ref2$rules","withLastLocation","ComponentIframe","renderIframe","dom","innerHTML","server","url","getUrl","_this$props2","extensionInitOptions","extensionSettings","loadIframe","container","connectionTimeoutDuration","openCodeEditor","options","undefined","Promise","resolve","reject","catch","openRegexTester","openDataElementSelector","markAsDirty","ref","node","_ref$modals","components_Backdrop","message","isNewComponent","componentId","getComponent","_ref$match$params","component_id","modulePath","RuleComponentEdit","handleComponentTypeChange","handleOrderChange","newComponent","_this$props$match$par","waitingForExtensionResponse","promise","then","api","all","validate","getSettings","_ref3","backLink","componentList","groupList","forEach","extenisonDisplayName","label","_this$props3","componentIframeDetails","src_components_ComponentIframe","filter","first","_ref4","_ref4$currentRule","getDataElement","dataElementId","data_element_id","DataElementEdit","fieldName","checked","_this2","constructor","handleInputChange","dataElementsList","_ref5","_ref5$dataElements","isNewExtensionConfiguration","extensionConfigurationId","extension_configuration_id","getExtensionConfiguration","ExtensionConfigurationEdit","displayName","extensionConfigurationList","_ref5$extensionConfig","App","es","dist","components_PreloaderRoute","exact","Settings","RulesList","DataElementsList","ExtensionConfigurationsList","ReactDOM","src_App","document","getElementById"],"mappings":"4jBAEeA,EAAA,CACbC,MAAO,KACPC,SAAU,CACRC,eADQ,SACOF,EAAOG,GACpB,OAAOA,GAETC,cAJQ,SAIMJ,EAAOG,GACnB,OAAOH,EAAMK,SACX,CAACF,EAAQG,KAAMH,EAAQI,IACvB,SAAAC,GAAI,OAAIL,EAAQM,aAGpBC,aAVQ,SAUKV,EAAOG,GAClB,OAAOH,EAAMW,OAAOR,EAAQG,KAAM,SAAAE,GAAI,OACnCR,EAAMY,IAAIT,EAAQG,OAASO,kBAAQC,KAAKX,EAAQM,gBCd1CM,EAAA,CACbC,cAAe,KACfhB,MAAOiB,cAAI,CACTC,aAAc,GACdC,MAAO,GACPC,WAAY,KAEdR,IAPa,WAQX,OAAOS,KAAKrB,OAEdsB,aAVa,SAUAN,GACXK,KAAKL,cAAgBA,EAErB,IAAMhB,EAAQuB,KAAKC,MACjBC,aAAaC,QAAb,iCAAAC,OAAsDX,KAEpDhB,IACFqB,KAAKrB,MAAQ4B,iBAAO5B,KAGxBW,OApBa,SAoBNkB,EAAKC,GAERA,EADU,eAARD,GAAgC,iBAARA,EAClBC,EAAMC,OACZ,SAACC,EAAQxB,GAAT,OAAkBwB,EAAOC,IAAIzB,EAAKI,IAAI,QAASJ,EAAK0B,OAAO,UAC3DjB,iBAGMa,EAAMK,OAEhBd,KAAKrB,MAAQqB,KAAKrB,MAAMiC,IAAIJ,EAAKC,GAE7BT,KAAKL,eACPS,aAAaW,QAAb,iCAAAT,OACmCN,KAAKL,eACtCO,KAAKc,UAAUhB,KAAKrB,MAAMmC,WCjCnBG,EAAA,CACbtC,MAAOa,iBACPZ,SAAU,CACRsC,SADQ,SACCvC,EAAOG,GAEd,OADAsB,EAAad,OAAO,QAASR,GACtBA,GAETqC,QALQ,SAKAxC,EAAOG,GACb,IAAMgB,EAAQnB,EAAMc,KAAKX,EAAQsC,KAAKR,IAAI,KAAjB,KAAAN,OAA4Be,KAAKC,SAE1D,OADAlB,EAAad,OAAO,QAASQ,GACtBA,GAETyB,SAVQ,SAUC5C,EAAOG,GACd,IAAMgB,EAAQnB,EAAMW,OAAOR,EAAQI,GAAI,SAAAC,GAAI,OACzCL,EAAQsC,KAAKR,IAAI,KAAjB,KAAAN,OAA4Be,KAAKC,UAGnC,OADAlB,EAAad,OAAO,QAASQ,GACtBA,GAET0B,WAjBQ,SAiBG7C,EAAOG,GAChB,IAAMgB,EAAQnB,EAAMkC,OAAO/B,GAE3B,OADAsB,EAAad,OAAO,QAASQ,GACtBA,aCtBE2B,EAAA,CACb9C,MAAOa,iBACPZ,SAAU,CACR8C,gBADQ,SACQ/C,EAAOG,GACrB,IAAMe,EAAef,EAClB6C,WACAC,IAAI,SAAAC,GAAA,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAErB,EAAFsB,EAAA,UAAAA,EAAA,GAAwBG,MAAM,CAAEC,KAAM1B,MAC1C2B,SAGH,OADA/B,EAAad,OAAO,eAAgBO,GAC7BA,GAETuC,eAVQ,SAUOzD,EAAOG,GACpB,IAAMe,EAAelB,EAAMc,KAAKX,EAAQuD,aAExC,OADAjC,EAAad,OAAO,eAAgBO,GAC7BA,GAETyC,gBAfQ,SAeQ3D,EAAOG,GACrB,IAAMe,EAAelB,EAAMW,OACzBR,EAAQI,GACR,SAAAC,GAAI,OAAIL,EAAQuD,cAGlB,OADAjC,EAAad,OAAO,eAAgBO,GAC7BA,GAET0C,kBAvBQ,SAuBU5D,EAAOG,GACvB,IAAMe,EAAelB,EAAMkC,OAAO/B,GAElC,OADAsB,EAAad,OAAO,eAAgBO,GAC7BA,KC5BE2C,EAAA,CACb7D,MAAOiB,gBACPhB,SAAU,CACR6D,oBADQ,SACY9D,EAAOG,GAEzB,OADAsB,EAAad,OAAO,WAAYM,gBAAMgB,IAAI,WAAY9B,IAC/CA,KCLE4D,EAAA,CACb/D,MAAOiB,gBACPhB,SAAU,CACR+D,iBADQ,SACShE,EAAOG,GAEtB,OADAsB,EAAad,OAAO,gBAAiBR,GAC9BA,KCLE8D,EAAA,CACbjE,MAAOa,iBACPZ,SAAU,CACRiE,2BADQ,SACmBlE,EAAOG,GAChC,IAAMgE,EAA0BhE,EAC7B6C,WACAC,IAAI,SAAAC,GAAA,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAErB,EAAFsB,EAAA,UAAAA,EAAA,GAAwBG,MAAM,CAAEC,KAAM1B,MAC1C2B,SAGH,OADA/B,EAAad,OAAO,aAAcwD,GAC3BA,GAETC,0BAVQ,SAUkBpE,EAAOG,GAC/B,IAAMgE,EAA0BnE,EAAMc,KACpCX,EAAQkE,wBAGV,OADA5C,EAAad,OAAO,aAAcwD,GAC3BA,GAETG,2BAjBQ,SAiBmBtE,EAAOG,GAChC,IAAMgE,EAA0BnE,EAAMW,OACpCR,EAAQI,GACR,SAAAC,GAAI,OAAIL,EAAQkE,yBAGlB,OADA5C,EAAad,OAAO,aAAcwD,GAC3BA,GAETI,6BAzBQ,SAyBqBvE,EAAOG,GAClC,IAAMgE,EAA0BnE,EAAMkC,OAAO/B,GAE7C,OADAsB,EAAad,OAAO,aAAcwD,GAC3BA,8BCjCEK,EACL,CACNC,KAAM,mBACNC,KAAM,KCEKC,EAAA,CACb3E,MAAOiB,gBACPhB,SAAU,CACR2E,uBADQ,SACe5E,EAAOG,GAC5B,OAAOH,EAAMiC,IAAI,sBAAuB9B,IAE1C0E,wBAJQ,SAIgB7E,EAAOG,GAC7B,OAAOH,EAAMiC,IAAI,uBAAwB9B,IAE3C2E,eAPQ,SAOO9E,EAAOG,GACpB,OAAOH,EAAMiC,IAAI,cAAe9B,KAGpC4E,QAAS,CACDC,WADC,eAAAC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAAA,SAAAC,EACUnF,EAASoF,GADnB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAtE,KAAA,OAAA8D,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEkBC,MAAK,GAAArE,OACvB6C,EAAmBC,KADI,KAAA9C,OAExB6C,EAAmBE,KAFK,wBAFvB,YAECc,EAFDK,EAAAI,MAQQC,GARR,CAAAL,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EASgBP,EAASW,OATzB,OASGV,EATHI,EAAAI,KAUGP,EAAS9D,iBAAO6D,GAEtBW,EAASC,SAASC,YAAYZ,EAAOxD,OAAO,yBAC5CT,EAAaH,aAAaoE,EAAO9E,IAAI,yBAErCS,KAAKkF,aAAa9E,EAAab,OAE/B4F,WAAW,WACTb,EAAKb,gBAAe,IACnB,GAnBA,yBAAAe,EAAAY,SAAAnB,EAAAjE,SAAA,gBAAAqF,EAAAC,GAAA,OAAA1B,EAAA2B,MAAAvF,KAAAwF,YAAA,GAuBDC,kBAvBC,eAAAC,EAAA3D,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAAA,SAAA2B,EAuBiB7G,EAASoF,GAvB1B,IAAAC,EAAAyB,EAAA,OAAA9B,EAAAC,EAAAQ,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EAwBkBC,MAAK,GAAArE,OACvB6C,EAAmBC,KADI,KAAA9C,OAExB6C,EAAmBE,KAFK,yBAxBvB,YAwBCc,EAxBD0B,EAAAjB,MA8BQC,GA9BR,CAAAgB,EAAAnB,KAAA,gBAAAmB,EAAAnB,KAAA,EA+ByBP,EAASW,OA/BlC,OA+BGc,EA/BHC,EAAAjB,KAgCH5E,KAAKkF,aAAatF,cAAIgG,IACtB5F,KAAKuD,uBAAuB,WAjCzBsC,EAAAnB,KAAA,iBAmCH1E,KAAKuD,uBAAuB,UAnCzB,yBAAAsC,EAAAT,SAAAO,EAAA3F,SAAA,gBAAA8F,EAAAC,GAAA,OAAAL,EAAAH,MAAAvF,KAAAwF,YAAA,GAuCPQ,mBAvCO,SAuCYlH,EAASoF,GAC1BlE,KAAKkF,aACHtF,cAAI,CACFG,WAAY,GACZD,MAAO,GACPD,aAAc,GACdoG,SAAU,CAAEC,SAAU,OAI1BlG,KAAKwD,wBAAwB,YAG/B0B,aApDO,SAoDMpG,EAASoF,GACpBa,EAASjC,wBAAwBD,2BAC/BtC,iBAAOzB,EAAQS,IAAI,gBAErBwF,EAASjF,MAAMoB,SAASX,iBAAOzB,EAAQS,IAAI,WAC3CwF,EAASlF,aAAa6B,gBACpBnB,iBAAOzB,EAAQS,IAAI,kBAGrBwF,EAASoB,iBAAiB1D,oBACxBlC,iBACEzB,EAAQsH,MAAM,CAAC,WAAY,cAAgB,CACzCC,QAAS,CAAC,kBAIhBtB,EAASuB,cAAc3D,iBACrBpC,iBACEzB,EAAQS,IAAI,kBAAoB,CAC9BgH,QAAS,CACPC,MAAO,qCAETC,OAAQ,CACNC,UAAW,6BAOfC,KAlFC,eAAAC,EAAA7E,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAC,EAAAC,KAAA,SAAA6C,IAAA,IAAAC,EAAAlB,EAAA,OAAA9B,EAAAC,EAAAQ,KAAA,SAAAwC,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,cAmFCoC,EAAmB1G,EAAab,MAChCqG,EAAgBkB,EACnBE,MACC,CAAC,UAAW,SACZF,EAAiBvH,IAAI,iBAAiBgH,QAAQC,OAE/C3F,OAAO,iBAzFLkG,EAAArC,KAAA,EA2FkBC,MAAK,GAAArE,OACvB6C,EAAmBC,KADI,KAAA9C,OAExB6C,EAAmBE,KAFK,wBAI1B,CACE4D,OAAQ,OACRC,MAAO,WACPC,QAAS,CACPC,eAAgB,oBAElBC,KAAMnH,KAAKc,UAAU4E,KArGpB,OAAAmB,EAAAnC,KAyGQC,GACXyC,OAAOC,SAAP,GAAAjH,OAAqB6C,EAAmBC,KAAxC,KAAA9C,OACE6C,EAAmBE,KADrB,oBAIAmE,MAAM,uBA9GH,wBAAAT,EAAA3B,SAAAyB,MAAA,yBAAAD,EAAArB,MAAAvF,KAAAwF,YAAA,KChBIiC,EAAA,CACb9I,MAAOiB,gBACPhB,SAAU,CACR8I,oBADQ,SACY/I,EAAOG,GACzB,OAAOH,EAAMsD,MACX1B,iBAAO,CACLoH,gBAAiB,CACfC,MAAM,EACNC,KAAM/I,EAAQ+I,KACdC,OAAQhJ,EAAQgJ,OAChBC,QAASjJ,EAAQiJ,aAMzBC,qBAdQ,SAcarJ,EAAOG,GAC1B,OAAOH,EAAMkC,OAAO,oBAGtBoH,6BAlBQ,SAkBqBtJ,EAAOG,GAClC,OAAOH,EAAMsD,MACX1B,iBAAO,CACL2H,yBAA0B,CACxBN,MAAM,EACNE,OAAQhJ,EAAQgJ,OAChBC,QAASjJ,EAAQiJ,aAMzBI,8BA9BQ,SA8BsBxJ,EAAOG,GACnC,OAAOH,EAAMkC,OAAO,+BCvBpBuH,EAAQC,eAAK,CACjBC,OAAQ,CACNC,MAAOA,EACPzI,MAAOA,EACPD,aAAcA,EACdiD,wBAAyBA,EACzBkC,SClBW,CACbrG,MAAO,KACPC,SAAU,CACRqG,YADQ,SACItG,EAAOG,GACjB,OAAOA,KDeT0J,cEnBW,CACb7J,MAAO,GACPC,SAAU,CACR6J,iBADQ,SACS9J,EAAOG,GACtB,OAAOA,KFgBT4J,YAAaA,EACbvC,iBAAkBA,EAClBG,cAAeA,EACfmB,OAAQA,KAIGW,IACArD,EAAaqD,EAAbrD,iBG6DA4D,qBACbC,YANe,iBAAO,IACJ,SAAA9G,GAAA,IAAY6E,EAAZ7E,EAAGyG,MAAS5B,KAAZ,MAA0B,CAC5CA,KAAM,kBAAMA,OAIZiC,CA5EW,SAAA/G,GAAA,IAAGgH,EAAHhH,EAAGgH,MAAOlC,EAAV9E,EAAU8E,KAAV,OACXmC,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,aACbF,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,kCACbF,EAAA/E,EAAAgF,cAACE,EAAA,KAAD,CAAMD,UAAU,mCAAmCE,GAAG,KAAtD,UAGAJ,EAAA/E,EAAAgF,cAAA,MAAIC,UAAU,kBACZF,EAAA/E,EAAAgF,cAAA,MAAIC,UAAU,kBACZF,EAAA/E,EAAAgF,cAACE,EAAA,KAAD,CACEC,GAAG,4BACHF,UAAS,kBAAA1I,OACQ,8BAAfuI,EAAMM,KAAuC,gBAAkB,KAHnE,6BAUFL,EAAA/E,EAAAgF,cAAA,MAAIC,UAAU,kBACZF,EAAA/E,EAAAgF,cAACE,EAAA,KAAD,CACEC,GAAG,iBACHF,UAAS,kBAAA1I,OACQ,mBAAfuI,EAAMM,KAA4B,gBAAkB,KAHxD,kBASFL,EAAA/E,EAAAgF,cAAA,MAAIC,UAAU,kBACZF,EAAA/E,EAAAgF,cAACE,EAAA,KAAD,CACEC,GAAG,SACHF,UAAS,kBAAA1I,OACPuI,EAAMM,KAAKC,SAAS,UAAY,gBAAkB,KAHtD,UASFN,EAAA/E,EAAAgF,cAAA,MAAIC,UAAU,kBACZF,EAAA/E,EAAAgF,cAACE,EAAA,KAAD,CACEC,GAAG,qBACHF,UAAS,kBAAA1I,OACQ,uBAAfuI,EAAMM,KAAgC,gBAAkB,KAH5D,sBASFL,EAAA/E,EAAAgF,cAAA,MAAIC,UAAU,kBACZF,EAAA/E,EAAAgF,cAACE,EAAA,KAAD,CACEC,GAAG,YACHF,UAAS,kBAAA1I,OACQ,cAAfuI,EAAMM,KAAuB,gBAAkB,KAHnD,aA1Da,SAAAN,GAAK,OAOC,IAN3B,CACE,IACA,4BACA,iBACA,SACA,sBACAQ,QAAQR,EAAMM,MA4DTG,CAAeT,GACdC,EAAA/E,EAAAgF,cAAA,MAAIC,UAAU,kBACZF,EAAA/E,EAAAgF,cAAA,UAAQ9J,KAAK,SAAS+J,UAAU,iBAAiBO,QAAS5C,GAA1D,kBAIA,YC3EG6C,SAAA,SAAA3H,GAAA,IAAG4H,EAAH5H,EAAG4H,KAAMC,EAAT7H,EAAS6H,MAAOC,EAAhB9H,EAAgB8H,SAAU7B,EAA1BjG,EAA0BiG,OAAQC,EAAlClG,EAAkCkG,QAAlC,OACb0B,EACEX,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,YACbF,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,SACbF,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,UACbF,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,SAASU,GACxBZ,EAAA/E,EAAAgF,cAAA,UACE9J,KAAK,SACLsK,QAASxB,EACT2B,MAAM,SACNV,UAAU,iBAGbW,EACDb,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,UACbF,EAAA/E,EAAAgF,cAAA,UACE9J,KAAK,SACL+J,UAAU,kCACVO,QAASzB,GAHX,QADF,OASEgB,EAAA/E,EAAAgF,cAAA,UAAQ9J,KAAK,SAAS+J,UAAU,cAAcO,QAASxB,GAAvD,aAMJ,OCzBA6B,qBACJ,SAAAA,EAAYC,GAAO,IAAAvF,EAAA,OAAAvC,OAAA+H,EAAA,EAAA/H,CAAA/B,KAAA4J,IACjBtF,EAAAvC,OAAAgI,EAAA,EAAAhI,CAAA/B,KAAA+B,OAAAiI,EAAA,EAAAjI,CAAA6H,GAAAK,KAAAjK,KAAM6J,KAmBRK,aAAe,WAAM,IACXvC,EAAoBrD,EAAK3F,MAAzBgJ,gBACAK,EAAyB1D,EAAKuF,MAA9B7B,qBAERL,EAAgBpI,IAAI,SAApBoI,CAA8BA,EAAgBpI,IAAI,SAClDyI,KAzBiB1D,EA4BnB6F,cAAgB,WAAM,IACZxC,EAAoBrD,EAAK3F,MAAzBgJ,gBACAK,EAAyB1D,EAAKuF,MAA9B7B,qBAERL,EAAgBpI,IAAI,UAApBoI,GACAK,KAjCiB1D,EAoCnB8F,iBAAmB,SAAAC,GAAS,IAClB1C,EAAoBrD,EAAK3F,MAAzBgJ,gBAERrD,EAAKgG,SAAS,CACZ3C,gBAAiBA,EAAgB/G,IAAI,OAAQyJ,EAAME,OAAO9J,UArC5D6D,EAAK3F,MAAQ,CACXgJ,gBAAiB/H,gBACjB4K,cAAeX,EAAMpC,OAAOgD,MALbnG,wEA4CV,IACCqD,EAAoB3H,KAAKrB,MAAzBgJ,gBAER,OAAOA,EACLmB,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,qBACbF,EAAA/E,EAAAgF,cAACS,EAAD,CACEE,MAAM,cACND,KAAM9B,EAAgBpI,IAAI,QAC1BuI,OAAQ9H,KAAKkK,aACbnC,QAAS/H,KAAKmK,eAEdrB,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,aACbF,EAAA/E,EAAAgF,cAAA,YACEtI,MAAOkH,EAAgBpI,IAAI,QAC3BmL,SAAU1K,KAAKoK,sBAKrB,wDAtD0BO,EAAWC,GACzC,OAAID,EAAUlD,OAAOgD,OAASG,EAAUJ,cAC/B,CACLA,cAAeG,EAAUlD,OAAOgD,KAChC9C,gBAAiBgD,EAAUlD,OAAOrB,MAAM,CAAC,qBAItC,YAlBmByE,cA4EflC,cACbC,YATe,SAAAjK,GAAK,MAAK,CACzB8I,OAAQ9I,EAAM8I,SAGI,SAAA5F,GAAA,IAAamG,EAAbnG,EAAG4F,OAAUO,qBAAb,MAA2C,CAC7DA,qBAAsB,SAAAlJ,GAAO,OAAIkJ,EAAqBlJ,MAItD8J,CAGEgB,IChFEkB,qBACJ,SAAAA,EAAYjB,GAAO,IAAAvF,EAAA,OAAAvC,OAAA+H,EAAA,EAAA/H,CAAA/B,KAAA8K,IACjBxG,EAAAvC,OAAAgI,EAAA,EAAAhI,CAAA/B,KAAA+B,OAAAiI,EAAA,EAAAjI,CAAA+I,GAAAb,KAAAjK,KAAM6J,KAqBRK,aAAe,WAAM,IACXhC,EAA6B5D,EAAK3F,MAAlCuJ,yBACAC,EAAkC7D,EAAKuF,MAAvC1B,8BAEJ4C,EAAiB,GACjB7C,EAAyB3I,IAAI,iBAC/BwL,EAAc,IAAAzK,OAAO4H,EAAyB3I,IAAI,eAApC,MAGhB2I,EAAyB3I,IAAI,SAA7B2I,CAAuC6C,GACvC5C,KAhCiB7D,EAmCnB6F,cAAgB,WAAM,IACZjC,EAA6B5D,EAAK3F,MAAlCuJ,yBACAC,EAAkC7D,EAAKuF,MAAvC1B,8BAERD,EAAyB3I,IAAI,UAA7B2I,GACAC,KAxCiB7D,EA2CnB0G,wBAA0B,SAAAX,GAAS,IACzBnC,EAA6B5D,EAAK3F,MAAlCuJ,yBAER5D,EAAKgG,SAAS,CACZpC,yBAA0BA,EAAyBtH,IACjD,cACAyJ,EAAME,OAAO9J,UA9CjB6D,EAAK3F,MAAQ,CACXuJ,yBAA0BtI,gBAC1B4K,cAAeX,EAAMpC,OAAOgD,MALbnG,iFAwDjB,OADyBtE,KAAK6J,MAAtBhK,cACgBL,kBAAQyL,WAAWrJ,IAAI,SAAAsJ,GAAC,OAC9CpC,EAAA/E,EAAAgF,cAAA,UACEtI,MAAOyK,EAAE3L,IAAI,QACbiB,IAAG,yBAAAF,OAA2B4K,EAAE3L,IAAI,UAEnC2L,EAAE3L,IAAI,4CAKJ,IACC2I,EAA6BlI,KAAKrB,MAAlCuJ,yBAER,OAAOA,EACLY,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,yCACbF,EAAA/E,EAAAgF,cAACS,EAAD,CACEE,MAAM,wBACND,KAAMvB,EAAyB3I,IAAI,QACnCuI,OAAQ9H,KAAKkK,aACbnC,QAAS/H,KAAKmK,eAEdrB,EAAA/E,EAAAgF,cAAA,UACEtI,MAAOyH,EAAyB3I,IAAI,eACpCmL,SAAU1K,KAAKgL,yBAEflC,EAAA/E,EAAAgF,cAAA,kCACC/I,KAAKmL,qBAIV,wDA7E0BR,EAAWC,GACzC,OAAID,EAAUlD,OAAOgD,OAASG,EAAUJ,cAC/B,CACLA,cAAeG,EAAUlD,OAAOgD,KAChCvC,yBAA0ByC,EAAUlD,OAAOrB,MAAM,CAC/C,8BAKC,YApBkCyE,cAqG9BlC,cACbC,YAXe,SAAAjK,GAAK,MAAK,CACzB8I,OAAQ9I,EAAM8I,OACd5H,aAAclB,EAAMkB,eAGF,SAAAgC,GAAA,IAAasG,EAAbtG,EAAG4F,OAAUU,8BAAb,MAAoD,CACtEA,8BAA+B,SAAArJ,GAAO,OACpCqJ,EAA8BrJ,MAIhC8J,CAGEkC,ICjFWnC,cACbC,YAPe,SAAAjK,GAAK,MAAK,CACzB4J,MAAO5J,EAAM4J,QAGK,iBAAO,IAGzBK,CAzBqB,SAAA/G,GAAA,IAAcgJ,EAAdhJ,EAAGzC,UAAsBmJ,EAAzB1G,EAAyB0G,MAAU6C,EAAnCrJ,OAAAsJ,EAAA,EAAAtJ,CAAAF,EAAA,8BACrBiH,EAAA/E,EAAAgF,cAACuC,EAAA,EAADvJ,OAAAwJ,OAAA,GACMH,EADN,CAEEI,OAAQ,SAAA3B,GAAK,OACXtB,EAAMhJ,IAAI,eACRuJ,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,kBACbF,EAAA/E,EAAAgF,cAAC0C,EAAD,MACA3C,EAAA/E,EAAAgF,cAAC2C,EAAD,MACA5C,EAAA/E,EAAAgF,cAAC4C,EAAD,MACA7C,EAAA/E,EAAAgF,cAAC8B,EAAchB,IAGjBf,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,YAAf,2BCPO4C,SATF,kBACX9C,EAAA/E,EAAAgF,cAAA,WACED,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,kBACbF,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,YAAf,mCACAF,EAAA/E,EAAAgF,cAAA,sECFA8C,qBACJ,SAAAA,EAAYhC,GAAO,IAAAvF,EAAA,OAAAvC,OAAA+H,EAAA,EAAA/H,CAAA/B,KAAA6L,IACjBvH,EAAAvC,OAAAgI,EAAA,EAAAhI,CAAA/B,KAAA+B,OAAAiI,EAAA,EAAAjI,CAAA8J,GAAA5B,KAAAjK,KAAM6J,KAQRiC,kBAAoB,SAAAzB,GAAS,IACnB/D,EAAkBhC,EAAK3F,MAAvB2H,cAERhC,EAAKgG,SAAS,CACZhE,cAAeA,EAAcU,MAC3B,CAAC,UAAW,SACZqD,EAAME,OAAO9J,UAfA6D,EAoBnByH,gBAAkB,SAAA1B,GAAS,IACjB/D,EAAkBhC,EAAK3F,MAAvB2H,cAERhC,EAAKgG,SAAS,CACZhE,cAAeA,EAAcU,MAC3B,CAAC,SAAU,aACXqD,EAAME,OAAO9J,UA1BA6D,EA+BnB0H,WAAa,WAAM,IAAAC,EACqB3H,EAAKuF,MAAnCqC,EADSD,EACTC,QAASvJ,EADAsJ,EACAtJ,iBACT2D,EAAkBhC,EAAK3F,MAAvB2H,cAER,QAAKhC,EAAK6H,YAIVxJ,EAAiB2D,GACjB4F,EAAQzM,KAAK,MAEN,IAvCP6E,EAAK3F,MAAQ,CACX2H,cAAeuD,EAAMvD,cACrB8F,OAAQ,IALO9H,yEA8CjB,IAAM8H,EAAS,GACP9F,EAAkBtG,KAAKrB,MAAvB2H,cAWR,OATKA,EAAcF,MAAM,CAAC,UAAW,YACnCgG,EAAO5F,OAAQ,GAGZF,EAAcF,MAAM,CAAC,SAAU,gBAClCgG,EAAO1F,WAAY,GAGrB1G,KAAKsK,SAAS,CAAE8B,WACsB,IAA/BrK,OAAOsK,KAAKD,GAAQE,wCAGpB,IAAAC,EAC2BvM,KAAKrB,MAA/ByN,EADDG,EACCH,OAAQ9F,EADTiG,EACSjG,cAEhB,OACEwC,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,4BACbF,EAAA/E,EAAAgF,cAAA,QAAMC,UAAU,+BACdF,EAAA/E,EAAAgF,cAAA,gBACED,EAAA/E,EAAAgF,cAAA,kCACAD,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,sBACbF,EAAA/E,EAAAgF,cAAA,SAAOyD,QAAQ,SAAf,mBACA1D,EAAA/E,EAAAgF,cAAA,SACEC,UAAS,kBAAA1I,OACP8L,EAAO5F,MAAQ,eAAiB,IAElCtH,GAAG,QACHD,KAAK,OACLwB,MAAO6F,EAAcF,MAAM,CAAC,UAAW,WAAa,GACpDsE,SAAU1K,KAAK8L,sBAKrBhD,EAAA/E,EAAAgF,cAAA,gBACED,EAAA/E,EAAAgF,cAAA,wBACAD,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,sBACbF,EAAA/E,EAAAgF,cAAA,SAAOyD,QAAQ,aAAf,aACA1D,EAAA/E,EAAAgF,cAAA,SACEC,UAAS,kBAAA1I,OACP8L,EAAO1F,UAAY,eAAiB,IAEtCxH,GAAG,YACHD,KAAK,OACLwB,MAAO6F,EAAcF,MAAM,CAAC,SAAU,eAAiB,GACvDsE,SAAU1K,KAAK+L,mBAGnBjD,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,iBACbF,EAAA/E,EAAAgF,cAAA,UACE9J,KAAK,SACL+J,UAAU,kCACVO,QAASvJ,KAAKgM,YAHhB,mBAnGcnB,cA0HblC,cACbC,YATe,SAAAjK,GAAK,MAAK,CACzB2H,cAAe3H,EAAM2H,gBAGH,SAAAzE,GAAA,IAAoBc,EAApBd,EAAGyE,cAAiB3D,iBAApB,MAA8C,CAChEA,iBAAkB,SAAA7D,GAAO,OAAI6D,EAAiB7D,MAI9C8J,CAGEiD,IC/DWlD,cACbC,YAZe,SAAAjK,GAAK,MAAK,CACzB4J,MAAO5J,EAAM4J,MACb/B,MAAO7H,EAAM2H,cAAcF,MAAM,CAAC,UAAW,UAC7CM,UAAW/H,EAAM2H,cAAcF,MAAM,CAAC,SAAU,gBAG9B,SAAAtE,GAAA,IAAA2K,EAAA3K,EAAGyG,MAAS9C,EAAZgH,EAAYhH,kBAAmBO,EAA/ByG,EAA+BzG,mBAA/B,MAA2D,CAC7EP,kBAAmB,kBAAMA,KACzBO,mBAAoB,kBAAMA,OAI1B4C,CAhEW,SAAA/G,GAAA,IACX0G,EADW1G,EACX0G,MACA/B,EAFW3E,EAEX2E,MACAE,EAHW7E,EAGX6E,UACAjB,EAJW5D,EAIX4D,kBACAO,EALWnE,EAKXmE,mBALW,OAOX8C,EAAA/E,EAAAgF,cAAA,WACED,EAAA/E,EAAAgF,cAAC2D,EAAD,CAAelM,IAAG,GAAAF,OAAKkG,GAALlG,OAAaoG,KAC/BoC,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,kBACbF,EAAA/E,EAAAgF,cAAA,4EACAD,EAAA/E,EAAAgF,cAAA,oFAC2E,IACzED,EAAA/E,EAAAgF,cAAA,yCAFF,2CAIED,EAAA/E,EAAAgF,cAAA,UACE9J,KAAK,SACL+J,UAAU,kCACVO,QAAS9D,GAHX,eAOqC,MAApC8C,EAAMhJ,IAAI,uBACTuJ,EAAA/E,EAAAgF,cAAA,QAAMC,UAAS,UAAA1I,OAAYiI,EAAMhJ,IAAI,yBACnCuJ,EAAA/E,EAAAgF,cAAA,WADF,sBAEsB,IACpBD,EAAA/E,EAAAgF,cAAA,cAASR,EAAMhJ,IAAI,wBAHrB,KAKE,MAGNuJ,EAAA/E,EAAAgF,cAAA,+EAEED,EAAA/E,EAAAgF,cAAA,UACE9J,KAAK,SACL+J,UAAU,kCACVO,QAASvD,GAHX,cAOsC,MAArCuC,EAAMhJ,IAAI,wBACTuJ,EAAA/E,EAAAgF,cAAA,QAAMC,UAAS,UAAA1I,OAAYiI,EAAMhJ,IAAI,0BACnCuJ,EAAA/E,EAAAgF,cAAA,WADF,qBAEqB,IACnBD,EAAA/E,EAAAgF,cAAA,cAASR,EAAMhJ,IAAI,yBAHrB,KAKE,WC7CNoN,qBACJ,SAAAA,EAAY9C,GAAO,IAAAvF,EAAA,OAAAvC,OAAA+H,EAAA,EAAA/H,CAAA/B,KAAA2M,IACjBrI,EAAAvC,OAAAgI,EAAA,EAAAhI,CAAA/B,KAAA+B,OAAAiI,EAAA,EAAAjI,CAAA4K,GAAA1C,KAAAjK,KAAM6J,KAEDlL,MAAQ,CACXwH,iBAAkB0D,EAAM1D,iBAAiBvF,IACvC,UACAiJ,EAAM1D,iBACH5G,IAAI,WACJuB,OACA8L,KAAK,OAEVR,OAAQ,IAXO9H,mFAeC+F,GAClBrK,KAAKsK,SAAS,CACZnE,iBAAkBnG,KAAKrB,MAAMwH,iBAAiBvF,IAC5C,UACAyJ,EAAME,OAAO9J,2CAMjB,IAAM2L,EAAS,GAOf,OALKpM,KAAKrB,MAAMwH,iBAAiB5G,IAAI,aACnC6M,EAAO/F,SAAU,GAGnBrG,KAAKsK,SAAS,CAAE8B,OAAQA,IACc,IAA/BrK,OAAOsK,KAAKD,GAAQE,0CAGlBjC,GACT,IAAKrK,KAAKmM,UACR,OAAO,EAGTnM,KAAK6J,MAAMpH,oBACTzC,KAAKrB,MAAMwH,iBAAiBvF,IAC1B,UACApB,eACEQ,KAAKrB,MAAMwH,iBACR5G,IAAI,WACJsN,MAAM,KACNjL,IAAI,SAAAkL,GAAC,OAAIA,EAAEC,YAKpB/M,KAAK6J,MAAMqC,QAAQzM,KAAK,sCAIxB,OACEqJ,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,+BACbF,EAAA/E,EAAAgF,cAAA,QAAMC,UAAU,+BACdF,EAAA/E,EAAAgF,cAAA,gBACED,EAAA/E,EAAAgF,cAAA,mCACAD,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,sBACbF,EAAA/E,EAAAgF,cAAA,SAAOyD,QAAQ,eAAf,gBACA1D,EAAA/E,EAAAgF,cAAA,SACEC,UAAS,kBAAA1I,OACPN,KAAKrB,MAAMyN,OAAO/F,QAAU,eAAiB,IAE/CnH,GAAG,cACHD,KAAK,OACLwB,MAAOT,KAAKrB,MAAMwH,iBAAiB5G,IAAI,YAAc,GACrDmL,SAAU1K,KAAKgN,oBAAoBC,KAAKjN,QAE1C8I,EAAA/E,EAAAgF,cAAA,QAAMC,UAAU,4BAAhB,yCAIFF,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,iBACbF,EAAA/E,EAAAgF,cAAA,UACEC,UAAU,kCACVO,QAASvJ,KAAKgM,WAAWiB,KAAKjN,OAFhC,mBA9EiB6K,cAoGhBlC,cACbC,YATe,SAAAjK,GAAK,MAAK,CACzBwH,iBAAkBxH,EAAMwH,mBAGN,SAAAtE,GAAA,IAAuBY,EAAvBZ,EAAGsE,iBAAoB1D,oBAAvB,MAAoD,CACtEA,oBAAqB,SAAA3D,GAAO,OAAI2D,EAAoB3D,MAIpD8J,CAGE+D,IC3DWnN,SA/CF,SAAAqC,GAAA,IAAGqL,EAAHrL,EAAGqL,MAAOC,EAAVtL,EAAUsL,aAAcC,EAAxBvL,EAAwBuL,SAAUpE,EAAlCnH,EAAkCmH,UAAWqE,EAA7CxL,EAA6CwL,WAA7C,OACXvE,EAAA/E,EAAAgF,cAAA,OAAKC,UAAS,kBAAA1I,OAAoB0I,IAChCF,EAAA/E,EAAAgF,cAAA,SAAOC,UAAU,yBACfF,EAAA/E,EAAAgF,cAAA,aACED,EAAA/E,EAAAgF,cAAA,UACED,EAAA/E,EAAAgF,cAAA,kBACAD,EAAA/E,EAAAgF,cAAA,MAAIC,UAAU,qBAAd,aAGJF,EAAA/E,EAAAgF,cAAA,aACGmE,EAAMtL,IAAI,SAACzC,EAAMmO,GAAP,OACTxE,EAAA/E,EAAAgF,cAAA,MAAIvI,IAAKrB,GACP2J,EAAA/E,EAAAgF,cAAA,MAAIC,UAAU,kBAAkB7J,EAAKI,IAAI4N,IACzCrE,EAAA/E,EAAAgF,cAAA,MAAIC,UAAU,qBACZF,EAAA/E,EAAAgF,cAACE,EAAA,KAAD,CACEC,GAAE,GAAA5I,OAAK+M,EAAL,KAAA/M,OAAmBgN,GACrBtE,UAAU,mCAFZ,QADF,OAQEF,EAAA/E,EAAAgF,cAAA,UACE9J,KAAK,SACLsK,QAAS6D,EAASH,YAAWK,GAC7BtE,UAAU,eAHZ,cAUU,IAAfkE,EAAMzC,KACL3B,EAAA/E,EAAAgF,cAAA,UACED,EAAA/E,EAAAgF,cAAA,MAAIwE,QAAQ,KAAZ,oBAEA,OAGRzE,EAAA/E,EAAAgF,cAACE,EAAA,KAAD,CACEC,GAAE,GAAA5I,OAAK+M,EAAL,QACFrE,UAAU,qDAFZ,UCnBWL,cAAWC,YART,SAAAjK,GAAK,MAAK,CACzBmB,MAAOnB,EAAMmB,QAGK,SAAAgC,GAAA,IAAYN,EAAZM,EAAGhC,MAAS0B,WAAZ,MAAgC,CAClDA,WAAY,SAAA8L,GAAC,OAAI9L,EAAW8L,MAGJ1E,CAlBR,SAAA/G,GAAA,IAAG/B,EAAH+B,EAAG/B,MAAO0B,EAAVK,EAAUL,WAAV,OAChBsH,EAAA/E,EAAAgF,cAACyE,EAAD,CACEN,MAAOpN,EACPqN,aAAa,OACbC,SAAU5L,EACV6L,WAAW,SACXrE,UAAU,kBC8CCL,iCACbC,YATe,SAAAjK,GACf,MAAO,CACLqG,SAAUrG,EAAMqG,WAIA,iBAAO,IAGzB4D,CAhCwB,SAAA/G,GAAA,IACxB1C,EADwB0C,EACxB1C,KACA0J,EAFwBhH,EAExBgH,MACA5J,EAHwB4C,EAGxB5C,KACAwO,EAJwB5L,EAIxB4L,MACAzI,EALwBnD,EAKxBmD,SACA0I,EANwB7L,EAMxB6L,kBANwB,OAQxB5E,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,sBAAsBU,MAAOvK,EAAKI,IAAI,eA7BnC,SAACJ,EAAMF,EAAM+F,GAC/B,IAAM5F,EAAY4F,EAASoB,MAAM,CAC/B,aACAnH,EACAE,EAAKI,IAAI,gBAEX,OACEuJ,EAAA/E,EAAAgF,cAAA,WACED,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,oBAAoBU,MAAOtK,EAAUG,IAAI,gBACrDH,EAAUG,IAAI,gBAEjBuJ,EAAA/E,EAAAgF,cAAA,OACEC,UAAU,8BACVU,MAAOtK,EAAUG,IAAI,yBAEpBH,EAAUG,IAAI,0BAelBoO,CAAYxO,EAAMF,EAAM+F,GACzB8D,EAAA/E,EAAAgF,cAACE,EAAA,KAAD,CAAMC,GAAE,UAAA5I,OAAYuI,EAAM+E,OAAOC,QAAzB,KAAAvN,OAAoCrB,EAApC,KAAAqB,OAA4CmN,IAClD3E,EAAA/E,EAAAgF,cAAA,OAAKW,MAAM,OAAOV,UAAU,gBAG9BF,EAAA/E,EAAAgF,cAAA,UACE9J,KAAK,SACLsK,QAASmE,EAAkBT,YAAWhO,EAAMwO,GAC5C/D,MAAM,SACNV,UAAU,qBCvCV8E,EAAgB,SAAC7O,EAAM4J,EAAOqD,GAClCA,EAAQzM,KAAR,UAAAa,OAAuBuI,EAAM+E,OAAOC,QAApC,KAAAvN,OAA+CrB,EAA/C,UAiCa0J,cA9BY,SAAA9G,GAAA,IACzBqL,EADyBrL,EACzBqL,MACAjO,EAFyB4C,EAEzB5C,KACA4J,EAHyBhH,EAGzBgH,MACAqD,EAJyBrK,EAIzBqK,QACAwB,EALyB7L,EAKzB6L,kBALyB,OAOzB5E,EAAA/E,EAAAgF,cAAA,WACED,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,wBACZkE,EAAMtL,IAAI,SAACzC,EAAMmO,GAAP,OACTxE,EAAA/E,EAAAgF,cAACgF,EAAD,CACEvN,IAAKrB,EACLA,KAAMA,EACNF,KAAMA,EACNwO,MAAOH,EACPI,kBAAmBA,OAKzB5E,EAAA/E,EAAAgF,cAAA,UACE9J,KAAK,SACLsK,QAASuE,EAAcb,YAAWhO,EAAM4J,EAAOqD,GAC/ClD,UAAU,8CAHZ,UCrBEgF,GAAY,SAAAnM,GAKZ,IAHiBoM,EAGjBpM,EAJJgH,MACE+E,OAAUC,QAEZ/N,EACI+B,EADJ/B,MAEA,MAAkB,QAAXmO,IAAqBnO,GAASmO,GAAUnO,EAAM2K,MAMnDyD,IAAkB,EAiBhBC,GAAiB,SAAAtE,GACrB,IAjBwBtC,EAiBlB0G,EAASpE,EAAMhB,MAAM+E,OAAOC,QAG5BnF,EAAgBmB,EAAhBnB,YAYN,OAhCwBnB,EAqBDsC,EAAMuE,aApBzBF,KAIJA,IAAkB,EAEb3G,GAIEA,EAAS8G,SAASxF,MACvB,uDAUAH,EAAc,OAGZA,GAAeA,EAAYnJ,IAAI,QAAU0O,EACpCvF,GAECmB,EAAM/J,OAASN,kBAAQD,IAAI0O,IAAWrO,iBAGpCgB,IAAI,KAAMqN,IAIlBK,eACJ,SAAAA,EAAYzE,GAAO,IAAAvF,EAAA,OAAAvC,OAAA+H,EAAA,EAAA/H,CAAA/B,KAAAsO,IACjBhK,EAAAvC,OAAAgI,EAAA,EAAAhI,CAAA/B,KAAA+B,OAAAiI,EAAA,EAAAjI,CAAAuM,GAAArE,KAAAjK,KAAM6J,KAYRmC,WAAa,WACX,IAAK1H,EAAK6H,UACR,OAAO,EAFQ,IAAAF,EAab3H,EAAKuF,MAPP1I,EANe8K,EAMf9K,QACAI,EAPe0K,EAOf1K,SAEqB0M,EATNhC,EAQfpD,MACE+E,OAAUC,QAEZhP,EAXeoN,EAWfpN,eACAqN,EAZeD,EAYfC,QAGM9K,EAASkD,EAAK3F,MAAdyC,KAWR,OAVe4M,GAAU1J,EAAKuF,OAAS1I,EAAUI,GAE1C,CACLrC,GAAI+O,EACJ7M,SAGFvC,EAAe,MACfqN,EAAQzM,KAAK,WAEN,GAvCU6E,EA0CnBiK,iBAAmB,SAAAlE,GAAS,IAClBjJ,EAASkD,EAAK3F,MAAdyC,KACAvC,EAAmByF,EAAKuF,MAAxBhL,eACF2P,EAAUpN,EAAKR,IAAI,OAAQyJ,EAAME,OAAO9J,OAE9C5B,EAAe2P,GACflK,EAAKgG,SAAS,CAAElJ,KAAMoN,KAhDLlK,EAmDnBmK,kBAAoB,YAElB5P,EAD2ByF,EAAKuF,MAAxBhL,gBACO,OArDEyF,EAwDnBoJ,kBAAoB,SAACzO,EAAMwO,GAAU,IAC3B5O,EAAmByF,EAAKuF,MAAxBhL,eAEF2P,EADWlK,EAAK3F,MAAdyC,KACasN,SAAS,CAACzP,EAAMwO,IAErC5O,EAAe2P,GACflK,EAAKgG,SAAS,CAAElJ,KAAMoN,KA3DtBlK,EAAK3F,MAAQ,CACXyC,KAAM+M,GAAetE,GACrBuC,OAAQ,IALO9H,sFAUjB4J,IAAkB,oCAwDlB,IAAM9B,EAAS,GAQf,OAPiBpM,KAAKrB,MAAdyC,KAEE7B,IAAI,UACZ6M,EAAOlK,MAAO,GAGhBlC,KAAKsK,SAAS,CAAE8B,WACsB,IAA/BrK,OAAOsK,KAAKD,GAAQE,wCAGpB,IAAAC,EACkBvM,KAAKrB,MAAtByC,EADDmL,EACCnL,KAAMgL,EADPG,EACOH,OACd,OACEtD,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,oBACbF,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,cACbF,EAAA/E,EAAAgF,cAAA,QAAMC,UAAU,aACdF,EAAA/E,EAAAgF,cAAA,gBACED,EAAA/E,EAAAgF,cAAA,cACED,EAAA/E,EAAAgF,cAAA,cACGiF,GAAUhO,KAAK6J,OAAS,SAAW,OADtC,UAIFf,EAAA/E,EAAAgF,cAAA,SACE9J,KAAK,OACL+J,UAAWoD,EAAOlK,KAAO,eAAiB,GAC1CyM,YAAY,YACZlO,MAAOW,EAAK7B,IAAI,SAAW,GAC3BmL,SAAU1K,KAAKuO,qBAIrBzF,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,mBACbF,EAAA/E,EAAAgF,cAAA,wBACAD,EAAA/E,EAAAgF,cAAC6F,EAAD,CACElB,kBAAmB1N,KAAK0N,kBACxBR,MAAO9L,EAAK7B,IAAI,WAAaC,iBAC7BP,KAAK,YAGT6J,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,mBACbF,EAAA/E,EAAAgF,cAAA,4BACAD,EAAA/E,EAAAgF,cAAC6F,EAAD,CACElB,kBAAmB1N,KAAK0N,kBACxBR,MAAO9L,EAAK7B,IAAI,eAAiBC,iBACjCP,KAAK,gBAGT6J,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,mBACbF,EAAA/E,EAAAgF,cAAA,yBACAD,EAAA/E,EAAAgF,cAAC6F,EAAD,CACElB,kBAAmB1N,KAAK0N,kBACxBR,MAAO9L,EAAK7B,IAAI,YAAcC,iBAC9BP,KAAK,aAGT6J,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,oBACbF,EAAA/E,EAAAgF,cAAA,UACE9J,KAAK,SACLsK,QAASvJ,KAAKgM,WACdhD,UAAU,mCAHZ,QADF,OASEF,EAAA/E,EAAAgF,cAACE,EAAA,KAAD,CACEM,QAASvJ,KAAKyO,kBACdvF,GAAG,SACHF,UAAU,eAHZ,oBApIW6B,aAkKRlC,eACbC,YAjBe,SAAAjK,GACf,MAAO,CACL+J,YAAa/J,EAAM+J,YACnB5I,MAAOnB,EAAMmB,QAIG,SAAAgC,GAAA,IAAA+M,EAAA/M,EAClBhC,MAASyB,EADSsN,EACTtN,SAAUJ,EADD0N,EACC1N,QACJtC,EAFGiD,EAElB4G,YAAe7J,eAFG,MAGb,CACLsC,QAAS,SAAArC,GAAO,OAAIqC,EAAQrC,IAC5ByC,SAAU,SAAAzC,GAAO,OAAIyC,EAASzC,IAC9BD,eAAgB,SAAAC,GAAO,OAAID,EAAeC,MAI1C8J,CAGEkG,2BAAiBR,uBCzNfS,sMAEF/O,KAAKgP,4DAILhP,KAAKiP,IAAIC,UAAY,GACrBlP,KAAKgP,gDAGE,IAAA/C,EACuBjM,KAAK6J,MAA3BzK,EADD6M,EACC7M,UAAW+P,EADZlD,EACYkD,OAEnB,IAAK/P,EACH,MAAO,GAGT,IAAMgE,EAAO+L,EAAO5P,IAAI,QAClB8D,EAAO8L,EAAO5P,IAAI,QACpB4J,EAAO/J,EAAUG,IAAI,YAMzB,OAJK4J,IACHA,EAAO,uBAGT,GAAA7I,OAAU8C,EAAV,KAAA9C,OAAkB+C,EAAlB,KAAA/C,OAA0B6I,0CAI1B,IAAMiG,EAAMpP,KAAKqP,SADJC,EAUTtP,KAAK6J,MAPPnC,EAHW4H,EAGX5H,oBACAO,EAJWqH,EAIXrH,6BACA/B,EALWoJ,EAKXpJ,SACAI,EANWgJ,EAMXhJ,cACAH,EAPWmJ,EAOXnJ,iBACAnD,EARWsM,EAQXtM,uBACAyF,EATW6G,EASX7G,iBAGF,GAAK2G,EAAL,CAIA,IAAMG,EAAuB,CAC3BrJ,SAAUA,GAAYA,EAASpF,OAC/ByF,QAASD,EAAc/G,IAAI,WAAWuB,OACtCqF,iBAAkBA,EAAiBrF,OACnC2F,OAAQH,EAAc/G,IAAI,UAAUuB,QAGlCkC,IACFuM,EAAqBC,kBAAoBxM,EACtCzD,IAAI,YACJuB,QA6BL2H,EA1BkBgH,aAAW,CAC3BL,MACAM,UAAW1P,KAAKiP,IAChBM,uBACAI,0BAA2B,IAC3BC,eAL2B,WAKE,IAAdC,EAAcrK,UAAA8G,OAAA,QAAAwD,IAAAtK,UAAA,GAAAA,UAAA,GAAJ,GACvB,OAAO,IAAIuK,QAAQ,SAACC,EAASC,GAC3BvI,EAAoB,CAClBG,KAAMgI,EAAQhI,KACdC,OAAQkI,EACRjI,QAASkI,MAEVC,MAAM,eAEXC,gBAd2B,aAe3BC,wBAf2B,WAgBzB,OAAO,IAAIL,QAAQ,SAACC,EAASC,GAC3BhI,EAA6B,CAC3BH,OAAQkI,EACRjI,QAASkI,MAEVC,MAAM,iBAAM,MAEjBG,YAvB2B,kDA6BtB,IAAA/L,EAAAtE,KACP,OACE8I,EAAA/E,EAAAgF,cAAA,OACEuH,IAAK,SAAAC,GACHjM,EAAK2K,IAAMsB,GAEbvH,UAAU,4BA5FY6B,cA+GfjC,eAbE,SAAAjK,GAAK,MAAK,CACzBwH,iBAAkBxH,EAAMwH,iBACxBG,cAAe3H,EAAM2H,gBAEH,SAAAzE,GAAA,IACD4G,EADC5G,EAClB2G,cAAiBC,iBADC+H,EAAA3O,EAElB4F,OAAUC,EAFQ8I,EAER9I,oBAAqBO,EAFbuI,EAEavI,6BAFb,MAGb,CACLQ,iBAAkB,SAAA3J,GAAO,OAAI2J,EAAiB3J,IAC9C4I,oBAAqB,SAAA5I,GAAO,OAAI4I,EAAoB5I,IACpDmJ,6BAA8B,SAAAnJ,GAAO,OAAImJ,EAA6BnJ,MAGzD8J,CAGbmG,ICpHa0B,UAAA,SAAA5O,GAAA,IAAG6O,EAAH7O,EAAG6O,QAAH,OACb5H,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,qCACbF,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,YACbF,EAAA/E,EAAAgF,cAAA,YACAD,EAAA/E,EAAAgF,cAAA,YACAD,EAAA/E,EAAAgF,cAAA,YACAD,EAAA/E,EAAAgF,cAAA,aAED2H,KCHCC,GAAiB,SAACC,EAAa3R,EAAMyJ,GAApB,MACL,QAAhBkI,GACAA,IAAgBlI,EAAYnJ,IAAIN,IAASO,kBAAQiL,MAE7C0D,GAAiB,SAACzF,EAAa5I,EAAOmO,GAS1C,OANIvF,GAAeA,EAAYnJ,IAAI,QAAU0O,EACpCvF,GAEC5I,GAASN,kBAAQD,IAAI0O,IAAWrO,iBAE9BgB,IAAI,KAAMqN,IAIlB4C,GAAe,SAAAhP,GAMf,IAAAiP,EAAAjP,EALJgH,MACE+E,OAAU3O,EAIR6R,EAJQ7R,KAAoB2R,EAI5BE,EAJcC,aAAoC9C,EAIlD6C,EAJyCjD,QAE7C/N,EAEI+B,EAFJ/B,MACA4I,EACI7G,EADJ6G,YAGA,OADayF,GAAezF,EAAa5I,EAAOmO,GAEzC7H,MAAM,CAACnH,EAAM2R,KAClBhR,cAAI,CACFoR,WAAY,GACZ9K,SAAU,QAKV+K,eACJ,SAAAA,EAAYpH,GAAO,IAAAvF,EAAAvC,OAAA+H,EAAA,EAAA/H,CAAA/B,KAAAiR,IACjB3M,EAAAvC,OAAAgI,EAAA,EAAAhI,CAAA/B,KAAA+B,OAAAiI,EAAA,EAAAjI,CAAAkP,GAAAhH,KAAAjK,KAAM6J,KAkBRqH,0BAA4B,SAAA7G,GAAS,IAC3BjL,EAAckF,EAAK3F,MAAnBS,UAERkF,EAAKgG,SAAS,CACZlL,UAAWA,EAAU6C,MAAM,CACzBiE,SAAU,KACV8K,WAAY3G,EAAME,OAAO9J,WAzBZ6D,EA8BnB6M,kBAAoB,SAAA9G,GAAS,IACnBjL,EAAckF,EAAK3F,MAAnBS,UAEIqB,EACR4J,EADFE,OAAU9J,MAGN2Q,EAAehS,EAAUwB,IAAI,QAASH,GAC5C6D,EAAKgG,SAAS,CAAElL,UAAWgS,KArCV9M,EAwCnB0H,WAAa,WACX,IAAK1H,EAAK6H,UACR,OAAO,EAFQ,IAKT/M,EAAckF,EAAK3F,MAAnBS,UALS6M,EAeb3H,EAAKuF,MAPPxK,EARe4M,EAQf5M,aACAN,EATekN,EASflN,cATesS,EAAApF,EAUfpD,MACE+E,OAAwBgD,EAXXS,EAWHN,aAA2B9R,EAXxBoS,EAWwBpS,KAEvCuJ,EAbeyD,EAafzD,cACA0D,EAdeD,EAcfC,QAGMxD,EAAgBpE,EAAK3F,MAArB+J,YAEFzB,EAAS0J,GAAeC,EAAa3R,EAAMyJ,GAC7CrJ,EACAN,EAwBJ,OAtBAuF,EAAKgG,SAAS,CACZgH,6BAA6B,IAG/B9I,EAAc+I,QACXC,KAAK,SAAAC,GAAG,OAAI1B,QAAQ2B,IAAI,CAACD,EAAIE,WAAYF,EAAIG,kBAC7CJ,KAAK,SAAA1P,GAAyB,IAAA+P,EAAA9P,OAAAC,EAAA,EAAAD,CAAAD,EAAA,GAAvBqK,EAAuB0F,EAAA,GAAd3L,EAAc2L,EAAA,GACzB1F,GACFlF,EAAO,CACL/H,GAAI0R,EACJ3R,OACAG,UAAWA,EAAU6C,MAAM,CAAEiE,eAG/BgG,EAAQzM,KAAK6E,EAAKwN,aAElBxN,EAAKgG,SAAS,CACZgH,6BAA6B,OAK9B,GAlFP,IAAM5I,EAAcyF,GAClBtE,EAAMnB,YACNmB,EAAM/J,MACN+J,EAAMhB,MAAM+E,OAAOC,SANJ,OASjBvJ,EAAK3F,MAAQ,CACXyN,OAAQ,GACRkF,6BAA6B,EAC7BlS,UAAWyR,GAAahH,GACxBnB,eAGFmB,EAAMhL,eAAe6J,GAhBJpE,+EAwFH,IAAAgL,EAMVtP,KAAK6J,MAHK5K,EAHAqQ,EAEZzG,MACE+E,OAAU3O,KAEZ+F,EALYsK,EAKZtK,SAEI+M,EAAgB,GAChBC,EAAY,GA2BlB,OAzBChN,EAASoB,MAAM,CAAC,aAAcnH,KAAUO,kBAAQyL,WAAWgH,QAAQ,SAAA/G,GAC7D6G,EAAc7G,EAAE3L,IAAI,2BACvBwS,EAAc7G,EAAE3L,IAAI,yBAA2B,IAEjDwS,EAAc7G,EAAE3L,IAAI,yBAAyBE,KAC3CqJ,EAAA/E,EAAAgF,cAAA,UACEtI,MAAK,GAAAH,OAAK4K,EAAE3L,IAAI,iBAAX,KAAAe,OAA+B4K,EAAE3L,IAAI,YAC1CiB,IAAG,aAAAF,OAAe4K,EAAE3L,IAAI,aAEvB2L,EAAE3L,IAAI,mBAKbwC,OAAOsK,KAAK0F,GAAeE,QAAQ,SAAAC,GACjCF,EAAUvS,KACRqJ,EAAA/E,EAAAgF,cAAA,YACEvI,IAAG,oBAAAF,OAAsB4R,GACzBC,MAAOD,GAENH,EAAcG,OAKdF,oCAIP,IAAM5F,EAAS,GAQf,OAPsBpM,KAAKrB,MAAnBS,UAEOG,IAAI,gBACjB6M,EAAO4E,YAAa,GAGtBhR,KAAKsK,SAAS,CAAE8B,WACsB,IAA/BrK,OAAOsK,KAAKD,GAAQE,0CAGlB,IAGc2B,EAEnBjO,KAAK6J,MAHPhB,MACE+E,OAAUC,QAId,gBAAAvN,OAAiB2N,oCAGV,IAAA1B,EACoDvM,KAAKrB,MAAxD2S,EADD/E,EACC+E,4BAA6BlS,EAD9BmN,EAC8BnN,UAAWgN,EADzCG,EACyCH,OADzCgG,EAQHpS,KAAK6J,MAJK5K,EAJPmT,EAGLvJ,MACE+E,OAAU3O,KAEZ+F,EANKoN,EAMLpN,SACAlC,EAPKsP,EAOLtP,wBAGIuP,EAAyBrN,EAASoB,MAAM,CAC5C,aACAnH,EACAG,EAAUG,IAAI,gBAGVI,EAAgBP,EAAUG,IAAI,cAAcsN,MAAM,KAAK,GAE7D,OACE/D,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,mCACZsI,EACCxI,EAAA/E,EAAAgF,cAAC0H,GAAD,CAAUC,QAAQ,0CAChB,KACJ5H,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,cACbF,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,0BACbF,EAAA/E,EAAAgF,cAAA,QAAMC,UAAU,+BACdF,EAAA/E,EAAAgF,cAAA,gBACED,EAAA/E,EAAAgF,cAAA,+BACAD,EAAA/E,EAAAgF,cAAA,SAAOyD,QAAQ,iBACb1D,EAAA/E,EAAAgF,cAAA,oBACAD,EAAA/E,EAAAgF,cAAA,UACE7J,GAAG,gBACH8J,UAAWoD,EAAO4E,WAAa,eAAiB,GAChDvQ,MAAOrB,EAAUG,IAAI,cACrBmL,SAAU1K,KAAKkR,2BAEfpI,EAAA/E,EAAAgF,cAAA,UAAQtI,MAAM,IAAd,oBACCT,KAAK+R,kBAGVjJ,EAAA/E,EAAAgF,cAAA,WAEAD,EAAA/E,EAAAgF,cAAA,SAAOyD,QAAQ,SACb1D,EAAA/E,EAAAgF,cAAA,qBACAD,EAAA/E,EAAAgF,cAAA,SACE7J,GAAG,QACHD,KAAK,OACLwB,MAAOrB,EAAUG,IAAI,UAAY,KACjCmL,SAAU1K,KAAKmR,uBAMvBrI,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,oBACbF,EAAA/E,EAAAgF,cAAA,UACE9J,KAAK,SACL+J,UAAU,kCACVO,QAASvJ,KAAKgM,YAHhB,QADF,OASElD,EAAA/E,EAAAgF,cAACE,EAAA,KAAD,CAAMC,GAAIlJ,KAAK8R,WAAY9I,UAAU,eAArC,aAMNF,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,cACbF,EAAA/E,EAAAgF,cAACuJ,GAAD,CACElT,UAAWiT,EACXrP,uBAAwBF,EACrByP,OAAO,SAAAjF,GAAC,OAAIA,EAAE/N,IAAI,UAAYI,IAC9B6S,QACHtM,SAAU9G,EAAUG,IAAI,YACxB4P,OAAQnK,EAASoB,MAAM,CAAC,cAAe,sBAjOnByE,aA6PjBlC,eACbC,YArBe,SAAAjK,GACf,MAAO,CACLmB,MAAOnB,EAAMmB,MACb4I,YAAa/J,EAAM+J,YACnBF,cAAe7J,EAAM6J,cACrBxD,SAAUrG,EAAMqG,SAChBlC,wBAAyBnE,EAAMmE,0BAIf,SAAA2P,GAAA,IACTlR,EADSkR,EAClB3S,MAASyB,SADSmR,EAAAD,EAElB/J,YAAe7J,EAFG6T,EAEH7T,eAAgBE,EAFb2T,EAEa3T,cAAeM,EAF5BqT,EAE4BrT,aAF5B,MAGb,CACLkC,SAAU,SAAAzC,GAAO,OAAIyC,EAASzC,IAC9BD,eAAgB,SAAAC,GAAO,OAAID,EAAeC,IAC1CC,cAAe,SAAAD,GAAO,OAAIC,EAAcD,IACxCO,aAAc,SAAAP,GAAO,OAAIO,EAAaP,MAItC8J,CAGEqI,KCnRWtI,eACbC,YATe,SAAAjK,GAAK,MAAK,CACzBkB,aAAclB,EAAMkB,eAGF,SAAAiC,GAAA,IAAmBS,EAAnBT,EAAGjC,aAAgB0C,kBAAnB,MAA8C,CAChEA,kBAAmB,SAAA+K,GAAC,OAAI/K,EAAkB+K,MAI1C1E,CAnBuB,SAAA/G,GAAA,IAAGhC,EAAHgC,EAAGhC,aAAc0C,EAAjBV,EAAiBU,kBAAjB,OACvBuG,EAAA/E,EAAAgF,cAACyE,EAAD,CACEN,MAAOrN,EACPsN,aAAa,OACbC,SAAU7K,EACV8K,WAAW,iBACXrE,UAAU,0BCQR2J,GAAiB,SAAA7Q,GAKjB,IAHyB8Q,EAGzB9Q,EAJJ+G,MACE+E,OAAUiF,gBAIZ,OADI/Q,EADJjC,cAGmBL,kBAAQD,IAAIqT,IAC7BhT,cAAI,CACFoR,WAAY,GACZ9K,SAAU,QAKV4M,eAKJ,SAAAA,EAAYjJ,GAAO,IAAAvF,EAAA,OAAAvC,OAAA+H,EAAA,EAAA/H,CAAA/B,KAAA8S,IACjBxO,EAAAvC,OAAAgI,EAAA,EAAAhI,CAAA/B,KAAA+B,OAAAiI,EAAA,EAAAjI,CAAA+Q,GAAA7I,KAAAjK,KAAM6J,KAEDlL,MAAQ,CACX2S,6BAA6B,EAC7BjP,YAAasQ,GAAe9I,GAC5BuC,OAAQ,IANO9H,+EAHjB,MAAO,qFAaiB+F,GAAO,IACvBhI,EAAgBrC,KAAKrB,MAArB0D,YAERrC,KAAKsK,SAAS,CACZjI,YAAaA,EAAYJ,MAAM,CAC7BiE,SAAU,KACV8K,WAAY3G,EAAME,OAAO9J,oDAKbsS,EAAW1I,GAAO,IAC1BhI,EAAgBrC,KAAKrB,MAArB0D,YACAkI,EAAWF,EAAXE,OAEF9J,EAAwB,aAAhB8J,EAAOtL,KAAsBsL,EAAOyI,QAAUzI,EAAO9J,MAC7DsK,EAAiB1I,EAAYzB,IAAImS,EAAWtS,GAElDT,KAAKsK,SAAS,CACZjI,YAAa0I,yCAIJ,IAAAkI,EAAAjT,KACX,IAAKA,KAAKmM,UACR,OAAO,EAFE,IAAAF,EAWPjM,KAAK6J,MALPzH,EANS6J,EAMT7J,eACAE,EAPS2J,EAOT3J,gBACAkG,EARSyD,EAQTzD,cACA0D,EATSD,EASTC,QACS0B,EAVA3B,EAUTpD,MAAS+E,OAGHvL,EAAgBrC,KAAKrB,MAArB0D,YAEF4E,EA/Ea,SAAApF,GAKjB,IAHyB+Q,EAGzB/Q,EAJJgH,MACE+E,OAAUiF,gBAEZhT,EACIgC,EADJhC,aAEA,MACoB,QAAlB+S,GAA2BA,IAAkB/S,GAAgBL,kBAAQiL,KAwEtDkG,CAAe3Q,KAAK6J,OAC/BzH,EACAE,EAuBJ,OArBAtC,KAAKsK,SAAS,CACZgH,6BAA6B,IAG/B9I,EAAc+I,QACXC,KAAK,SAAAC,GAAG,OAAI1B,QAAQ2B,IAAI,CAACD,EAAIE,WAAYF,EAAIG,kBAC7CJ,KAAK,SAAAK,GAAyB,IAAAY,EAAA1Q,OAAAC,EAAA,EAAAD,CAAA8P,EAAA,GAAvB1F,EAAuBsG,EAAA,GAAdvM,EAAcuM,EAAA,GACzBtG,GACFlF,EAAO,CACL/H,GAAI0O,EAAOiF,gBACXxQ,YAAaA,EAAYJ,MAAM,CAAEiE,eAGnCgG,EAAQzM,KAAKwT,EAAKC,YAAYpB,aAE9BmB,EAAK3I,SAAS,CACZgH,6BAA6B,OAK9B,6CAIP,IAAMS,EAAgB,GAChBC,EAAY,GA8BlB,OA7BqBhS,KAAK6J,MAAlB7E,SAEEoB,MAAM,CAAC,aAAc,kBAAoB5G,kBAChDyL,WACAgH,QAAQ,SAAA/G,GACF6G,EAAc7G,EAAE3L,IAAI,2BACvBwS,EAAc7G,EAAE3L,IAAI,yBAA2B,IAEjDwS,EAAc7G,EAAE3L,IAAI,yBAAyBE,KAC3CqJ,EAAA/E,EAAAgF,cAAA,UACEtI,MAAK,GAAAH,OAAK4K,EAAE3L,IAAI,iBAAX,KAAAe,OAA+B4K,EAAE3L,IAAI,YAC1CiB,IAAG,aAAAF,OAAe4K,EAAE3L,IAAI,aAEvB2L,EAAE3L,IAAI,mBAKfwC,OAAOsK,KAAK0F,GAAeE,QAAQ,SAAAC,GACjCF,EAAUvS,KACRqJ,EAAA/E,EAAAgF,cAAA,YACEvI,IAAG,oBAAAF,OAAsB4R,GACzBC,MAAOD,GAENH,EAAcG,OAKdF,oCAIP,IAAM5F,EAAS,GACP/J,EAAgBrC,KAAKrB,MAArB0D,YACAmG,EAAkBxI,KAAK6J,MAAvBrB,cAWR,OATKnG,EAAY9C,IAAI,UACnB6M,EAAOlK,MAAO,GAGXG,EAAY9C,IAAI,eAAkBiJ,EAAc+I,UACnDnF,EAAO4E,YAAa,GAGtBhR,KAAKsK,SAAS,CAAE8B,WACsB,IAA/BrK,OAAOsK,KAAKD,GAAQE,wCAGpB,IAAAgD,EACuCtP,KAAK6J,MAA3C7E,EADDsK,EACCtK,SAAUlC,EADXwM,EACWxM,wBADXyJ,EAGsDvM,KAAKrB,MAA1D2S,EAHD/E,EAGC+E,4BAA6BlF,EAH9BG,EAG8BH,OAAQ/J,EAHtCkK,EAGsClK,YAEvCgQ,EAAyBrN,EAASoB,MAAM,CAC5C,aACA,eACA/D,EAAY9C,IAAI,gBAGZI,EAAgB0C,EAAY9C,IAAI,cAAcsN,MAAM,KAAK,GAE/D,OACE/D,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,mCACZsI,EACCxI,EAAA/E,EAAAgF,cAAC0H,GAAD,CAAUC,QAAQ,0CAChB,KACJ5H,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,cACbF,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,0BACbF,EAAA/E,EAAAgF,cAAA,QAAMC,UAAU,+BACdF,EAAA/E,EAAAgF,cAAA,gBACED,EAAA/E,EAAAgF,cAAA,kCACAD,EAAA/E,EAAAgF,cAAA,SAAOyD,QAAQ,mBACb1D,EAAA/E,EAAAgF,cAAA,oBACAD,EAAA/E,EAAAgF,cAAA,SACEC,UAAWoD,EAAOlK,KAAO,eAAiB,GAC1ChD,GAAG,kBACHD,KAAK,OACLwB,MAAO4B,EAAY9C,IAAI,SAAW,GAClCmL,SAAU1K,KAAKmT,kBAAkBlG,KAAKjN,KAAM,WAGhD8I,EAAA/E,EAAAgF,cAAA,WAEAD,EAAA/E,EAAAgF,cAAA,SAAOyD,QAAQ,mBACb1D,EAAA/E,EAAAgF,cAAA,oBACAD,EAAA/E,EAAAgF,cAAA,UACE7J,GAAG,kBACH8J,UAAWoD,EAAO4E,WAAa,eAAiB,GAChDvQ,MAAO4B,EAAY9C,IAAI,cACvBmL,SAAU1K,KAAKkR,0BAA0BjE,KAAKjN,OAE9C8I,EAAA/E,EAAAgF,cAAA,UAAQtI,MAAM,IAAd,oBACCT,KAAKoT,qBAGVtK,EAAA/E,EAAAgF,cAAA,WAEAD,EAAA/E,EAAAgF,cAAA,SAAOyD,QAAQ,gBACb1D,EAAA/E,EAAAgF,cAAA,6BACAD,EAAA/E,EAAAgF,cAAA,SACE7J,GAAG,eACHD,KAAK,OACLwB,MAAO4B,EAAY9C,IAAI,iBAAmB,GAC1CmL,SAAU1K,KAAKmT,kBAAkBlG,KAAKjN,KAAM,mBAGhD8I,EAAA/E,EAAAgF,cAAA,WAEAD,EAAA/E,EAAAgF,cAAA,SAAOyD,QAAQ,iBAAiBxD,UAAU,iBACxCF,EAAA/E,EAAAgF,cAAA,SACE7J,GAAG,iBACHD,KAAK,WACL+T,QAAS3Q,EAAY9C,IAAI,mBAAqB,GAC9CmL,SAAU1K,KAAKmT,kBAAkBlG,KAC/BjN,KACA,oBAED,IATL,oBAYA8I,EAAA/E,EAAAgF,cAAA,WACAD,EAAA/E,EAAAgF,cAAA,SAAOyD,QAAQ,YAAYxD,UAAU,iBACnCF,EAAA/E,EAAAgF,cAAA,SACE7J,GAAG,YACHD,KAAK,WACL+T,QAAS3Q,EAAY9C,IAAI,cAAgB,GACzCmL,SAAU1K,KAAKmT,kBAAkBlG,KAAKjN,KAAM,eAC3C,IANL,cASA8I,EAAA/E,EAAAgF,cAAA,WACAD,EAAA/E,EAAAgF,cAAA,SAAOyD,QAAQ,mBACb1D,EAAA/E,EAAAgF,cAAA,gCACAD,EAAA/E,EAAAgF,cAAA,UACE7J,GAAG,kBACHuB,MAAO4B,EAAY9C,IAAI,oBAAsB,GAC7CmL,SAAU1K,KAAKmT,kBAAkBlG,KAC/BjN,KACA,oBAGF8I,EAAA/E,EAAAgF,cAAA,UAAQtI,MAAM,IAAd,UACAqI,EAAA/E,EAAAgF,cAAA,UAAQtI,MAAM,YAAd,cACAqI,EAAA/E,EAAAgF,cAAA,UAAQtI,MAAM,WAAd,aACAqI,EAAA/E,EAAAgF,cAAA,UAAQtI,MAAM,WAAd,iBAMRqI,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,oBACbF,EAAA/E,EAAAgF,cAAA,UACE9J,KAAK,SACL+J,UAAU,kCACVO,QAASvJ,KAAKgM,WAAWiB,KAAKjN,OAHhC,QADF,OASE8I,EAAA/E,EAAAgF,cAACE,EAAA,KAAD,CAAMC,GAAIlJ,KAAKkT,YAAYpB,WAAY9I,UAAU,eAAjD,aAMNF,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,cACbF,EAAA/E,EAAAgF,cAACuJ,GAAD,CACElT,UAAWiT,EACXrP,uBAAwBF,EACrByP,OAAO,SAAAjF,GAAC,OAAIA,EAAE/N,IAAI,UAAYI,IAC9B6S,QACHtM,SAAU7D,EAAY9C,IAAI,YAC1B4P,OAAQnK,EAASoB,MAAM,CAAC,cAAe,sBAjQrByE,aAyRflC,eACbC,YAjBe,SAAAjK,GACf,MAAO,CACLkB,aAAclB,EAAMkB,aACpB2I,cAAe7J,EAAM6J,cACrBxD,SAAUrG,EAAMqG,SAChBlC,wBAAyBnE,EAAMmE,0BAIf,SAAAuQ,GAAA,IAAAC,EAAAD,EAClBxT,aAAgByC,EADEgR,EACFhR,gBAAiBF,EADfkR,EACelR,eADf,MAEb,CACLE,gBAAiB,SAAAxD,GAAO,OAAIwD,EAAgBxD,IAC5CsD,eAAgB,SAAAtD,GAAO,OAAIsD,EAAetD,MAI1C8J,CAGEkK,KCnSWnK,eACbC,YAXe,SAAAjK,GAAK,MAAK,CACzBmE,wBAAyBnE,EAAMmE,0BAGb,SAAAhB,GAAA,IACSoB,EADTpB,EAClBgB,wBAA2BI,6BADT,MAEb,CACLA,6BAA8B,SAAAoK,GAAC,OAAIpK,EAA6BoK,MAIhE1E,CAxBkC,SAAA/G,GAAA,IAClCiB,EADkCjB,EAClCiB,wBACAI,EAFkCrB,EAElCqB,6BAFkC,OAIlC4F,EAAA/E,EAAAgF,cAACyE,EAAD,CACEN,MAAOpK,EACPqK,aAAa,cACbC,SAAUlK,EACVmK,WAAW,4BACXrE,UAAU,qCCNRuK,GAA8B,SAAA1R,GAAA,IAClCiB,EADkCjB,EAClCiB,wBAEwC0Q,EAHN3R,EAElCgH,MACE+E,OAAU6F,2BAHsB,MAML,QAA7BD,GACAA,IAA6B1Q,GAA2BtD,kBAAQiL,MAE5DiJ,GAA4B,SAAA5R,GAAA,IAChCgB,EADgChB,EAChCgB,wBAEwC0Q,EAHR1R,EAEhC+G,MACE+E,OAAU6F,2BAHoB,OAM/B3Q,GAA2BtD,kBAAQD,IAAIiU,IACxC5T,cAAI,CACFsC,KAAM,GACNgE,SAAU,QAGRyN,eAKJ,SAAAA,EAAY9J,GAAO,IAAAvF,EAAA,OAAAvC,OAAA+H,EAAA,EAAA/H,CAAA/B,KAAA2T,IACjBrP,EAAAvC,OAAAgI,EAAA,EAAAhI,CAAA/B,KAAA+B,OAAAiI,EAAA,EAAAjI,CAAA4R,GAAA1J,KAAAjK,KAAM6J,KASR0E,iBAAmB,SAAAlE,GAAS,IAClBrH,EAA2BsB,EAAK3F,MAAhCqE,uBAERsB,EAAKgG,SAAS,CACZtH,uBAAwBA,EAAuBf,MAAM,CACnDiE,SAAU,KACVhE,KAAMmI,EAAME,OAAO9J,WAhBN6D,EAqBnB0H,WAAa,WACX,IAAK1H,EAAK6H,UACR,OAAO,EAFQ,IAAAF,EAYb3H,EAAKuF,MANP9G,EANekJ,EAMflJ,0BACAE,EAPegJ,EAOfhJ,2BACAuF,EAReyD,EAQfzD,cACA0D,EATeD,EASfC,QACAlH,EAVeiH,EAUfjH,SACS4I,EAXM3B,EAWfpD,MAAS+E,OAGH5K,EAA2BsB,EAAK3F,MAAhCqE,uBACFiE,EAASsM,GAA4BjP,EAAKuF,OAC5C9G,EACAE,EAEE2Q,EAAc5O,EAASoB,MAAM,CACjC,aACApD,EAAuBzD,IAAI,QAC3B,gBA2BF,OAxBA+E,EAAKgG,SAAS,CACZgH,6BAA6B,IAG/B9I,EAAc+I,QACXC,KAAK,SAAAC,GAAG,OAAI1B,QAAQ2B,IAAI,CAACD,EAAIE,WAAYF,EAAIG,kBAC7CJ,KAAK,SAAAK,GAAyB,IAAAY,EAAA1Q,OAAAC,EAAA,EAAAD,CAAA8P,EAAA,GAAvB1F,EAAuBsG,EAAA,GAAdvM,EAAcuM,EAAA,GACzBtG,GACFlF,EAAO,CACL/H,GAAI0O,EAAO6F,2BACXzQ,uBAAwBA,EAAuBf,MAAM,CACnD2R,cACA1N,eAIJgG,EAAQzM,KAAK6E,EAAK4O,YAAYpB,aAE9BxN,EAAKgG,SAAS,CACZgH,6BAA6B,OAK9B,GAnEPhN,EAAK3F,MAAQ,CACX2S,6BAA6B,EAC7BtO,uBAAwB0Q,GAA0B7J,GAClDuC,OAAQ,IANO9H,+EAHjB,MAAO,mGA8EP,OADqBtE,KAAK6J,MAAlB7E,SACSzF,IAAI,eAAiBC,kBACnC+S,OAAO,SAAAjF,GAAC,OAAIA,EAAE/N,IAAI,cAClB0L,WACArJ,IAAI,SAAAsJ,GAAC,OACJpC,EAAA/E,EAAAgF,cAAA,UACEtI,MAAOyK,EAAE3L,IAAI,QACbiB,IAAG,yBAAAF,OAA2B4K,EAAE3L,IAAI,UAEnC2L,EAAE3L,IAAI,oDAMb,IAAM6M,EAAS,GAQf,OAPmCpM,KAAKrB,MAAhCqE,uBAEoBzD,IAAI,UAC9B6M,EAAOlK,MAAO,GAGhBlC,KAAKsK,SAAS,CAAE8B,WACsB,IAA/BrK,OAAOsK,KAAKD,GAAQE,wCAGpB,IACCtH,EAAahF,KAAK6J,MAAlB7E,SADDuH,EAMHvM,KAAKrB,MAHPyN,EAHKG,EAGLH,OACApJ,EAJKuJ,EAILvJ,uBACAsO,EALK/E,EAKL+E,4BAGIe,EAAyBrN,EAASoB,MAAM,CAC5C,aACApD,EAAuBzD,IAAI,UAG7B,OACEuJ,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,mCACZsI,EACCxI,EAAA/E,EAAAgF,cAAC0H,GAAD,CAAUC,QAAQ,0CAChB,KACJ5H,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,cACbF,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,0BACbF,EAAA/E,EAAAgF,cAAA,QAAMC,UAAU,+BACdF,EAAA/E,EAAAgF,cAAA,gBACED,EAAA/E,EAAAgF,cAAA,0CACAD,EAAA/E,EAAAgF,cAAA,SAAOyD,QAAQ,8BACb1D,EAAA/E,EAAAgF,cAAA,oBACAD,EAAA/E,EAAAgF,cAAA,UACE7J,GAAG,6BACH8J,UAAWoD,EAAOlK,KAAO,eAAiB,GAC1CzB,MAAOuC,EAAuBzD,IAAI,QAClCmL,SAAU1K,KAAKuO,kBAEfzF,EAAA/E,EAAAgF,cAAA,UAAQtI,MAAM,IAAd,oBACCT,KAAK6T,iCAMd/K,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,oBACbF,EAAA/E,EAAAgF,cAAA,UACE9J,KAAK,SACL+J,UAAU,kCACVO,QAASvJ,KAAKgM,YAHhB,QADF,OASElD,EAAA/E,EAAAgF,cAACE,EAAA,KAAD,CAAMC,GAAIlJ,KAAKkT,YAAYpB,WAAY9I,UAAU,eAAjD,aAMNF,EAAA/E,EAAAgF,cAAA,OAAKC,UAAU,cACbF,EAAA/E,EAAAgF,cAACuJ,GAAD,CACElT,UAAWiT,EACXnM,SAAUlD,EAAuBzD,IAAI,YACrC4P,OAAQnK,EAASoB,MAAM,CAAC,cAAe,sBAlKVyE,aA4L1BlC,eACbC,YAnBe,SAAAjK,GACf,MAAO,CACLmE,wBAAyBnE,EAAMmE,wBAC/B0F,cAAe7J,EAAM6J,cACrBxD,SAAUrG,EAAMqG,WAIA,SAAAqO,GAAA,IAAAS,EAAAT,EAClBvQ,wBACEG,EAFgB6Q,EAEhB7Q,2BACAF,EAHgB+Q,EAGhB/Q,0BAHgB,MAKb,CACLE,2BAA4B,SAAAnE,GAAO,OAAImE,EAA2BnE,IAClEiE,0BAA2B,SAAAjE,GAAO,OAAIiE,EAA0BjE,MAIhE8J,CAGE+K,KC3MJ5O,EAAS,CAAE9F,KAAM,yBAmDF8U,oLA/CX,OACEjL,EAAA/E,EAAAgF,cAACiL,EAAA,EAAD,CAAU5L,MAAOA,GACfU,EAAA/E,EAAAgF,cAACE,EAAA,WAAD,KACEH,EAAA/E,EAAAgF,cAACkL,EAAA,qBAAD,KACEnL,EAAA/E,EAAAgF,cAACuC,EAAA,EAAD,KACExC,EAAA/E,EAAAgF,cAACmL,EAAD,CAAgBC,OAAK,EAAChL,KAAK,IAAI/J,UAAWwM,IAC1C9C,EAAA/E,EAAAgF,cAACmL,EAAD,CAAgBC,OAAK,EAAChL,KAAK,YAAY/J,UAAWgV,IAClDtL,EAAA/E,EAAAgF,cAACmL,EAAD,CACEC,OAAK,EACLhL,KAAK,qBACL/J,UAAWuN,IAEb7D,EAAA/E,EAAAgF,cAACmL,EAAD,CAAgBC,OAAK,EAAChL,KAAK,SAAS/J,UAAWiV,IAC/CvL,EAAA/E,EAAAgF,cAACmL,EAAD,CAAgBC,OAAK,EAAChL,KAAK,kBAAkB/J,UAAWkP,KACxDxF,EAAA/E,EAAAgF,cAACmL,EAAD,CACEC,OAAK,EACLhL,KAAK,iEACL/J,UAAW6R,KAEbnI,EAAA/E,EAAAgF,cAACmL,EAAD,CACEC,OAAK,EACLhL,KAAK,iBACL/J,UAAWkV,KAEbxL,EAAA/E,EAAAgF,cAACmL,EAAD,CACEC,OAAK,EACLhL,KAAK,kCACL/J,UAAW0T,KAEbhK,EAAA/E,EAAAgF,cAACmL,EAAD,CACEC,OAAK,EACLhL,KAAK,4BACL/J,UAAWmV,KAEbzL,EAAA/E,EAAAgF,cAACmL,EAAD,CACEC,OAAK,EACLhL,KAAK,wDACL/J,UAAWuU,gBAvCT9I,aCflB2J,IAAShJ,OAAO1C,EAAA/E,EAAAgF,cAAC0L,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.d251c792.chunk.js","sourcesContent":["import { List } from 'immutable';\n\nexport default {\n  state: null, // initial state\n  reducers: {\n    setCurrentRule(state, payload) {\n      return payload;\n    },\n    saveComponent(state, payload) {\n      return state.updateIn(\n        [payload.type, payload.id],\n        item => payload.component\n      );\n    },\n    addComponent(state, payload) {\n      return state.update(payload.type, item =>\n        (state.get(payload.type) || List()).push(payload.component)\n      );\n    }\n  }\n};\n","import { fromJS, Map } from 'immutable';\n\nexport default {\n  extensionName: null,\n  state: Map({\n    dataElements: [],\n    rules: [],\n    extensions: []\n  }),\n  get() {\n    return this.state;\n  },\n  loadStateFor(extensionName) {\n    this.extensionName = extensionName;\n\n    const state = JSON.parse(\n      localStorage.getItem(`sandbox-rule-editor-container-${extensionName}`)\n    );\n    if (state) {\n      this.state = fromJS(state);\n    }\n  },\n  update(key, value) {\n    if (key === 'extensions' || key === 'dataElements') {\n      value = value.reduce(\n        (result, item) => result.set(item.get('name'), item.delete('name')),\n        Map()\n      );\n    } else {\n      value = value.toJS();\n    }\n    this.state = this.state.set(key, value);\n\n    if (this.extensionName) {\n      localStorage.setItem(\n        `sandbox-rule-editor-container-${this.extensionName}`,\n        JSON.stringify(this.state.toJS())\n      );\n    }\n  }\n};\n","import { List } from 'immutable';\nimport localStorage from '../models/localStorage';\n\nexport default {\n  state: List(), // initial state\n  reducers: {\n    setRules(state, payload) {\n      localStorage.update('rules', payload);\n      return payload;\n    },\n    addRule(state, payload) {\n      const rules = state.push(payload.rule.set('id', `RL${Date.now()}`));\n      localStorage.update('rules', rules);\n      return rules;\n    },\n    saveRule(state, payload) {\n      const rules = state.update(payload.id, item =>\n        payload.rule.set('id', `RL${Date.now()}`)\n      );\n      localStorage.update('rules', rules);\n      return rules;\n    },\n    deleteRule(state, payload) {\n      const rules = state.delete(payload);\n      localStorage.update('rules', rules);\n      return rules;\n    }\n  }\n};\n","import { List } from 'immutable';\nimport localStorage from '../models/localStorage';\n\nexport default {\n  state: List(), // initial state\n  reducers: {\n    setDataElements(state, payload) {\n      const dataElements = payload\n        .entrySeq()\n        .map(([key, value]) => value.merge({ name: key }))\n        .toList();\n\n      localStorage.update('dataElements', dataElements);\n      return dataElements;\n    },\n    addDataElement(state, payload) {\n      const dataElements = state.push(payload.dataElement);\n      localStorage.update('dataElements', dataElements);\n      return dataElements;\n    },\n    saveDataElement(state, payload) {\n      const dataElements = state.update(\n        payload.id,\n        item => payload.dataElement\n      );\n      localStorage.update('dataElements', dataElements);\n      return dataElements;\n    },\n    deleteDataElement(state, payload) {\n      const dataElements = state.delete(payload);\n      localStorage.update('dataElements', dataElements);\n      return dataElements;\n    }\n  }\n};\n","import { Map } from 'immutable';\nimport localStorage from '../models/localStorage';\n\nexport default {\n  state: Map(), // initial state\n  reducers: {\n    setPropertySettings(state, payload) {\n      localStorage.update('property', Map().set('settings', payload));\n      return payload;\n    }\n  }\n};\n","import { Map } from 'immutable';\nimport localStorage from '../models/localStorage';\n\nexport default {\n  state: Map(), // initial state\n  reducers: {\n    setOtherSettings(state, payload) {\n      localStorage.update('otherSettings', payload);\n      return payload;\n    }\n  }\n};\n","import { List } from 'immutable';\nimport localStorage from '../models/localStorage';\n\nexport default {\n  state: List(), // initial state\n  reducers: {\n    setExtensionConfigurations(state, payload) {\n      const extensionConfigurations = payload\n        .entrySeq()\n        .map(([key, value]) => value.merge({ name: key }))\n        .toList();\n\n      localStorage.update('extensions', extensionConfigurations);\n      return extensionConfigurations;\n    },\n    addExtensionConfiguration(state, payload) {\n      const extensionConfigurations = state.push(\n        payload.extensionConfiguration\n      );\n      localStorage.update('extensions', extensionConfigurations);\n      return extensionConfigurations;\n    },\n    saveExtensionConfiguration(state, payload) {\n      const extensionConfigurations = state.update(\n        payload.id,\n        item => payload.extensionConfiguration\n      );\n      localStorage.update('extensions', extensionConfigurations);\n      return extensionConfigurations;\n    },\n    deleteExtensionConfiguration(state, payload) {\n      const extensionConfigurations = state.delete(payload);\n      localStorage.update('extensions', extensionConfigurations);\n      return extensionConfigurations;\n    }\n  }\n};\n","export default {\n  server: {\n    host: 'http://localhost',\n    port: 3000\n  }\n};\n","import { fromJS, Map } from 'immutable';\nimport environment from './environment';\nimport localStorage from './localStorage';\nimport { dispatch } from '../store';\n\nexport default {\n  state: Map(), // initial state\n  reducers: {\n    setContainerDataLoaded(state, payload) {\n      return state.set('containerDataLoaded', payload);\n    },\n    setContainerDataReseted(state, payload) {\n      return state.set('containerDataReseted', payload);\n    },\n    setInitialized(state, payload) {\n      return state.set('initialized', payload);\n    }\n  },\n  effects: {\n    async initialize(payload, rootState) {\n      const response = await fetch(\n        `${environment.server.host}:${\n          environment.server.port\n        }/editor-registry.js`\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        const jsData = fromJS(data);\n\n        dispatch.registry.setRegistry(jsData.delete('currentExtensionName'));\n        localStorage.loadStateFor(jsData.get('currentExtensionName'));\n\n        this.pushDataDown(localStorage.get());\n\n        setTimeout(() => {\n          this.setInitialized(true);\n        }, 0);\n      }\n    },\n\n    async loadContainerData(payload, rootState) {\n      const response = await fetch(\n        `${environment.server.host}:${\n          environment.server.port\n        }/editor-container.js`\n      );\n\n      if (response.ok) {\n        const containerData = await response.json();\n        this.pushDataDown(Map(containerData));\n        this.setContainerDataLoaded('success');\n      } else {\n        this.setContainerDataLoaded('failed');\n      }\n    },\n\n    clearContainerData(payload, rootState) {\n      this.pushDataDown(\n        Map({\n          extensions: [],\n          rules: [],\n          dataElements: [],\n          property: { settings: {} }\n        })\n      );\n\n      this.setContainerDataReseted('success');\n    },\n\n    pushDataDown(payload, rootState) {\n      dispatch.extensionConfigurations.setExtensionConfigurations(\n        fromJS(payload.get('extensions'))\n      );\n      dispatch.rules.setRules(fromJS(payload.get('rules')));\n      dispatch.dataElements.setDataElements(\n        fromJS(payload.get('dataElements'))\n      );\n\n      dispatch.propertySettings.setPropertySettings(\n        fromJS(\n          payload.getIn(['property', 'settings']) || {\n            domains: ['example.com']\n          }\n        )\n      );\n      dispatch.otherSettings.setOtherSettings(\n        fromJS(\n          payload.get('otherSettings') || {\n            company: {\n              orgId: 'ABCDEFGHIJKLMNOPQRSTUVWX@AdobeOrg'\n            },\n            tokens: {\n              imsAccess: 'fake-ims-access-token'\n            }\n          }\n        )\n      );\n    },\n\n    async save() {\n      const localStorageData = localStorage.get();\n      const containerData = localStorageData\n        .setIn(\n          ['company', 'orgId'],\n          localStorageData.get('otherSettings').company.orgId\n        )\n        .delete('otherSettings');\n\n      const response = await fetch(\n        `${environment.server.host}:${\n          environment.server.port\n        }/editor-container.js`,\n        {\n          method: 'POST',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(containerData)\n        }\n      );\n\n      if (response.ok) {\n        window.location = `${environment.server.host}:${\n          environment.server.port\n        }/libSandbox.html`;\n      } else {\n        alert('Something went bad!');\n      }\n    }\n  }\n};\n","import { fromJS, Map } from 'immutable';\n\nexport default {\n  state: Map(), // initial state\n  reducers: {\n    openCodeEditorModal(state, payload) {\n      return state.merge(\n        fromJS({\n          codeEditorModal: {\n            open: true,\n            code: payload.code,\n            onSave: payload.onSave,\n            onClose: payload.onClose\n          }\n        })\n      );\n    },\n\n    closeCodeEditorModal(state, payload) {\n      return state.delete('codeEditorModal');\n    },\n\n    openDataElementSelectorModal(state, payload) {\n      return state.merge(\n        fromJS({\n          dataElementSelectorModal: {\n            open: true,\n            onSave: payload.onSave,\n            onClose: payload.onClose\n          }\n        })\n      );\n    },\n\n    closeDataElementSelectorModal(state, payload) {\n      return state.delete('dataElementSelectorModal');\n    }\n  }\n};\n","import { init } from '@rematch/core';\nimport registry from './models/registry';\nimport currentIframe from './models/currentIframe';\nimport currentRule from './models/currentRule';\nimport rules from './models/rules';\nimport dataElements from './models/dataElements';\nimport propertySettings from './models/propertySettings';\nimport otherSettings from './models/otherSettings';\nimport extensionConfigurations from './models/extensionConfigurations';\nimport brain from './models/brain';\nimport modals from './models/modals';\n\nconst store = init({\n  models: {\n    brain: brain,\n    rules: rules,\n    dataElements: dataElements,\n    extensionConfigurations: extensionConfigurations,\n    registry: registry,\n    currentIframe: currentIframe,\n    currentRule: currentRule,\n    propertySettings: propertySettings,\n    otherSettings: otherSettings,\n    modals: modals\n  }\n});\n\nexport default store;\nexport const { dispatch } = store;","export default {\n  state: null, // initial state\n  reducers: {\n    setRegistry(state, payload) {\n      return payload;\n    }\n  }\n};\n","export default {\n  state: {}, // initial state\n  reducers: {\n    setCurrentIframe(state, payload) {\n      return payload;\n    }\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport './Menu.css';\n\nconst isSavedEnabled = match =>\n  [\n    '/',\n    '/extension_configurations',\n    '/data_elements',\n    '/rules',\n    '/property_settings'\n  ].indexOf(match.path) !== -1;\n\nconst Menu = ({ match, save }) => (\n  <div className=\"main-menu\">\n    <div className=\"pure-menu pure-menu-horizontal\">\n      <Link className=\"pure-menu-heading pure-menu-link\" to=\"/\">\n        Editor\n      </Link>\n      <ul className=\"pure-menu-list\">\n        <li className=\"pure-menu-item\">\n          <Link\n            to=\"/extension_configurations\"\n            className={`pure-menu-link ${\n              match.path === '/extension_configurations' ? 'menu-selected' : ''\n            }`}\n          >\n            Extension Configurations\n          </Link>\n        </li>\n\n        <li className=\"pure-menu-item\">\n          <Link\n            to=\"/data_elements\"\n            className={`pure-menu-link ${\n              match.path === '/data_elements' ? 'menu-selected' : ''\n            }`}\n          >\n            Data Elements\n          </Link>\n        </li>\n        <li className=\"pure-menu-item\">\n          <Link\n            to=\"/rules\"\n            className={`pure-menu-link ${\n              match.path.includes('/rules') ? 'menu-selected' : ''\n            }`}\n          >\n            Rules\n          </Link>\n        </li>\n        <li className=\"pure-menu-item\">\n          <Link\n            to=\"/property_settings\"\n            className={`pure-menu-link ${\n              match.path === '/property_settings' ? 'menu-selected' : ''\n            }`}\n          >\n            Property Settings\n          </Link>\n        </li>\n        <li className=\"pure-menu-item\">\n          <Link\n            to=\"/settings\"\n            className={`pure-menu-link ${\n              match.path === '/settings' ? 'menu-selected' : ''\n            }`}\n          >\n            Settings\n          </Link>\n        </li>\n        {isSavedEnabled(match) ? (\n          <li className=\"pure-menu-item\">\n            <button type=\"button\" className=\"pure-menu-link\" onClick={save}>\n              Save and Exit\n            </button>\n          </li>\n        ) : null}\n      </ul>\n    </div>\n  </div>\n);\n\nconst mapState = () => ({});\nconst mapDispatch = ({ brain: { save } }) => ({\n  save: () => save()\n});\n\nexport default withRouter(\n  connect(\n    mapState,\n    mapDispatch\n  )(Menu)\n);\n","import React from 'react';\nimport './Modal.css';\n\nexport default ({ show, title, children, onSave, onClose }) =>\n  show ? (\n    <div className=\"backdrop\">\n      <div className=\"modal\">\n        <div className=\"header\">\n          <div className=\"title\">{title}</div>\n          <button\n            type=\"button\"\n            onClick={onClose}\n            title=\"Delete\"\n            className=\"icono-cross\"\n          />\n        </div>\n        {children}\n        <div className=\"footer\">\n          <button\n            type=\"button\"\n            className=\"pure-button-primary pure-button\"\n            onClick={onSave}\n          >\n            Save\n          </button>\n          &nbsp;\n          <button type=\"button\" className=\"pure-button\" onClick={onClose}>\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  ) : null;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Map } from 'immutable';\nimport Modal from './Modal';\nimport './ModalCodeEditor.css';\n\nclass ModalCodeEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      codeEditorModal: Map(),\n      prevModalSize: props.modals.size\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.modals.size !== prevState.prevModalSize) {\n      return {\n        prevModalSize: nextProps.modals.size,\n        codeEditorModal: nextProps.modals.getIn(['codeEditorModal'])\n      };\n    }\n\n    return null;\n  }\n\n  handleOnSave = () => {\n    const { codeEditorModal } = this.state;\n    const { closeCodeEditorModal } = this.props;\n\n    codeEditorModal.get('onSave')(codeEditorModal.get('code'));\n    closeCodeEditorModal();\n  };\n\n  handleOnClose = () => {\n    const { codeEditorModal } = this.state;\n    const { closeCodeEditorModal } = this.props;\n\n    codeEditorModal.get('onClose')();\n    closeCodeEditorModal();\n  };\n\n  handleCodeChange = event => {\n    const { codeEditorModal } = this.state;\n\n    this.setState({\n      codeEditorModal: codeEditorModal.set('code', event.target.value)\n    });\n  };\n\n  render() {\n    const { codeEditorModal } = this.state;\n\n    return codeEditorModal ? (\n      <div className=\"modal-code-editor\">\n        <Modal\n          title=\"Code Editor\"\n          show={codeEditorModal.get('open')}\n          onSave={this.handleOnSave}\n          onClose={this.handleOnClose}\n        >\n          <div className=\"pure-form\">\n            <textarea\n              value={codeEditorModal.get('code')}\n              onChange={this.handleCodeChange}\n            />\n          </div>\n        </Modal>\n      </div>\n    ) : null;\n  }\n}\n\nconst mapState = state => ({\n  modals: state.modals\n});\n\nconst mapDispatch = ({ modals: { closeCodeEditorModal } }) => ({\n  closeCodeEditorModal: payload => closeCodeEditorModal(payload)\n});\n\nexport default withRouter(\n  connect(\n    mapState,\n    mapDispatch\n  )(ModalCodeEditor)\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Map, List } from 'immutable';\nimport Modal from './Modal';\nimport './ModalDataElementSelector.css';\n\nclass ModalDataElementSelectorEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataElementSelectorModal: Map(),\n      prevModalSize: props.modals.size\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.modals.size !== prevState.prevModalSize) {\n      return {\n        prevModalSize: nextProps.modals.size,\n        dataElementSelectorModal: nextProps.modals.getIn([\n          'dataElementSelectorModal'\n        ])\n      };\n    }\n\n    return null;\n  }\n\n  handleOnSave = () => {\n    const { dataElementSelectorModal } = this.state;\n    const { closeDataElementSelectorModal } = this.props;\n\n    let newDataElement = '';\n    if (dataElementSelectorModal.get('dataElement')) {\n      newDataElement = `%${dataElementSelectorModal.get('dataElement')}%`;\n    }\n\n    dataElementSelectorModal.get('onSave')(newDataElement);\n    closeDataElementSelectorModal();\n  };\n\n  handleOnClose = () => {\n    const { dataElementSelectorModal } = this.state;\n    const { closeDataElementSelectorModal } = this.props;\n\n    dataElementSelectorModal.get('onClose')();\n    closeDataElementSelectorModal();\n  };\n\n  handleDataElementChange = event => {\n    const { dataElementSelectorModal } = this.state;\n\n    this.setState({\n      dataElementSelectorModal: dataElementSelectorModal.set(\n        'dataElement',\n        event.target.value\n      )\n    });\n  };\n\n  dataElementList() {\n    const { dataElements } = this.props;\n    return (dataElements || List()).valueSeq().map(v => (\n      <option\n        value={v.get('name')}\n        key={`extensionConfiguration${v.get('name')}`}\n      >\n        {v.get('name')}\n      </option>\n    ));\n  }\n\n  render() {\n    const { dataElementSelectorModal } = this.state;\n\n    return dataElementSelectorModal ? (\n      <div className=\"modal-data-element-selector pure-form\">\n        <Modal\n          title=\"Data Element Selector\"\n          show={dataElementSelectorModal.get('open')}\n          onSave={this.handleOnSave}\n          onClose={this.handleOnClose}\n        >\n          <select\n            value={dataElementSelectorModal.get('dataElement')}\n            onChange={this.handleDataElementChange}\n          >\n            <option>Please select...</option>\n            {this.dataElementList()}\n          </select>\n        </Modal>\n      </div>\n    ) : null;\n  }\n}\n\nconst mapState = state => ({\n  modals: state.modals,\n  dataElements: state.dataElements\n});\n\nconst mapDispatch = ({ modals: { closeDataElementSelectorModal } }) => ({\n  closeDataElementSelectorModal: payload =>\n    closeDataElementSelectorModal(payload)\n});\n\nexport default withRouter(\n  connect(\n    mapState,\n    mapDispatch\n  )(ModalDataElementSelectorEditor)\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Route } from 'react-router-dom';\nimport Menu from './Menu';\nimport ModalCodeEditor from './ModalCodeEditor';\nimport ModalDataElementSelector from './ModalDataElementSelector';\n\nconst PreloaderRoute = ({ component: Component, brain, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      brain.get('initialized') ? (\n        <div className=\"view-container\">\n          <ModalCodeEditor />\n          <ModalDataElementSelector />\n          <Menu />\n          <Component {...props} />\n        </div>\n      ) : (\n        <div className=\"big-text\">Fetching data...</div>\n      )\n    }\n  />\n);\n\nconst mapState = state => ({\n  brain: state.brain\n});\n\nconst mapDispatch = () => ({});\n\nexport default withRouter(\n  connect(\n    mapState,\n    mapDispatch\n  )(PreloaderRoute)\n);\n","import React from 'react';\nimport './Main.css';\n\nconst Main = () => (\n  <div>\n    <div className=\"main-container\">\n      <div className=\"big-text\">Welcome to the sandbox editor! </div>\n      <p>Start using it by selecting any option from the menu.</p>\n    </div>\n  </div>\n);\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './OtherSettings.css';\n\nclass OtherSettings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      otherSettings: props.otherSettings,\n      errors: {}\n    };\n  }\n\n  handleOrgIdChange = event => {\n    const { otherSettings } = this.state;\n\n    this.setState({\n      otherSettings: otherSettings.setIn(\n        ['company', 'orgId'],\n        event.target.value\n      )\n    });\n  };\n\n  handleImsChange = event => {\n    const { otherSettings } = this.state;\n\n    this.setState({\n      otherSettings: otherSettings.setIn(\n        ['tokens', 'imsAccess'],\n        event.target.value\n      )\n    });\n  };\n\n  handleSave = () => {\n    const { history, setOtherSettings } = this.props;\n    const { otherSettings } = this.state;\n\n    if (!this.isValid()) {\n      return false;\n    }\n\n    setOtherSettings(otherSettings);\n    history.push('/');\n\n    return true;\n  };\n\n  isValid() {\n    const errors = {};\n    const { otherSettings } = this.state;\n\n    if (!otherSettings.getIn(['company', 'orgId'])) {\n      errors.orgId = true;\n    }\n\n    if (!otherSettings.getIn(['tokens', 'imsAccess'])) {\n      errors.imsAccess = true;\n    }\n\n    this.setState({ errors });\n    return Object.keys(errors).length === 0;\n  }\n\n  render() {\n    const { errors, otherSettings } = this.state;\n\n    return (\n      <div className=\"other-settings-container\">\n        <form className=\"pure-form pure-form-aligned\">\n          <fieldset>\n            <legend>Company Settings</legend>\n            <div className=\"pure-control-group\">\n              <label htmlFor=\"orgId\">Organization ID</label>\n              <input\n                className={`pure-input-2-3 ${\n                  errors.orgId ? 'border-error' : ''\n                }`}\n                id=\"orgId\"\n                type=\"text\"\n                value={otherSettings.getIn(['company', 'orgId']) || ''}\n                onChange={this.handleOrgIdChange}\n              />\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <legend>Tokens</legend>\n            <div className=\"pure-control-group\">\n              <label htmlFor=\"imsAccess\">IMS Token</label>\n              <input\n                className={`pure-input-2-3 ${\n                  errors.imsAccess ? 'border-error' : ''\n                }`}\n                id=\"imsAccess\"\n                type=\"text\"\n                value={otherSettings.getIn(['tokens', 'imsAccess']) || ''}\n                onChange={this.handleImsChange}\n              />\n            </div>\n            <div className=\"pure-controls\">\n              <button\n                type=\"button\"\n                className=\"pure-button pure-button-primary\"\n                onClick={this.handleSave}\n              >\n                Save\n              </button>\n            </div>\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  otherSettings: state.otherSettings\n});\n\nconst mapDispatch = ({ otherSettings: { setOtherSettings } }) => ({\n  setOtherSettings: payload => setOtherSettings(payload)\n});\n\nexport default withRouter(\n  connect(\n    mapState,\n    mapDispatch\n  )(OtherSettings)\n);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport OtherSettings from './OtherSettings';\n\nconst Main = ({\n  brain,\n  orgId,\n  imsAccess,\n  loadContainerData,\n  clearContainerData\n}) => (\n  <div>\n    <OtherSettings key={`${orgId}${imsAccess}`} />\n    <div className=\"main-container\">\n      <p>The data used inside this editor is loaded from `localStorage`.</p>\n      <p>\n        If you want to overwrite the current data with the one stored inside the{' '}\n        <strong>`.sandbox/container.js`</strong> file click on the `Import data`\n        button.\n        <button\n          type=\"button\"\n          className=\"pure-button pure-button-primary\"\n          onClick={loadContainerData}\n        >\n          Import data\n        </button>\n        {brain.get('containerDataLoaded') != null ? (\n          <span className={`status-${brain.get('containerDataLoaded')}`}>\n            <br />\n            Last import status:{' '}\n            <strong>{brain.get('containerDataLoaded')}</strong>.\n          </span>\n        ) : null}\n        {}\n      </p>\n      <p>\n        If you want to reset current data click on the `Reset data` button.\n        <button\n          type=\"button\"\n          className=\"pure-button pure-button-primary\"\n          onClick={clearContainerData}\n        >\n          Reset data\n        </button>\n        {brain.get('containerDataReseted') != null ? (\n          <span className={`status-${brain.get('containerDataReseted')}`}>\n            <br />\n            Last reset status:{' '}\n            <strong>{brain.get('containerDataReseted')}</strong>.\n          </span>\n        ) : null}\n      </p>\n    </div>\n  </div>\n);\n\nconst mapState = state => ({\n  brain: state.brain,\n  orgId: state.otherSettings.getIn(['company', 'orgId']),\n  imsAccess: state.otherSettings.getIn(['tokens', 'imsAccess'])\n});\n\nconst mapDispatch = ({ brain: { loadContainerData, clearContainerData } }) => ({\n  loadContainerData: () => loadContainerData(),\n  clearContainerData: () => clearContainerData()\n});\n\nexport default withRouter(\n  connect(\n    mapState,\n    mapDispatch\n  )(Main)\n);\n","import React, { Component } from 'react';\nimport { List } from 'immutable';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './PropertySettings.css';\n\nclass PropertySettings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      propertySettings: props.propertySettings.set(\n        'domains',\n        props.propertySettings\n          .get('domains')\n          .toJS()\n          .join(', ')\n      ),\n      errors: {}\n    };\n  }\n\n  handleDomainsChange(event) {\n    this.setState({\n      propertySettings: this.state.propertySettings.set(\n        'domains',\n        event.target.value\n      )\n    });\n  }\n\n  isValid() {\n    const errors = {};\n\n    if (!this.state.propertySettings.get('domains')) {\n      errors.domains = true;\n    }\n\n    this.setState({ errors: errors });\n    return Object.keys(errors).length === 0;\n  }\n\n  handleSave(event) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    this.props.setPropertySettings(\n      this.state.propertySettings.set(\n        'domains',\n        List(\n          this.state.propertySettings\n            .get('domains')\n            .split(',')\n            .map(s => s.trim())\n        )\n      )\n    );\n\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <div className=\"property-settings-container\">\n        <form className=\"pure-form pure-form-aligned\">\n          <fieldset>\n            <legend>Property Settings</legend>\n            <div className=\"pure-control-group\">\n              <label htmlFor=\"domainsList\">Domains List</label>\n              <input\n                className={`pure-input-1-3 ${\n                  this.state.errors.domains ? 'border-error' : ''\n                }`}\n                id=\"domainsList\"\n                type=\"text\"\n                value={this.state.propertySettings.get('domains') || ''}\n                onChange={this.handleDomainsChange.bind(this)}\n              />\n              <span className=\"pure-form-message-inline\">\n                Comma separated values are accepted.\n              </span>\n            </div>\n            <div className=\"pure-controls\">\n              <button\n                className=\"pure-button pure-button-primary\"\n                onClick={this.handleSave.bind(this)}\n              >\n                Save\n              </button>\n            </div>\n          </fieldset>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  propertySettings: state.propertySettings\n});\n\nconst mapDispatch = ({ propertySettings: { setPropertySettings } }) => ({\n  setPropertySettings: payload => setPropertySettings(payload)\n});\n\nexport default withRouter(\n  connect(\n    mapState,\n    mapDispatch\n  )(PropertySettings)\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './List.css';\n\nconst List = ({ items, nameProperty, deleteFn, className, linkPrefix }) => (\n  <div className={`list-container ${className}`}>\n    <table className=\"pure-table list-table\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th className=\"list-item-actions\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map((item, i) => (\n          <tr key={item}>\n            <td className=\"list-item-name\">{item.get(nameProperty)}</td>\n            <td className=\"list-item-actions\">\n              <Link\n                to={`${linkPrefix}/${i}`}\n                className=\"pure-button-primary pure-button\"\n              >\n                Edit\n              </Link>\n              &nbsp;\n              <button\n                type=\"button\"\n                onClick={deleteFn.bind(this, i)}\n                className=\"pure-button\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        ))}\n        {items.size === 0 ? (\n          <tr>\n            <td colSpan=\"2\">No items found.</td>\n          </tr>\n        ) : null}\n      </tbody>\n    </table>\n    <Link\n      to={`${linkPrefix}/new`}\n      className=\"pure-button pure-button-primary create-new-button\"\n    >\n      Add\n    </Link>\n  </div>\n);\n\nexport default List;\n","import React from 'react';\nimport List from './List';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst RulesList = ({ rules, deleteRule }) => (\n  <List\n    items={rules}\n    nameProperty=\"name\"\n    deleteFn={deleteRule}\n    linkPrefix=\"/rules\"\n    className=\"rules-list\"\n  />\n);\n\nconst mapState = state => ({\n  rules: state.rules\n});\n\nconst mapDispatch = ({ rules: { deleteRule } }) => ({\n  deleteRule: i => deleteRule(i)\n});\n\nexport default withRouter(connect(mapState, mapDispatch)(RulesList));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport './RuleComponentCard.css';\n\nconst cardDetails = (item, type, registry) => {\n  const component = registry.getIn([\n    'components',\n    type,\n    item.get('modulePath')\n  ]);\n  return (\n    <div>\n      <div className=\"card-display-name\" title={component.get('displayName')}>\n        {component.get('displayName')}\n      </div>\n      <div\n        className=\"card-extension-display-name\"\n        title={component.get('extensionDisplayName')}\n      >\n        {component.get('extensionDisplayName')}\n      </div>\n    </div>\n  );\n};\n\nconst RuleComponentCard = ({\n  item,\n  match,\n  type,\n  index,\n  registry,\n  handleDeleteClick\n}) => (\n  <div className=\"rule-component-card\" title={item.get('modulePath')}>\n    {cardDetails(item, type, registry)}\n    <Link to={`/rules/${match.params.rule_id}/${type}/${index}`}>\n      <div title=\"Edit\" className=\"icono-file\" />\n    </Link>\n\n    <button\n      type=\"button\"\n      onClick={handleDeleteClick.bind(this, type, index)}\n      title=\"Delete\"\n      className=\"icono-cross\"\n    />\n  </div>\n);\n\nconst mapState = state => {\n  return {\n    registry: state.registry\n  };\n};\n\nconst mapDispatch = () => ({});\n\nexport default withRouter(\n  connect(\n    mapState,\n    mapDispatch\n  )(RuleComponentCard)\n);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './RuleComponentsList.css';\nimport RuleComponentCard from './RuleComponentCard';\n\nconst handleOnClick = (type, match, history) => {\n  history.push(`/rules/${match.params.rule_id}/${type}/new`);\n};\n\nconst RuleComponentsList = ({\n  items,\n  type,\n  match,\n  history,\n  handleDeleteClick\n}) => (\n  <div>\n    <div className=\"rule-components-list\">\n      {items.map((item, i) => (\n        <RuleComponentCard\n          key={item}\n          item={item}\n          type={type}\n          index={i}\n          handleDeleteClick={handleDeleteClick}\n        />\n      ))}\n    </div>\n\n    <button\n      type=\"button\"\n      onClick={handleOnClick.bind(this, type, match, history)}\n      className=\"add-button pure-button pure-button-primary\"\n    >\n      Add\n    </button>\n  </div>\n);\n\nexport default withRouter(RuleComponentsList);\n","import React, { Component } from 'react';\nimport './RuleEdit.css';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { List, Map } from 'immutable';\nimport { withLastLocation } from 'react-router-last-location';\nimport RuleComponentsList from './RuleComponentsList';\n\nconst isNewRule = ({\n  match: {\n    params: { rule_id: ruleId }\n  },\n  rules\n}) => {\n  return ruleId === 'new' || !rules || ruleId >= rules.size;\n};\n\n// Need to check from where the user is coming. If he returns from a rule\n// component edit view, we need to load the currentRule from the state.\n// We need to check the location once for every page load of this view.\nlet locationChecked = false;\nconst checkLastLocation = location => {\n  if (locationChecked) {\n    return true;\n  }\n\n  locationChecked = true;\n\n  if (!location) {\n    return false;\n  }\n\n  return location.pathname.match(\n    /^\\/rules\\/.*\\/(:?events|conditions|actions)\\/.*$/\n  );\n};\n\nconst getCurrentRule = props => {\n  const ruleId = props.match.params.rule_id;\n  let rule;\n\n  let { currentRule } = props;\n  if (!checkLastLocation(props.lastLocation)) {\n    currentRule = null;\n  }\n\n  if (currentRule && currentRule.get('id') === ruleId) {\n    rule = currentRule;\n  } else {\n    rule = (props.rules || List()).get(ruleId) || Map();\n  }\n\n  rule = rule.set('id', ruleId);\n  return rule;\n};\n\nclass RuleEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rule: getCurrentRule(props),\n      errors: {}\n    };\n  }\n\n  componentWillUnmount() {\n    locationChecked = false;\n  }\n\n  handleSave = () => {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    const {\n      addRule,\n      saveRule,\n      match: {\n        params: { rule_id: ruleId }\n      },\n      setCurrentRule,\n      history\n    } = this.props;\n\n    const { rule } = this.state;\n    const method = isNewRule(this.props) ? addRule : saveRule;\n\n    method({\n      id: ruleId,\n      rule\n    });\n\n    setCurrentRule(null);\n    history.push('/rules');\n\n    return true;\n  };\n\n  handleNameChange = event => {\n    const { rule } = this.state;\n    const { setCurrentRule } = this.props;\n    const newRule = rule.set('name', event.target.value);\n\n    setCurrentRule(newRule);\n    this.setState({ rule: newRule });\n  };\n\n  handleCancelClick = () => {\n    const { setCurrentRule } = this.props;\n    setCurrentRule(null);\n  };\n\n  handleDeleteClick = (type, index) => {\n    const { setCurrentRule } = this.props;\n    const { rule } = this.state;\n    const newRule = rule.deleteIn([type, index]);\n\n    setCurrentRule(newRule);\n    this.setState({ rule: newRule });\n  };\n\n  isValid() {\n    const errors = {};\n    const { rule } = this.state;\n\n    if (!rule.get('name')) {\n      errors.name = true;\n    }\n\n    this.setState({ errors });\n    return Object.keys(errors).length === 0;\n  }\n\n  render() {\n    const { rule, errors } = this.state;\n    return (\n      <div className=\"pure-g container\">\n        <div className=\"pure-u-1-1\">\n          <form className=\"pure-form\">\n            <fieldset>\n              <legend>\n                <strong>\n                  {isNewRule(this.props) ? 'Create' : 'Edit'} Rule\n                </strong>\n              </legend>\n              <input\n                type=\"text\"\n                className={errors.name ? 'border-error' : ''}\n                placeholder=\"Rule name\"\n                value={rule.get('name') || ''}\n                onChange={this.handleNameChange}\n              />\n            </fieldset>\n          </form>\n          <div className=\"component-group\">\n            <strong>Events</strong>\n            <RuleComponentsList\n              handleDeleteClick={this.handleDeleteClick}\n              items={rule.get('events') || List()}\n              type=\"events\"\n            />\n          </div>\n          <div className=\"component-group\">\n            <strong>Conditions</strong>\n            <RuleComponentsList\n              handleDeleteClick={this.handleDeleteClick}\n              items={rule.get('conditions') || List()}\n              type=\"conditions\"\n            />\n          </div>\n          <div className=\"component-group\">\n            <strong>Actions</strong>\n            <RuleComponentsList\n              handleDeleteClick={this.handleDeleteClick}\n              items={rule.get('actions') || List()}\n              type=\"actions\"\n            />\n          </div>\n          <div className=\"button-container\">\n            <button\n              type=\"button\"\n              onClick={this.handleSave}\n              className=\"pure-button-primary pure-button\"\n            >\n              Save\n            </button>\n            &nbsp;\n            <Link\n              onClick={this.handleCancelClick}\n              to=\"/rules\"\n              className=\"pure-button\"\n            >\n              Cancel\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    currentRule: state.currentRule,\n    rules: state.rules\n  };\n};\n\nconst mapDispatch = ({\n  rules: { saveRule, addRule },\n  currentRule: { setCurrentRule }\n}) => ({\n  addRule: payload => addRule(payload),\n  saveRule: payload => saveRule(payload),\n  setCurrentRule: payload => setCurrentRule(payload)\n});\n\nexport default withRouter(\n  connect(\n    mapState,\n    mapDispatch\n  )(withLastLocation(RuleEdit))\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loadIframe } from '@adobe/reactor-bridge';\nimport './ComponentIframe.css';\n\nclass ComponentIframe extends Component {\n  componentDidMount() {\n    this.renderIframe();\n  }\n\n  componentDidUpdate() {\n    this.dom.innerHTML = '';\n    this.renderIframe();\n  }\n\n  getUrl() {\n    const { component, server } = this.props;\n\n    if (!component) {\n      return '';\n    }\n\n    const host = server.get('host');\n    const port = server.get('port');\n    let path = component.get('viewPath');\n\n    if (!path) {\n      path = 'noConfigIframe.html';\n    }\n\n    return `${host}:${port}/${path}`;\n  }\n\n  renderIframe() {\n    const url = this.getUrl();\n    const {\n      openCodeEditorModal,\n      openDataElementSelectorModal,\n      settings,\n      otherSettings,\n      propertySettings,\n      extensionConfiguration,\n      setCurrentIframe\n    } = this.props;\n\n    if (!url) {\n      return;\n    }\n\n    const extensionInitOptions = {\n      settings: settings && settings.toJS(),\n      company: otherSettings.get('company').toJS(),\n      propertySettings: propertySettings.toJS(),\n      tokens: otherSettings.get('tokens').toJS()\n    };\n\n    if (extensionConfiguration) {\n      extensionInitOptions.extensionSettings = extensionConfiguration\n        .get('settings')\n        .toJS();\n    }\n\n    const iframeApi = loadIframe({\n      url,\n      container: this.dom,\n      extensionInitOptions,\n      connectionTimeoutDuration: 30000,\n      openCodeEditor(options = {}) {\n        return new Promise((resolve, reject) => {\n          openCodeEditorModal({\n            code: options.code,\n            onSave: resolve,\n            onClose: reject\n          });\n        }).catch(() => {});\n      },\n      openRegexTester() {},\n      openDataElementSelector() {\n        return new Promise((resolve, reject) => {\n          openDataElementSelectorModal({\n            onSave: resolve,\n            onClose: reject\n          });\n        }).catch(() => '');\n      },\n      markAsDirty() {}\n    });\n\n    setCurrentIframe(iframeApi);\n  }\n\n  render() {\n    return (\n      <div\n        ref={node => {\n          this.dom = node;\n        }}\n        className=\"component-iframe\"\n      />\n    );\n  }\n}\n\nconst mapState = state => ({\n  propertySettings: state.propertySettings,\n  otherSettings: state.otherSettings\n});\nconst mapDispatch = ({\n  currentIframe: { setCurrentIframe },\n  modals: { openCodeEditorModal, openDataElementSelectorModal }\n}) => ({\n  setCurrentIframe: payload => setCurrentIframe(payload),\n  openCodeEditorModal: payload => openCodeEditorModal(payload),\n  openDataElementSelectorModal: payload => openDataElementSelectorModal(payload)\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(ComponentIframe);\n","import React from 'react';\nimport './Backdrop.css';\n\nexport default ({ message }) => (\n  <div className=\"backdrop backdrop-only pure-u-1-1\">\n    <div className=\"lds-ring\">\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n    {message}\n  </div>\n);\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Map, List } from 'immutable';\nimport './ComponentEditSidebar.css';\nimport ComponentIframe from './ComponentIframe';\nimport Backdrop from './Backdrop';\n\nconst isNewComponent = (componentId, type, currentRule) =>\n  componentId === 'new' ||\n  componentId >= (currentRule.get(type) || List()).size;\n\nconst getCurrentRule = (currentRule, rules, ruleId) => {\n  let rule;\n\n  if (currentRule && currentRule.get('id') === ruleId) {\n    rule = currentRule;\n  } else {\n    rule = (rules || List()).get(ruleId) || Map();\n  }\n  rule = rule.set('id', ruleId);\n  return rule;\n};\n\nconst getComponent = ({\n  match: {\n    params: { type, component_id: componentId, rule_id: ruleId }\n  },\n  rules,\n  currentRule\n}) => {\n  const rule = getCurrentRule(currentRule, rules, ruleId);\n  return (\n    rule.getIn([type, componentId]) ||\n    Map({\n      modulePath: '',\n      settings: null\n    })\n  );\n};\n\nclass RuleComponentEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    const currentRule = getCurrentRule(\n      props.currentRule,\n      props.rules,\n      props.match.params.rule_id\n    );\n\n    this.state = {\n      errors: {},\n      waitingForExtensionResponse: false,\n      component: getComponent(props),\n      currentRule\n    };\n\n    props.setCurrentRule(currentRule);\n  }\n\n  handleComponentTypeChange = event => {\n    const { component } = this.state;\n\n    this.setState({\n      component: component.merge({\n        settings: null,\n        modulePath: event.target.value\n      })\n    });\n  };\n\n  handleOrderChange = event => {\n    const { component } = this.state;\n    const {\n      target: { value }\n    } = event;\n\n    const newComponent = component.set('order', value);\n    this.setState({ component: newComponent });\n  };\n\n  handleSave = () => {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    const { component } = this.state;\n\n    const {\n      addComponent,\n      saveComponent,\n      match: {\n        params: { component_id: componentId, type }\n      },\n      currentIframe,\n      history\n    } = this.props;\n\n    const { currentRule } = this.state;\n\n    const method = isNewComponent(componentId, type, currentRule)\n      ? addComponent\n      : saveComponent;\n\n    this.setState({\n      waitingForExtensionResponse: true\n    });\n\n    currentIframe.promise\n      .then(api => Promise.all([api.validate(), api.getSettings()]))\n      .then(([isValid, settings]) => {\n        if (isValid) {\n          method({\n            id: componentId,\n            type,\n            component: component.merge({ settings })\n          });\n\n          history.push(this.backLink());\n        } else {\n          this.setState({\n            waitingForExtensionResponse: false\n          });\n        }\n      });\n\n    return true;\n  };\n\n  componentList() {\n    const {\n      match: {\n        params: { type }\n      },\n      registry\n    } = this.props;\n    const componentList = {};\n    const groupList = [];\n\n    (registry.getIn(['components', type]) || List()).valueSeq().forEach(v => {\n      if (!componentList[v.get('extensionDisplayName')]) {\n        componentList[v.get('extensionDisplayName')] = [];\n      }\n      componentList[v.get('extensionDisplayName')].push(\n        <option\n          value={`${v.get('extensionName')}/${v.get('libPath')}`}\n          key={`optionType${v.get('libPath')}`}\n        >\n          {v.get('displayName')}\n        </option>\n      );\n    });\n\n    Object.keys(componentList).forEach(extenisonDisplayName => {\n      groupList.push(\n        <optgroup\n          key={`optGroupExtension${extenisonDisplayName}`}\n          label={extenisonDisplayName}\n        >\n          {componentList[extenisonDisplayName]}\n        </optgroup>\n      );\n    });\n\n    return groupList;\n  }\n\n  isValid() {\n    const errors = {};\n    const { component } = this.state;\n\n    if (!component.get('modulePath')) {\n      errors.modulePath = true;\n    }\n\n    this.setState({ errors });\n    return Object.keys(errors).length === 0;\n  }\n\n  backLink() {\n    const {\n      match: {\n        params: { rule_id: ruleId }\n      }\n    } = this.props;\n\n    return `/rules/${ruleId}`;\n  }\n\n  render() {\n    const { waitingForExtensionResponse, component, errors } = this.state;\n    const {\n      match: {\n        params: { type }\n      },\n      registry,\n      extensionConfigurations\n    } = this.props;\n\n    const componentIframeDetails = registry.getIn([\n      'components',\n      type,\n      component.get('modulePath')\n    ]);\n\n    const extensionName = component.get('modulePath').split('/')[0];\n\n    return (\n      <div className=\"pure-g component-edit-container\">\n        {waitingForExtensionResponse ? (\n          <Backdrop message=\"Waiting for the extension response...\" />\n        ) : null}\n        <div className=\"pure-u-1-4\">\n          <div className=\"component-edit-sidebar\">\n            <form className=\"pure-form pure-form-stacked\">\n              <fieldset>\n                <h4>Component Details</h4>\n                <label htmlFor=\"componentType\">\n                  <span>Type</span>\n                  <select\n                    id=\"componentType\"\n                    className={errors.modulePath ? 'border-error' : ''}\n                    value={component.get('modulePath')}\n                    onChange={this.handleComponentTypeChange}\n                  >\n                    <option value=\"\">Please select...</option>\n                    {this.componentList()}\n                  </select>\n                </label>\n                <br />\n\n                <label htmlFor=\"order\">\n                  <span>Order</span>\n                  <input\n                    id=\"order\"\n                    type=\"text\"\n                    value={component.get('order') || '50'}\n                    onChange={this.handleOrderChange}\n                  />\n                </label>\n              </fieldset>\n            </form>\n\n            <div className=\"button-container\">\n              <button\n                type=\"button\"\n                className=\"pure-button-primary pure-button\"\n                onClick={this.handleSave}\n              >\n                Save\n              </button>\n              &nbsp;\n              <Link to={this.backLink()} className=\"pure-button\">\n                Cancel\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"pure-u-3-4\">\n          <ComponentIframe\n            component={componentIframeDetails}\n            extensionConfiguration={extensionConfigurations\n              .filter(i => i.get('name') === extensionName)\n              .first()}\n            settings={component.get('settings')}\n            server={registry.getIn(['environment', 'server'])}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    rules: state.rules,\n    currentRule: state.currentRule,\n    currentIframe: state.currentIframe,\n    registry: state.registry,\n    extensionConfigurations: state.extensionConfigurations\n  };\n};\n\nconst mapDispatch = ({\n  rules: { saveRule },\n  currentRule: { setCurrentRule, saveComponent, addComponent }\n}) => ({\n  saveRule: payload => saveRule(payload),\n  setCurrentRule: payload => setCurrentRule(payload),\n  saveComponent: payload => saveComponent(payload),\n  addComponent: payload => addComponent(payload)\n});\n\nexport default withRouter(\n  connect(\n    mapState,\n    mapDispatch\n  )(RuleComponentEdit)\n);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport List from './List';\n\nconst DataElementsList = ({ dataElements, deleteDataElement }) => (\n  <List\n    items={dataElements}\n    nameProperty=\"name\"\n    deleteFn={deleteDataElement}\n    linkPrefix=\"/data_elements\"\n    className=\"data-elements-list\"\n  />\n);\n\nconst mapState = state => ({\n  dataElements: state.dataElements\n});\n\nconst mapDispatch = ({ dataElements: { deleteDataElement } }) => ({\n  deleteDataElement: i => deleteDataElement(i)\n});\n\nexport default withRouter(\n  connect(\n    mapState,\n    mapDispatch\n  )(DataElementsList)\n);\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Map, List } from 'immutable';\nimport './ComponentEditSidebar.css';\nimport ComponentIframe from './ComponentIframe';\nimport Backdrop from './Backdrop';\n\nconst isNewComponent = ({\n  match: {\n    params: { data_element_id: dataElementId }\n  },\n  dataElements\n}) => {\n  return (\n    dataElementId === 'new' || dataElementId >= (dataElements || List()).size\n  );\n};\n\nconst getDataElement = ({\n  match: {\n    params: { data_element_id: dataElementId }\n  },\n  dataElements\n}) => {\n  return (\n    (dataElements || List()).get(dataElementId) ||\n    Map({\n      modulePath: '',\n      settings: null\n    })\n  );\n};\n\nclass DataElementEdit extends Component {\n  static backLink() {\n    return '/data_elements/';\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      waitingForExtensionResponse: false,\n      dataElement: getDataElement(props),\n      errors: {}\n    };\n  }\n\n  handleComponentTypeChange(event) {\n    const { dataElement } = this.state;\n\n    this.setState({\n      dataElement: dataElement.merge({\n        settings: null,\n        modulePath: event.target.value\n      })\n    });\n  }\n\n  handleInputChange(fieldName, event) {\n    const { dataElement } = this.state;\n    const { target } = event;\n\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const newDataElement = dataElement.set(fieldName, value);\n\n    this.setState({\n      dataElement: newDataElement\n    });\n  }\n\n  handleSave() {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    const {\n      addDataElement,\n      saveDataElement,\n      currentIframe,\n      history,\n      match: { params }\n    } = this.props;\n\n    const { dataElement } = this.state;\n\n    const method = isNewComponent(this.props)\n      ? addDataElement\n      : saveDataElement;\n\n    this.setState({\n      waitingForExtensionResponse: true\n    });\n\n    currentIframe.promise\n      .then(api => Promise.all([api.validate(), api.getSettings()]))\n      .then(([isValid, settings]) => {\n        if (isValid) {\n          method({\n            id: params.data_element_id,\n            dataElement: dataElement.merge({ settings })\n          });\n\n          history.push(this.constructor.backLink());\n        } else {\n          this.setState({\n            waitingForExtensionResponse: false\n          });\n        }\n      });\n\n    return true;\n  }\n\n  dataElementsList() {\n    const componentList = {};\n    const groupList = [];\n    const { registry } = this.props;\n\n    (registry.getIn(['components', 'dataElements']) || List())\n      .valueSeq()\n      .forEach(v => {\n        if (!componentList[v.get('extensionDisplayName')]) {\n          componentList[v.get('extensionDisplayName')] = [];\n        }\n        componentList[v.get('extensionDisplayName')].push(\n          <option\n            value={`${v.get('extensionName')}/${v.get('libPath')}`}\n            key={`optionType${v.get('libPath')}`}\n          >\n            {v.get('displayName')}\n          </option>\n        );\n      });\n\n    Object.keys(componentList).forEach(extenisonDisplayName => {\n      groupList.push(\n        <optgroup\n          key={`optGroupExtension${extenisonDisplayName}`}\n          label={extenisonDisplayName}\n        >\n          {componentList[extenisonDisplayName]}\n        </optgroup>\n      );\n    });\n\n    return groupList;\n  }\n\n  isValid() {\n    const errors = {};\n    const { dataElement } = this.state;\n    const { currentIframe } = this.props;\n\n    if (!dataElement.get('name')) {\n      errors.name = true;\n    }\n\n    if (!dataElement.get('modulePath') || !currentIframe.promise) {\n      errors.modulePath = true;\n    }\n\n    this.setState({ errors });\n    return Object.keys(errors).length === 0;\n  }\n\n  render() {\n    const { registry, extensionConfigurations } = this.props;\n\n    const { waitingForExtensionResponse, errors, dataElement } = this.state;\n\n    const componentIframeDetails = registry.getIn([\n      'components',\n      'dataElements',\n      dataElement.get('modulePath')\n    ]);\n\n    const extensionName = dataElement.get('modulePath').split('/')[0];\n\n    return (\n      <div className=\"pure-g component-edit-container\">\n        {waitingForExtensionResponse ? (\n          <Backdrop message=\"Waiting for the extension response...\" />\n        ) : null}\n        <div className=\"pure-u-1-4\">\n          <div className=\"component-edit-sidebar\">\n            <form className=\"pure-form pure-form-stacked\">\n              <fieldset>\n                <h4>Data Element Details</h4>\n                <label htmlFor=\"dataElementName\">\n                  <span>Name</span>\n                  <input\n                    className={errors.name ? 'border-error' : ''}\n                    id=\"dataElementName\"\n                    type=\"text\"\n                    value={dataElement.get('name') || ''}\n                    onChange={this.handleInputChange.bind(this, 'name')}\n                  />\n                </label>\n                <br />\n\n                <label htmlFor=\"dataElementType\">\n                  <span>Type</span>\n                  <select\n                    id=\"dataElementType\"\n                    className={errors.modulePath ? 'border-error' : ''}\n                    value={dataElement.get('modulePath')}\n                    onChange={this.handleComponentTypeChange.bind(this)}\n                  >\n                    <option value=\"\">Please select...</option>\n                    {this.dataElementsList()}\n                  </select>\n                </label>\n                <br />\n\n                <label htmlFor=\"defaultValue\">\n                  <span>Default Value</span>\n                  <input\n                    id=\"defaultValue\"\n                    type=\"text\"\n                    value={dataElement.get('defaultValue') || ''}\n                    onChange={this.handleInputChange.bind(this, 'defaultValue')}\n                  />\n                </label>\n                <br />\n\n                <label htmlFor=\"forceLowerCase\" className=\"pure-checkbox\">\n                  <input\n                    id=\"forceLowerCase\"\n                    type=\"checkbox\"\n                    checked={dataElement.get('forceLowerCase') || ''}\n                    onChange={this.handleInputChange.bind(\n                      this,\n                      'forceLowerCase'\n                    )}\n                  />{' '}\n                  Force lower case\n                </label>\n                <br />\n                <label htmlFor=\"cleanText\" className=\"pure-checkbox\">\n                  <input\n                    id=\"cleanText\"\n                    type=\"checkbox\"\n                    checked={dataElement.get('cleanText') || ''}\n                    onChange={this.handleInputChange.bind(this, 'cleanText')}\n                  />{' '}\n                  Clean Text\n                </label>\n                <br />\n                <label htmlFor=\"storageDuration\">\n                  <span>Storage duration</span>\n                  <select\n                    id=\"storageDuration\"\n                    value={dataElement.get('storageDuration') || ''}\n                    onChange={this.handleInputChange.bind(\n                      this,\n                      'storageDuration'\n                    )}\n                  >\n                    <option value=\"\"> None </option>\n                    <option value=\"pageview\"> Pageview </option>\n                    <option value=\"session\"> Session </option>\n                    <option value=\"visitor\"> Visitor </option>\n                  </select>\n                </label>\n              </fieldset>\n            </form>\n\n            <div className=\"button-container\">\n              <button\n                type=\"button\"\n                className=\"pure-button-primary pure-button\"\n                onClick={this.handleSave.bind(this)}\n              >\n                Save\n              </button>\n              &nbsp;\n              <Link to={this.constructor.backLink()} className=\"pure-button\">\n                Cancel\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"pure-u-3-4\">\n          <ComponentIframe\n            component={componentIframeDetails}\n            extensionConfiguration={extensionConfigurations\n              .filter(i => i.get('name') === extensionName)\n              .first()}\n            settings={dataElement.get('settings')}\n            server={registry.getIn(['environment', 'server'])}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    dataElements: state.dataElements,\n    currentIframe: state.currentIframe,\n    registry: state.registry,\n    extensionConfigurations: state.extensionConfigurations\n  };\n};\n\nconst mapDispatch = ({\n  dataElements: { saveDataElement, addDataElement }\n}) => ({\n  saveDataElement: payload => saveDataElement(payload),\n  addDataElement: payload => addDataElement(payload)\n});\n\nexport default withRouter(\n  connect(\n    mapState,\n    mapDispatch\n  )(DataElementEdit)\n);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport List from './List';\n\nconst ExtensionConfigurationsList = ({\n  extensionConfigurations,\n  deleteExtensionConfiguration\n}) => (\n  <List\n    items={extensionConfigurations}\n    nameProperty=\"displayName\"\n    deleteFn={deleteExtensionConfiguration}\n    linkPrefix=\"/extension_configurations\"\n    className=\"extension-configurations-list\"\n  />\n);\n\nconst mapState = state => ({\n  extensionConfigurations: state.extensionConfigurations\n});\n\nconst mapDispatch = ({\n  extensionConfigurations: { deleteExtensionConfiguration }\n}) => ({\n  deleteExtensionConfiguration: i => deleteExtensionConfiguration(i)\n});\n\nexport default withRouter(\n  connect(\n    mapState,\n    mapDispatch\n  )(ExtensionConfigurationsList)\n);\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Map, List } from 'immutable';\nimport './ComponentEditSidebar.css';\nimport ComponentIframe from './ComponentIframe';\nimport Backdrop from './Backdrop';\n\nconst isNewExtensionConfiguration = ({\n  extensionConfigurations,\n  match: {\n    params: { extension_configuration_id: extensionConfigurationId }\n  }\n}) =>\n  extensionConfigurationId === 'new' ||\n  extensionConfigurationId >= (extensionConfigurations || List()).size;\n\nconst getExtensionConfiguration = ({\n  extensionConfigurations,\n  match: {\n    params: { extension_configuration_id: extensionConfigurationId }\n  }\n}) =>\n  (extensionConfigurations || List()).get(extensionConfigurationId) ||\n  Map({\n    name: '',\n    settings: null\n  });\n\nclass ExtensionConfigurationEdit extends Component {\n  static backLink() {\n    return '/extension_configurations/';\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      waitingForExtensionResponse: false,\n      extensionConfiguration: getExtensionConfiguration(props),\n      errors: {}\n    };\n  }\n\n  handleNameChange = event => {\n    const { extensionConfiguration } = this.state;\n\n    this.setState({\n      extensionConfiguration: extensionConfiguration.merge({\n        settings: null,\n        name: event.target.value\n      })\n    });\n  };\n\n  handleSave = () => {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    const {\n      addExtensionConfiguration,\n      saveExtensionConfiguration,\n      currentIframe,\n      history,\n      registry,\n      match: { params }\n    } = this.props;\n\n    const { extensionConfiguration } = this.state;\n    const method = isNewExtensionConfiguration(this.props)\n      ? addExtensionConfiguration\n      : saveExtensionConfiguration;\n\n    const displayName = registry.getIn([\n      'extensions',\n      extensionConfiguration.get('name'),\n      'displayName'\n    ]);\n\n    this.setState({\n      waitingForExtensionResponse: true\n    });\n\n    currentIframe.promise\n      .then(api => Promise.all([api.validate(), api.getSettings()]))\n      .then(([isValid, settings]) => {\n        if (isValid) {\n          method({\n            id: params.extension_configuration_id,\n            extensionConfiguration: extensionConfiguration.merge({\n              displayName,\n              settings\n            })\n          });\n\n          history.push(this.constructor.backLink());\n        } else {\n          this.setState({\n            waitingForExtensionResponse: false\n          });\n        }\n      });\n\n    return true;\n  };\n\n  extensionConfigurationList() {\n    const { registry } = this.props;\n    return (registry.get('extensions') || List())\n      .filter(i => i.get('viewPath'))\n      .valueSeq()\n      .map(v => (\n        <option\n          value={v.get('name')}\n          key={`extensionConfiguration${v.get('name')}`}\n        >\n          {v.get('displayName')}\n        </option>\n      ));\n  }\n\n  isValid() {\n    const errors = {};\n    const { extensionConfiguration } = this.state;\n\n    if (!extensionConfiguration.get('name')) {\n      errors.name = true;\n    }\n\n    this.setState({ errors });\n    return Object.keys(errors).length === 0;\n  }\n\n  render() {\n    const { registry } = this.props;\n    const {\n      errors,\n      extensionConfiguration,\n      waitingForExtensionResponse\n    } = this.state;\n\n    const componentIframeDetails = registry.getIn([\n      'extensions',\n      extensionConfiguration.get('name')\n    ]);\n\n    return (\n      <div className=\"pure-g component-edit-container\">\n        {waitingForExtensionResponse ? (\n          <Backdrop message=\"Waiting for the extension response...\" />\n        ) : null}\n        <div className=\"pure-u-1-4\">\n          <div className=\"component-edit-sidebar\">\n            <form className=\"pure-form pure-form-stacked\">\n              <fieldset>\n                <h4>Extension Configuration Name</h4>\n                <label htmlFor=\"extensionConfigurationName\">\n                  <span>Name</span>\n                  <select\n                    id=\"extensionConfigurationName\"\n                    className={errors.name ? 'border-error' : ''}\n                    value={extensionConfiguration.get('name')}\n                    onChange={this.handleNameChange}\n                  >\n                    <option value=\"\">Please select...</option>\n                    {this.extensionConfigurationList()}\n                  </select>\n                </label>\n              </fieldset>\n            </form>\n\n            <div className=\"button-container\">\n              <button\n                type=\"button\"\n                className=\"pure-button-primary pure-button\"\n                onClick={this.handleSave}\n              >\n                Save\n              </button>\n              &nbsp;\n              <Link to={this.constructor.backLink()} className=\"pure-button\">\n                Cancel\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"pure-u-3-4\">\n          <ComponentIframe\n            component={componentIframeDetails}\n            settings={extensionConfiguration.get('settings')}\n            server={registry.getIn(['environment', 'server'])}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    extensionConfigurations: state.extensionConfigurations,\n    currentIframe: state.currentIframe,\n    registry: state.registry\n  };\n};\n\nconst mapDispatch = ({\n  extensionConfigurations: {\n    saveExtensionConfiguration,\n    addExtensionConfiguration\n  }\n}) => ({\n  saveExtensionConfiguration: payload => saveExtensionConfiguration(payload),\n  addExtensionConfiguration: payload => addExtensionConfiguration(payload)\n});\n\nexport default withRouter(\n  connect(\n    mapState,\n    mapDispatch\n  )(ExtensionConfigurationEdit)\n);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Switch } from 'react-router-dom';\nimport { LastLocationProvider } from 'react-router-last-location';\n\nimport store, { dispatch } from './store';\nimport PreloaderRoute from './components/PreloaderRoute';\nimport Main from './components/Main';\nimport Settings from './components/Settings';\nimport PropertySettings from './components/PropertySettings';\nimport RulesList from './components/RulesList';\nimport RuleEdit from './components/RuleEdit';\nimport RuleComponentEdit from './components/RuleComponentEdit';\nimport DataElementsList from './components/DataElementsList';\nimport DataElementEdit from './components/DataElementEdit';\nimport ExtensionConfigurationsList from './components/ExtensionConfigurationsList';\nimport ExtensionConfigurationEdit from './components/ExtensionConfigurationEdit';\n\ndispatch({ type: 'brain/initialize' });\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <LastLocationProvider>\n            <Switch>\n              <PreloaderRoute exact path=\"/\" component={Main} />\n              <PreloaderRoute exact path=\"/settings\" component={Settings} />\n              <PreloaderRoute\n                exact\n                path=\"/property_settings\"\n                component={PropertySettings}\n              />\n              <PreloaderRoute exact path=\"/rules\" component={RulesList} />\n              <PreloaderRoute exact path=\"/rules/:rule_id\" component={RuleEdit} />\n              <PreloaderRoute\n                exact\n                path=\"/rules/:rule_id/:type(events|conditions|actions)/:component_id\"\n                component={RuleComponentEdit}\n              />\n              <PreloaderRoute\n                exact\n                path=\"/data_elements\"\n                component={DataElementsList}\n              />\n              <PreloaderRoute\n                exact\n                path=\"/data_elements/:data_element_id\"\n                component={DataElementEdit}\n              />\n              <PreloaderRoute\n                exact\n                path=\"/extension_configurations\"\n                component={ExtensionConfigurationsList}\n              />\n              <PreloaderRoute\n                exact\n                path=\"/extension_configurations/:extension_configuration_id\"\n                component={ExtensionConfigurationEdit}\n              />\n            </Switch>\n          </LastLocationProvider>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}