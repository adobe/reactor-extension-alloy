"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _autobindDecorator = _interopRequireDefault(require("autobind-decorator"));

var _classnames = _interopRequireDefault(require("classnames"));

var _convertUnsafeMethod = _interopRequireDefault(require("../../utils/convertUnsafeMethod"));

var _createId = _interopRequireDefault(require("../../utils/createId"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _focusRing = require("../../utils/focusRing");

var _intl = require("../../utils/intl");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _Star = _interopRequireDefault(require("../../Icon/core/Star"));

var _StarOutline = _interopRequireDefault(require("../../Icon/core/StarOutline"));

var _class, _class2, _temp;

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var intlMessages = {
  "cs-CZ": _interopRequireDefault(require("./../intl/cs-CZ.json"))["default"],
  "da-DK": _interopRequireDefault(require("./../intl/da-DK.json"))["default"],
  "de-DE": _interopRequireDefault(require("./../intl/de-DE.json"))["default"],
  "en-US": _interopRequireDefault(require("./../intl/en-US.json"))["default"],
  "es-ES": _interopRequireDefault(require("./../intl/es-ES.json"))["default"],
  "fi-FI": _interopRequireDefault(require("./../intl/fi-FI.json"))["default"],
  "fr-FR": _interopRequireDefault(require("./../intl/fr-FR.json"))["default"],
  "it-IT": _interopRequireDefault(require("./../intl/it-IT.json"))["default"],
  "ja-JP": _interopRequireDefault(require("./../intl/ja-JP.json"))["default"],
  "ko-KR": _interopRequireDefault(require("./../intl/ko-KR.json"))["default"],
  "nb-NO": _interopRequireDefault(require("./../intl/nb-NO.json"))["default"],
  "nl-NL": _interopRequireDefault(require("./../intl/nl-NL.json"))["default"],
  "pl-PL": _interopRequireDefault(require("./../intl/pl-PL.json"))["default"],
  "pt-BR": _interopRequireDefault(require("./../intl/pt-BR.json"))["default"],
  "ru-RU": _interopRequireDefault(require("./../intl/ru-RU.json"))["default"],
  "sv-SE": _interopRequireDefault(require("./../intl/sv-SE.json"))["default"],
  "tr-TR": _interopRequireDefault(require("./../intl/tr-TR.json"))["default"],
  "zh-CN": _interopRequireDefault(require("./../intl/zh-CN.json"))["default"],
  "zh-TW": _interopRequireDefault(require("./../intl/zh-TW.json"))["default"]
};

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require("../../spectrum-css/rating/index.css");

  require("../../spectrum-css/rating/index-diff.css");
} else if (process.env.SCALE_LARGE) {
  require("../../spectrum-css/rating/index-lg.css");
} else {
  require("../../spectrum-css/rating/index.css");
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require("../../spectrum-css/rating/multiStops/light.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require("../../spectrum-css/rating/multiStops/dark.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require("../../spectrum-css/rating/multiStops/lightest.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require("../../spectrum-css/rating/multiStops/darkest.css");
var formatMessage = (0, _intl.messageFormatter)(intlMessages);

var Rating = (0, _convertUnsafeMethod["default"])(_class = (0, _autobindDecorator["default"])(_class = (_temp = _class2 =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Rating, _React$Component);

  function Rating(props) {
    var _this;

    _classCallCheck(this, Rating);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Rating).call(this, props));

    _defineProperty(_assertThisInitialized(_this), "state", {
      currentRating: _this.props.value || _this.props.defaultValue || 0,
      focused: false
    });

    _this.inputId = (0, _createId["default"])();
    return _this;
  }

  _createClass(Rating, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(props) {
      if (props.value != null || props.defaultValue != null) {
        this.setState({
          currentRating: props.value || props.defaultValue || 0
        });
      }
    }
  }, {
    key: "onClickRating",
    value: function onClickRating(currentRating, e) {
      e.stopPropagation(); // Allow user to deselect current rating

      if (currentRating > 0 && currentRating === this.state.currentRating) {
        currentRating--;
      }

      if (this.props.value == null) {
        this.setState({
          currentRating: currentRating
        });
      }

      if (this.props.onChange) {
        this.props.onChange(currentRating);
      }

      if (this.input) {
        this.input.focus();
      }
    }
  }, {
    key: "onInput",
    value: function onInput(e) {
      var currentRating = +e.target.value;
      this.updateFocusedState();

      if (currentRating !== this.state.currentRating) {
        this.onClickRating(currentRating, e);
      }
    }
  }, {
    key: "onFocus",
    value: function onFocus(e) {
      this.updateFocusedState();

      if (this.props.onFocus) {
        this.props.onFocus(e);
      }
    }
  }, {
    key: "updateFocusedState",
    value: function updateFocusedState() {
      if (this.input && !this.state.focused) {
        this.setState({
          'focused': this.input.classList.contains(_focusRing.FOCUS_RING_CLASSNAME)
        });
      }
    }
  }, {
    key: "onBlur",
    value: function onBlur(e) {
      this.setState({
        'focused': false
      });

      if (this.props.onBlur) {
        this.props.onBlur(e);
      }
    }
  }, {
    key: "hasCorrespondingLabel",
    value: function hasCorrespondingLabel() {
      return this.props.labelId !== undefined;
    }
  }, {
    key: "getAriaLabel",
    value: function getAriaLabel() {
      if (this.props['aria-label']) {
        return this.props['aria-label'];
      }

      if (this.hasCorrespondingLabel()) {
        return null;
      }

      return formatMessage('Star Rating');
    }
    /**
     * Return a localized value text for a provided value,
     * for use as an `aria-valuetext` and as a `title`
     * attribute on rating icon stars.
     * @param   {Number} currentRating The rating for which to retrieve a text value
     * @returns {String} Localized value as text
     * @private
     */

  }, {
    key: "getValueText",
    value: function getValueText(currentRating) {
      var valueText = undefined;
      var _this$props = this.props,
          valueTextStrings = _this$props.valueTextStrings,
          max = _this$props.max; // verify that valueTextStrings array is defined and is the appropriate length to provide a string for each star.

      if (valueTextStrings) {
        if (currentRating === max && valueTextStrings.length !== max + 1) {
          console.warn("valueTextStrings length {".concat(valueTextStrings.length, "} does not match number of stars including a value for \"0\" or \"none selected\" {").concat(max + 1, "}."));
        }

        valueText = valueTextStrings[currentRating];
      }

      return valueText || formatMessage('# star(s)', {
        currentRating: currentRating
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          max = _this$props2.max,
          disabled = _this$props2.disabled,
          className = _this$props2.className,
          _this$props2$id = _this$props2.id,
          id = _this$props2$id === void 0 ? this.inputId : _this$props2$id,
          readOnly = _this$props2.readOnly,
          quiet = _this$props2.quiet,
          style = _this$props2.style,
          otherProps = _objectWithoutProperties(_this$props2, ["max", "disabled", "className", "id", "readOnly", "quiet", "style"]);

      var _this$state = this.state,
          currentRating = _this$state.currentRating,
          focused = _this$state.focused;
      var ratings = [];

      for (var i = 1; i <= max; ++i) {
        var active = i <= Math.round(currentRating);
        var currentValue = i === Math.round(currentRating);
        ratings.push(_react["default"].createElement("span", {
          key: i,
          className: (0, _classnames["default"])('spectrum-Rating-icon', {
            'is-selected': active,
            'is-disabled': disabled,
            'is-readOnly': readOnly,
            'is-currentValue': currentValue
          }),
          title: this.getValueText(i),
          "aria-hidden": true,
          onClick: !disabled && !readOnly ? this.onClickRating.bind(this, i) : null
        }, _react["default"].createElement(_Star["default"], {
          size: null,
          className: "spectrum-Rating-starActive"
        }), _react["default"].createElement(_StarOutline["default"], {
          size: null,
          className: "spectrum-Rating-starInactive"
        })));
      }

      var ariaLabel = this.getAriaLabel();
      delete otherProps['aria-label'];
      return _react["default"].createElement("div", {
        className: (0, _classnames["default"])('spectrum-Rating', {
          'is-disabled': disabled,
          'is-readOnly': readOnly,
          'is-focused': focused,
          'spectrum-Rating--quiet': quiet
        }, className),
        style: _objectSpread({}, style, {
          width: "".concat(24 * max, "px")
        })
      }, _react["default"].createElement("input", _extends({
        ref: function ref(i) {
          return _this2.input = i;
        },
        id: id,
        className: "spectrum-Rating-input",
        type: "range",
        min: 0,
        max: max,
        value: currentRating,
        "aria-valuetext": this.getValueText(currentRating),
        "aria-label": ariaLabel,
        style: _objectSpread({}, style, {
          width: "".concat(24 * max, "px")
        }),
        disabled: disabled,
        readOnly: readOnly,
        onInput: !disabled && !readOnly ? this.onInput : null
      }, (0, _filterDOMProps["default"])(otherProps), {
        /* prevent onChange from executing twice with keyboard input */
        onChange: !disabled && !readOnly ? function () {} : null,
        onFocus: !disabled ? this.onFocus : null,
        onBlur: !disabled ? this.onBlur : null
      })), ratings);
    }
  }]);

  return Rating;
}(_react["default"].Component), _defineProperty(_class2, "propTypes", {
  /**
   * Prevent interaction with component
   */
  disabled: _propTypes["default"].bool,

  /**
   * Number of stars in rating.
   */
  max: _propTypes["default"].number,

  /**
   * Prevents change from happening.
   */
  readOnly: _propTypes["default"].bool,

  /**
   * Sets the rating (controlled).
   */
  value: _propTypes["default"].number,

  /**
   * Default value for the rating (uncontrolled)
   */
  defaultValue: _propTypes["default"].number,

  /**
   * Set an array of strings to communicate the value for accessibility.
   * By default, Rating announces the current value for accessibility
   * using a localized string for the number of stars,
   * for example, "4 Stars". This behavior can be overridden using a
   * custom array of strings, one for each star value,
   * including a string to represent "0 Stars" or "no value selected",
   * as the first string in the array.
   *
   * ```jsx
   *  <Rating
   *    valueTextStrings={[
   *      'No rating',
   *      '1 Star (Poor)',
   *      '2 Stars (Fair)',
   *      '3 Stars (Average)',
   *      '4 Stars (Good)',
   *      '5 Stars (Excellent)'
   *    ]} />
   * ```
   */
  valueTextStrings: _propTypes["default"].arrayOf(_propTypes["default"].string),

  /**
   * Callback for when the rating value changes
   */
  onChange: _propTypes["default"].func,

  /**
   * Class given to rating
   */
  className: _propTypes["default"].string,

  /**
   * ID of the rating.
   */
  id: _propTypes["default"].string
}), _defineProperty(_class2, "defaultProps", {
  disabled: false,
  className: '',
  max: 5
}), _temp)) || _class) || _class;

exports["default"] = Rating;