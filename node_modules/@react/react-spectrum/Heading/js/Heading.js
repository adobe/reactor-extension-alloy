"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Heading;

var _classnames = _interopRequireDefault(require("classnames"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var VARIANTS = {
  1: 'display',
  2: 'pageTitle',
  3: 'subtitle1',
  4: 'subtitle2',
  5: 'subtitle3',
  6: 'subtitle3'
};
var ELEMENTS = {
  'display': 'h1',
  'pageTitle': 'h2',
  'subtitle1': 'h2',
  'subtitle2': 'h3',
  'subtitle3': 'h4'
};

function Heading(_ref) {
  var variant = _ref.variant,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 1 : _ref$size,
      children = _ref.children,
      className = _ref.className,
      otherProps = _objectWithoutProperties(_ref, ["variant", "size", "children", "className"]);

  variant = variant || VARIANTS[size] || 'display';
  var Element = ELEMENTS[variant];
  return _react["default"].createElement(Element, _extends({
    className: (0, _classnames["default"])('spectrum-Heading', "spectrum-Heading--".concat(variant), className)
  }, (0, _filterDOMProps["default"])(otherProps)), children);
}

Heading.displayName = 'Heading';
Heading.propTypes = {
  /**
   * Variant of the heading to display. This maps to different heading HTML elements:
   * - display: h1
   * - pageTitle: h2
   * - subtitle1: h2
   * - subtitle2: h3
   * - subtitle3: h4
   */
  variant: _propTypes["default"].oneOf(['display', 'pageTitle', 'subtitle1', 'subtitle2', 'subtitle3']),

  /**
   * Custom classname to apply to the heading.
   */
  className: _propTypes["default"].string
};