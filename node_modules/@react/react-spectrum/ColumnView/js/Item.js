"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _Checkbox = _interopRequireDefault(require("../../Checkbox"));

var _ChevronRightMedium = _interopRequireDefault(require("../../Icon/core/ChevronRightMedium"));

var _classnames = _interopRequireDefault(require("classnames"));

var _convertUnsafeMethod = _interopRequireDefault(require("../../utils/convertUnsafeMethod"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _focusRing = _interopRequireDefault(require("../../utils/focusRing"));

var _react = _interopRequireDefault(require("react"));

var _class;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Item =
/*
 * A wrapper for an Item within an ItemColumn that will manage the Item's state
 */
(0, _convertUnsafeMethod["default"])(_class = (0, _focusRing["default"])(_class =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Item, _React$Component);

  function Item() {
    _classCallCheck(this, Item);

    return _possibleConstructorReturn(this, _getPrototypeOf(Item).apply(this, arguments));
  }

  _createClass(Item, [{
    key: "focus",
    value: function focus() {
      if (this.itemRef) {
        this.itemRef.focus();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var _this$props = this.props,
          item = _this$props.item,
          renderItem = _this$props.renderItem,
          highlighted = _this$props.selected,
          allowsSelection = _this$props.allowsSelection,
          allowsBranchSelection = _this$props.allowsBranchSelection,
          isSelected = _this$props.isSelected,
          focused = _this$props.focused,
          column = _this$props.column,
          _this$props$level = _this$props.level,
          level = _this$props$level === void 0 ? 0 : _this$props$level,
          detailNode = _this$props.detailNode,
          collectionView = _this$props.collectionView,
          props = _objectWithoutProperties(_this$props, ["item", "renderItem", "selected", "allowsSelection", "allowsBranchSelection", "isSelected", "focused", "column", "level", "detailNode", "collectionView"]);

      var className = (0, _classnames["default"])('spectrum-AssetList-item', {
        'is-selectable': allowsBranchSelection,
        'is-branch': item.hasChildren,
        'is-navigated': highlighted && !isSelected,
        'is-selected': isSelected
      });
      var id = item.getItemId();
      var labelId = "".concat(id, "-label");
      var columnFocused = column && column.props.focused;
      var tabIndex = columnFocused && focused ? 0 : -1;

      if (columnFocused && !focused && collectionView && !collectionView.focusedIndexPath) {
        tabIndex = 0;
      }

      var setSize = item.parent.children.getSectionLength(0);
      var isExpanded = item.hasChildren ? highlighted || false : null;
      var ownedColumnId = isExpanded || detailNode === item ? item.getColumnId() : null;
      var ariaDescribedby = detailNode === item ? ownedColumnId : null;
      return _react["default"].createElement("div", _extends({
        ref: function ref(i) {
          return _this.itemRef = i;
        },
        id: id,
        tabIndex: tabIndex,
        role: "treeitem",
        "aria-selected": allowsSelection && (allowsBranchSelection || !item.hasChildren) ? isSelected || false : null,
        "aria-level": level + 1,
        "aria-posinset": item.index + 1,
        "aria-setsize": setSize,
        "aria-expanded": isExpanded,
        "aria-labelledby": labelId,
        "aria-describedby": ariaDescribedby,
        "aria-owns": ownedColumnId,
        className: className
      }, (0, _filterDOMProps["default"])(props)), allowsSelection && allowsBranchSelection && this.renderCheckbox(labelId), _react["default"].createElement("span", {
        role: "presentation",
        className: "spectrum-AssetList-itemLabel",
        id: labelId
      }, renderItem(item.item, item)), item.hasChildren && this.renderChevron(), allowsSelection && !allowsBranchSelection && !item.hasChildren && this.renderCheckbox());
    }
  }, {
    key: "renderChevron",
    value: function renderChevron() {
      return _react["default"].createElement(_ChevronRightMedium["default"], {
        className: "spectrum-AssetList-itemChildIndicator",
        size: "XS"
      });
    }
  }, {
    key: "renderCheckbox",
    value: function renderCheckbox(labelId) {
      var _this2 = this;

      var _this$props2 = this.props,
          isSelected = _this$props2.isSelected,
          onSelect = _this$props2.onSelect;
      return _react["default"].createElement(_Checkbox["default"], {
        "aria-hidden": "true",
        "aria-labelledby": labelId,
        tabIndex: -1,
        className: "spectrum-AssetList-itemSelector",
        onMouseDown: function onMouseDown(e) {
          return e.stopPropagation();
        },
        onFocus: function onFocus(e) {
          e.preventDefault();

          _this2.focus();
        },
        checked: isSelected,
        onChange: onSelect
      });
    }
  }]);

  return Item;
}(_react["default"].Component)) || _class) || _class;

exports["default"] = Item;