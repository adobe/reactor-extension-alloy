"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _autobindDecorator = _interopRequireDefault(require("autobind-decorator"));

var _CheckmarkMedium = _interopRequireDefault(require("../../Icon/core/CheckmarkMedium"));

var _ChevronRightMedium = _interopRequireDefault(require("../../Icon/core/ChevronRightMedium"));

var _classnames = _interopRequireDefault(require("classnames"));

var _icon = require("../../utils/icon");

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _events = require("../../utils/events");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _class, _class2, _temp;

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ListItem =
/**
 * An item in a list
 */
(0, _autobindDecorator["default"])(_class = (_temp = _class2 =
/*#__PURE__*/
function (_Component) {
  _inherits(ListItem, _Component);

  function ListItem() {
    _classCallCheck(this, ListItem);

    return _possibleConstructorReturn(this, _getPrototypeOf(ListItem).apply(this, arguments));
  }

  _createClass(ListItem, [{
    key: "handleMouseEnter",
    value: function handleMouseEnter(e) {
      if (this.props.onMouseEnter) {
        this.props.onMouseEnter(e);
      } else {
        e.currentTarget.focus();
      }
    }
  }, {
    key: "handleFocus",
    value: function handleFocus(e) {
      if (this.props.onFocus) {
        this.props.onFocus(e);
      }
    }
  }, {
    key: "handleBlur",
    value: function handleBlur(e) {
      if (this.props.onBlur) {
        this.props.onBlur(e);
      }
    }
  }, {
    key: "onSelectFocused",
    value: function onSelectFocused(e) {
      e.preventDefault();

      if (this.props.onClick) {
        this.props.onClick(e);
      }

      if (this.props.onSelect && !e.isPropagationStopped()) {
        this.props.onSelect(this.props.value, e);
      }
    }
  }, {
    key: "onKeyDown",
    value: function onKeyDown(e) {
      var _this$props = this.props,
          onKeyDown = _this$props.onKeyDown,
          disabled = _this$props.disabled;

      if (onKeyDown) {
        onKeyDown(e);
      }

      if (!disabled) {
        _events.interpretKeyboardEvent.call(this, e);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          icon = _this$props2.icon,
          label = _this$props2.label,
          className = _this$props2.className,
          children = _this$props2.children,
          selected = _this$props2.selected,
          disabled = _this$props2.disabled,
          focused = _this$props2.focused,
          hasNestedMenu = _this$props2.hasNestedMenu,
          _this$props2$tabIndex = _this$props2.tabIndex,
          tabIndex = _this$props2$tabIndex === void 0 ? 0 : _this$props2$tabIndex,
          _this$props2$role = _this$props2.role,
          role = _this$props2$role === void 0 ? 'option' : _this$props2$role,
          otherProps = _objectWithoutProperties(_this$props2, ["icon", "label", "className", "children", "selected", "disabled", "focused", "hasNestedMenu", "tabIndex", "role"]);

      delete otherProps.value;
      return (
        /* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */
        _react["default"].createElement("li", _extends({}, (0, _filterDOMProps["default"])(otherProps), {
          className: (0, _classnames["default"])('spectrum-Menu-item', {
            'is-selected': selected,
            'is-disabled': disabled,
            'is-focused': focused
          }, className),
          onKeyDown: this.onKeyDown,
          onMouseEnter: disabled ? null : this.handleMouseEnter,
          onFocus: disabled ? null : this.handleFocus,
          onClick: disabled ? null : this.onSelectFocused,
          onBlur: this.handleBlur
          /* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */
          ,
          tabIndex: !disabled ? tabIndex : null,
          role: role,
          "aria-checked": role === 'menuitemcheckbox' || role === 'menuitemradio' ? !!selected : null,
          "aria-selected": role === 'option' ? !!selected || !!focused : null,
          "aria-disabled": disabled || null
        }), (0, _icon.cloneIcon)(icon, {
          size: 'S'
        }), _react["default"].createElement("span", {
          className: "spectrum-Menu-itemLabel"
        }, label || children), selected && _react["default"].createElement(_CheckmarkMedium["default"], {
          size: null,
          className: "spectrum-Menu-checkmark"
        }), hasNestedMenu && _react["default"].createElement(_ChevronRightMedium["default"], {
          className: "spectrum-Menu-chevron"
        }))
      );
    }
  }]);

  return ListItem;
}(_react.Component), _defineProperty(_class2, "propTypes", {
  /**
   * Whether or not the list item is selected
   */
  selected: _propTypes["default"].bool,

  /**
   * Whether or not  the list item is disabled
   */
  disabled: _propTypes["default"].bool,

  /**
   * Callback for when the list item is clicked
   */
  onClick: _propTypes["default"].func,

  /**
   * Callback for when the list item is selected
   */
  onSelect: _propTypes["default"].func,

  /**
   * The WAI-ARIA role for the list item. Defaults to "option", but could be "menuitem", "menuitemcheckbox", or "menuitemradio" depending on context.
   */
  role: _propTypes["default"].oneOf(['option', 'menuitem', 'menuitemcheckbox', 'menuitemradio'])
}), _defineProperty(_class2, "defaultProps", {
  selected: false,
  disabled: false,
  onSelect: function onSelect() {},
  role: 'option'
}), _temp)) || _class;

exports["default"] = ListItem;