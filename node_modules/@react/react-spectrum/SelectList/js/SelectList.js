"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _convertUnsafeMethod = _interopRequireDefault(require("../../utils/convertUnsafeMethod"));

var _List = require("../../List");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _class, _class2, _temp;

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var SelectList = (0, _convertUnsafeMethod["default"])(_class = (_temp = _class2 =
/*#__PURE__*/
function (_Component) {
  _inherits(SelectList, _Component);

  function SelectList(props) {
    var _this;

    _classCallCheck(this, SelectList);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectList).call(this, props));

    _defineProperty(_assertThisInitialized(_this), "renderListOfOptions", function (options) {
      return options.map(function (option, index) {
        return _react["default"].createElement(_List.ListItem, {
          key: index,
          icon: option.icon,
          selected: _this.isSelected(option),
          disabled: _this.props.disabled || option.disabled,
          onSelect: _this.handleSelect.bind(_assertThisInitialized(_this), option)
        }, _this.props.renderItem ? _this.props.renderItem(option) : option.label);
      });
    });

    _this.state = {
      value: props.value
    };
    return _this;
  }

  _createClass(SelectList, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(props) {
      if (props.value && props.value !== this.state.value) {
        this.setState({
          value: props.value
        });
      }
    }
  }, {
    key: "addSelection",
    value: function addSelection(option) {
      return [].concat(_toConsumableArray(this.state.value || []), [option.value]);
    }
  }, {
    key: "removeSelection",
    value: function removeSelection(option) {
      var value = this.state.value || [];
      var index = value.indexOf(option.value);
      return [].concat(_toConsumableArray(value.slice(0, index)), _toConsumableArray(value.slice(index + 1, value.length)));
    }
  }, {
    key: "handleSelect",
    value: function handleSelect(option) {
      var nextOptions;

      if (this.props.multiple) {
        if (this.isSelected(option)) {
          nextOptions = this.removeSelection(option);
        } else {
          nextOptions = this.addSelection(option);
        }
      } else {
        nextOptions = option.value;
      } // Set state if in uncontrolled mode


      if (!('value' in this.props)) {
        this.setState({
          value: nextOptions
        });
      }

      if (this.props.onChange) {
        this.props.onChange(nextOptions);
      }
    }
  }, {
    key: "isSelected",
    value: function isSelected(option) {
      return this.props.multiple ? this.state.value && this.state.value.indexOf(option.value) >= 0 : this.state.value === option.value;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          _this$props$options = _this$props.options,
          options = _this$props$options === void 0 ? [] : _this$props$options,
          _this$props$multiple = _this$props.multiple,
          multiple = _this$props$multiple === void 0 ? false : _this$props$multiple,
          _this$props$disabled = _this$props.disabled,
          disabled = _this$props$disabled === void 0 ? false : _this$props$disabled,
          _this$props$invalid = _this$props.invalid,
          invalid = _this$props$invalid === void 0 ? false : _this$props$invalid,
          _this$props$required = _this$props.required,
          required = _this$props$required === void 0 ? false : _this$props$required,
          className = _this$props.className,
          otherProps = _objectWithoutProperties(_this$props, ["options", "multiple", "disabled", "invalid", "required", "className"]);

      delete otherProps.onTab;
      delete otherProps.renderItem;
      return _react["default"].createElement(_List.List, _extends({
        className: className,
        "aria-multiselectable": multiple,
        "aria-disabled": disabled,
        "aria-invalid": invalid,
        "aria-required": required,
        selectable: true
      }, otherProps), this.renderListOfOptions(options));
    }
  }]);

  return SelectList;
}(_react.Component), _defineProperty(_class2, "propTypes", {
  /** Whether the SelectList is disabled */
  disabled: _propTypes["default"].bool,

  /** Whether to show the invalid icon and styling */
  invalid: _propTypes["default"].bool,

  /** Whether multiple options are able to be selected */
  multiple: _propTypes["default"].bool,

  /** Function called when the selected options are changed */
  onChange: _propTypes["default"].func,

  /** Array of strings of options in list */
  options: _propTypes["default"].arrayOf(_propTypes["default"].object),

  /** Whether an input is required */
  required: _propTypes["default"].bool,

  /** Array of pre-selected values*/
  value: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].string), _propTypes["default"].string]),

  /**
   * A function that returns a wrapper component to render a list item label.
   * Useful in providing custom html to the rendered label.
   */
  renderItem: _propTypes["default"].func
}), _defineProperty(_class2, "defaultProps", {
  options: [],
  multiple: false,
  disabled: false,
  invalid: false,
  required: false
}), _temp)) || _class;

exports["default"] = SelectList;