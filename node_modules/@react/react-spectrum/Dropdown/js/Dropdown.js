"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _autobindDecorator = _interopRequireDefault(require("autobind-decorator"));

var _events = require("../../utils/events");

var _createId = _interopRequireDefault(require("../../utils/createId"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _Menu = require("../../Menu");

var _OverlayTrigger = _interopRequireDefault(require("../../OverlayTrigger"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _class, _class2, _temp;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Dropdown = (0, _autobindDecorator["default"])(_class = (_temp = _class2 =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Dropdown, _React$Component);

  function Dropdown(props) {
    var _this;

    _classCallCheck(this, Dropdown);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dropdown).call(this, props));
    _this.dropdownId = (0, _createId["default"])();
    _this.state = {
      open: false
    };
    return _this;
  }

  _createClass(Dropdown, [{
    key: "onOpen",
    value: function onOpen(e) {
      this.setState({
        open: true
      });

      if (this.props.onOpen) {
        this.props.onOpen(e);
      }
    }
  }, {
    key: "onClose",
    value: function onClose(e) {
      this.setState({
        open: false
      });

      if (this.props.onClose) {
        this.props.onClose(e);
      }
    }
  }, {
    key: "onMenuClose",
    value: function onMenuClose() {
      this.overlayTrigger.hide();
    }
  }, {
    key: "onSelect",
    value: function onSelect() {
      if (this.props.closeOnSelect) {
        this.onMenuClose();
      }

      if (this.props.onSelect) {
        var _this$props;

        (_this$props = this.props).onSelect.apply(_this$props, arguments);
      }
    }
  }, {
    key: "onClick",
    value: function onClick(e) {
      if (this.props.onClick) {
        this.props.onClick(e);
      }
    }
  }, {
    key: "onKeyDownTrigger",
    value: function onKeyDownTrigger(e) {
      if (typeof e.isDefaultPrevented === 'function' && e.isDefaultPrevented() || e.defaultPrevented) {
        return;
      }

      if (this.triggerRef) {
        switch (e.key) {
          case 'Enter':
          case 'ArrowDown':
          case ' ':
            e.preventDefault();
            e.stopPropagation();
            this.triggerRef.onClick();
            break;
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          alignRight = _this$props2.alignRight,
          closeOnSelect = _this$props2.closeOnSelect,
          flip = _this$props2.flip,
          trigger = _this$props2.trigger,
          onLongClick = _this$props2.onLongClick,
          otherProps = _objectWithoutProperties(_this$props2, ["alignRight", "closeOnSelect", "flip", "trigger", "onLongClick"]);

      var children = _react["default"].Children.toArray(this.props.children);

      var triggerChild = children.find(function (c) {
        return c.props.dropdownTrigger;
      }) || children[0];
      var triggerId = triggerChild.props.id || this.dropdownId + '-trigger';
      var menu = children.find(function (c) {
        return c.props.dropdownMenu || c.type === _Menu.Menu;
      }) || children[1];
      var menuId = menu.props.id || this.dropdownId + '-menu';
      delete otherProps.onOpen;
      delete otherProps.onClose;
      delete otherProps.onClick;
      return _react["default"].createElement("div", (0, _filterDOMProps["default"])(otherProps), children.map(function (child, index) {
        if (child === triggerChild) {
          return _react["default"].createElement(_OverlayTrigger["default"], {
            target: _this2,
            trigger: trigger,
            placement: alignRight ? 'bottom right' : 'bottom left',
            ref: function ref(t) {
              return _this2.overlayTrigger = t;
            },
            onLongClick: onLongClick,
            onClick: _this2.onClick,
            onShow: _this2.onOpen,
            closeOnSelect: closeOnSelect,
            key: index,
            onHide: _this2.onClose,
            flip: flip,
            delayHide: 0
          }, _react["default"].cloneElement(triggerChild, {
            id: triggerId,
            'aria-haspopup': triggerChild.props['aria-haspopup'] || 'true',
            'aria-expanded': _this2.state.open || null,
            'aria-controls': _this2.state.open ? menuId : null,
            onKeyDown: (0, _events.chain)(triggerChild.props.onKeyDown, _this2.onKeyDownTrigger),
            ref: function ref(node) {
              _this2.triggerRef = node;
              var ref = triggerChild.ref;

              if (typeof ref === 'function') {
                ref(node);
              }
            }
          }), _react["default"].cloneElement(menu, {
            id: menuId,
            'aria-labelledby': menu.props['aria-labelledby'] || triggerId,
            onClose: _this2.onMenuClose,
            onSelect: _this2.onSelect,
            autoFocus: true,
            closeOnSelect: closeOnSelect
          }));
        } else if (child !== menu) {
          return child;
        }
      }));
    }
  }]);

  return Dropdown;
}(_react["default"].Component), _defineProperty(_class2, "propTypes", {
  /**
   * If true, dropdown will close on selection of an item
   */
  closeOnSelect: _propTypes["default"].bool,

  /**
   * Determines what kind of action opens the menu
   */
  trigger: _propTypes["default"].oneOf(['click', 'longClick', 'hover', 'focus']),

  /**
   * Callback for when the dropdown is opened
   */
  onOpen: _propTypes["default"].func,

  /**
   * Callback for when the dropdown is closed
   */
  onClose: _propTypes["default"].func,

  /**
   * Callback for when an item is selected from the dropdown
   */
  onSelect: _propTypes["default"].func,

  /**
   * Aligns the dropdown to the right or left of the button opening the dropdown
   */
  alignRight: _propTypes["default"].bool,

  /**
   * Sets whether the overlay is flippable
   */
  flip: _propTypes["default"].bool
}), _defineProperty(_class2, "defaultProps", {
  closeOnSelect: true,
  trigger: 'click'
}), _temp)) || _class;

exports["default"] = Dropdown;