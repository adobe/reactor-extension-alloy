"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _Button = _interopRequireDefault(require("../../Button"));

var _classnames = _interopRequireDefault(require("classnames"));

var _HelpOutline = _interopRequireDefault(require("../../Icon/HelpOutline"));

var _Link = _interopRequireDefault(require("../../Link"));

var _List = require("../../List");

var _react = _interopRequireWildcard(require("react"));

var _Search = _interopRequireDefault(require("../../Search"));

var _ShellMenu = _interopRequireDefault(require("./ShellMenu"));

var _Wait = _interopRequireDefault(require("../../Wait"));

require("../style/ShellHelp.css");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ShellHelp =
/*#__PURE__*/
function (_Component) {
  _inherits(ShellHelp, _Component);

  function ShellHelp() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, ShellHelp);

    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShellHelp)).call.apply(_getPrototypeOf2, [this].concat(_args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      searchTerm: ''
    });

    _defineProperty(_assertThisInitialized(_this), "handleSearch", function (val) {
      var onSearch = _this.props.onSearch;
      onSearch(val);

      _this.setState({
        searchTerm: val
      });
    });

    _defineProperty(_assertThisInitialized(_this), "handleVisible", function () {
      if (_this.contentRef) {
        _this.contentRef.querySelector('.spectrum-Search-input').focus();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleResultClick", function () {
      if (_this.props.onResultClick) {
        var _this$props;

        (_this$props = _this.props).onResultClick.apply(_this$props, arguments);
      }
    });

    return _this;
  }

  _createClass(ShellHelp, [{
    key: "renderResults",
    value: function renderResults() {
      var searchResults = this.props.searchResults;

      if (searchResults) {
        return this.renderSearchResults();
      }

      return this.renderDefaultResults();
    }
  }, {
    key: "renderSearchResults",
    value: function renderSearchResults() {
      var _this2 = this;

      var _this$props2 = this.props,
          searchResults = _this$props2.searchResults,
          numTotalResults = _this$props2.numTotalResults,
          moreSearchResultsUrl = _this$props2.moreSearchResultsUrl;
      var searchTerm = this.state.searchTerm; // https://github.com/adobe/react-coral/issues/134
      // unicode for: '&nbsp; &bull; &nbsp';

      var separator = "\xA0 \u2022 \xA0";
      var allResults = {
        href: "".concat(moreSearchResultsUrl, "?q=").concat(searchTerm),
        title: "See all ".concat(numTotalResults, " results")
      };
      return _react["default"].createElement(_List.List, {
        className: "coral3-Shell-help-results"
      }, numTotalResults !== 0 && searchResults && searchResults.length ? searchResults.map(function (result, index) {
        return _react["default"].createElement(_List.ListItem, {
          key: index,
          onClick: _this2.handleResultClick.bind(_this2, result)
        }, _react["default"].createElement(_Link["default"], {
          href: result.href,
          target: "_blank",
          rel: "noopener noreferrer"
        }, _react["default"].createElement("span", null, result.title, _react["default"].createElement("div", {
          className: "coral3-Shell-help-result-description"
        }, Array.isArray(result.tags) ? result.tags.join(separator) : ''))));
      }).concat(_react["default"].createElement(_List.ListItem, {
        key: "all-results",
        onClick: this.handleResultClick.bind(this, allResults)
      }, _react["default"].createElement(_Link["default"], {
        className: "spectrum-Link coral3-Shell-help-allResults",
        href: allResults.href,
        target: "_blank",
        rel: "noopener noreferrer"
      }, allResults.title))) : _react["default"].createElement("div", {
        className: "coral3-Shell-help-resultMessage"
      }, _react["default"].createElement("div", {
        className: "coral3-Shell-help-resultMessage-container"
      }, _react["default"].createElement("div", {
        className: "coral-Heading--1 coral3-Shell-help-resultMessage-heading"
      }, "No results found"))));
    }
  }, {
    key: "renderDefaultResults",
    value: function renderDefaultResults() {
      var _this3 = this;

      var defaultResults = this.props.defaultResults;
      return _react["default"].createElement(_List.List, {
        className: "coral3-Shell-help-items"
      }, defaultResults && defaultResults.length ? defaultResults.map(function (result, index) {
        return _react["default"].createElement(_List.ListItem, {
          icon: result.icon,
          key: index,
          onClick: _this3.handleResultClick.bind(_this3, result)
        }, _react["default"].createElement(_Link["default"], {
          className: "coral3-Shell-help-item",
          href: result.href,
          target: "_blank",
          rel: "noopener noreferrer"
        }, result.label));
      }) : null);
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var _this$props3 = this.props,
          className = _this$props3.className,
          loading = _this$props3.loading,
          otherProps = _objectWithoutProperties(_this$props3, ["className", "loading"]);

      return _react["default"].createElement(_ShellMenu["default"], _extends({
        placement: "right",
        animateFrom: "top",
        target: _react["default"].createElement(_Button["default"], {
          className: "coral3-Shell-menu-button",
          variant: "minimal",
          icon: _react["default"].createElement(_HelpOutline["default"], null)
        }),
        onVisible: this.handleVisible,
        onHidden: this.props.onHide
      }, otherProps), _react["default"].createElement("div", {
        ref: function ref(el) {
          _this4.contentRef = el;
        },
        className: (0, _classnames["default"])('coral3-Shell-help', className)
      }, _react["default"].createElement(_Search["default"], {
        className: "coral3-Shell-help-search",
        placeholder: "Search Help",
        onSubmit: this.handleSearch,
        onChange: this.props.onChange,
        quiet: true
      }), loading ? _react["default"].createElement("div", {
        className: "coral3-Shell-help-loading"
      }, _react["default"].createElement(_Wait["default"], {
        className: "coral3-Shell-help-loading-wait"
      }), _react["default"].createElement("span", {
        className: "coral-Heading--2 coral3-Shell-help-loading-info"
      }, "Searching Help...")) : this.renderResults()));
    }
  }]);

  return ShellHelp;
}(_react.Component);

exports["default"] = ShellHelp;

_defineProperty(ShellHelp, "defaultProps", {
  defaultResults: [],
  onSearch: function onSearch() {},
  onChange: function onChange() {},
  onHide: function onHide() {},
  onResultClick: function onResultClick() {}
});

ShellHelp.displayName = 'ShellHelp';