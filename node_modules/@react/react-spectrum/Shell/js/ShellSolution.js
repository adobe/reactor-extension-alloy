"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = ShellSolution;

var _classnames = _interopRequireDefault(require("classnames"));

var _icon = require("../../utils/icon");

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ShellSolution(_ref) {
  var href = _ref.href,
      label = _ref.label,
      icon = _ref.icon,
      entitled = _ref.entitled,
      className = _ref.className,
      children = _ref.children,
      otherProps = _objectWithoutProperties(_ref, ["href", "label", "icon", "entitled", "className", "children"]);

  return _react["default"].createElement("a", _extends({
    className: (0, _classnames["default"])('coral3-Shell-solution', {
      'coral3-Shell-solution--linked': entitled
    }, className),
    href: href
  }, otherProps), (0, _icon.cloneIcon)(icon, {
    className: 'coral3-Shell-solution-icon',
    size: 'L'
  }), _react["default"].createElement("div", {
    className: "coral3-Shell-solution-label"
  }, label, children));
}

ShellSolution.displayName = 'ShellSolution';