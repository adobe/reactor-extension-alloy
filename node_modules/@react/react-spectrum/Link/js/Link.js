"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Link;

var _events = require("../../utils/events");

var _classnames = _interopRequireDefault(require("classnames"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require("../../spectrum-css/link/index.css");

  require("../../spectrum-css/link/index-diff.css");
} else if (process.env.SCALE_LARGE) {
  require("../../spectrum-css/link/index-lg.css");
} else {
  require("../../spectrum-css/link/index.css");
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require("../../spectrum-css/link/multiStops/light.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require("../../spectrum-css/link/multiStops/dark.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require("../../spectrum-css/link/multiStops/lightest.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require("../../spectrum-css/link/multiStops/darkest.css");

function preventDefault(e) {
  if (!e.defaultPrevented) {
    e.preventDefault();
  }
}

function Link(_ref) {
  var subtle = _ref.subtle,
      variant = _ref.variant,
      children = _ref.children,
      className = _ref.className,
      href = _ref.href,
      onClick = _ref.onClick,
      otherProps = _objectWithoutProperties(_ref, ["subtle", "variant", "children", "className", "href", "onClick"]);

  if (subtle) {
    console.warn('The "subtle" prop of Link is deprecated. Please use variant="quiet" instead.');
    variant = 'quiet';
  }

  if (variant === 'subtle') {
    console.warn('The "subtle" variant of Link is deprecated. Please use variant="quiet" instead.');
    variant = 'quiet';
  }

  if (!href && typeof onClick === 'function') {
    href = '#';
    onClick = (0, _events.chain)(onClick, preventDefault);
  }

  return _react["default"].createElement("a", _extends({
    className: (0, _classnames["default"])('spectrum-Link', _defineProperty({}, "spectrum-Link--".concat(variant), variant), className),
    href: href,
    onClick: onClick
  }, (0, _filterDOMProps["default"])(otherProps)), children);
}

Link.propTypes = {
  /** Class to add to the Link */
  className: _propTypes["default"].string,

  /** Link variant */
  variant: _propTypes["default"].oneOf(['quiet', 'subtle', 'overBackground'])
};
Link.displayName = 'Link';