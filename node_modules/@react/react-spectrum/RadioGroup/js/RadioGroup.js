"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _convertUnsafeMethod = _interopRequireDefault(require("../../utils/convertUnsafeMethod"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _class, _class2, _temp;

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require("../../spectrum-css/fieldgroup/index.css");

  require("../../spectrum-css/fieldgroup/index-diff.css");
} else if (process.env.SCALE_LARGE) {
  require("../../spectrum-css/fieldgroup/index-lg.css");
} else {
  require("../../spectrum-css/fieldgroup/index.css");
}

var RadioGroup = (0, _convertUnsafeMethod["default"])(_class = (_temp = _class2 =
/*#__PURE__*/
function (_Component) {
  _inherits(RadioGroup, _Component);

  function RadioGroup(props) {
    var _this;

    _classCallCheck(this, RadioGroup);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(RadioGroup).call(this, props));

    _defineProperty(_assertThisInitialized(_this), "handleClickItem", function (value) {
      _this.setSelectedValue(value);
    });

    var selectedValue = props.selectedValue,
        defaultSelectedValue = props.defaultSelectedValue,
        children = props.children;
    var firstSelectedValue;

    _react["default"].Children.forEach(children, function (child) {
      if (child.props.checked) {
        firstSelectedValue = child.props.value;
      }
    });

    var defaultSelected = firstSelectedValue || defaultSelectedValue;
    _this.state = {
      selectedValue: selectedValue != null ? selectedValue : defaultSelected
    };
    return _this;
  }

  _createClass(RadioGroup, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      if ('selectedValue' in nextProps) {
        this.setState({
          selectedValue: nextProps.selectedValue
        });
      }
    }
  }, {
    key: "setSelectedValue",
    value: function setSelectedValue(value) {
      if (!('selectedValue' in this.props)) {
        this.setState({
          selectedValue: value
        });
      }

      this.props.onChange(value);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          name = _this$props.name,
          vertical = _this$props.vertical,
          labelsBelow = _this$props.labelsBelow,
          className = _this$props.className,
          children = _this$props.children,
          otherProps = _objectWithoutProperties(_this$props, ["name", "vertical", "labelsBelow", "className", "children"]);

      var selectedValue = this.state.selectedValue;
      return _react["default"].createElement("div", _extends({
        className: (0, _classnames["default"])('spectrum-FieldGroup', {
          'spectrum-FieldGroup--vertical': vertical
        }, className),
        role: "radiogroup"
      }, (0, _filterDOMProps["default"])(otherProps)), _react["default"].Children.map(children, function (child) {
        var _child$props = child.props,
            value = _child$props.value,
            _onChange = _child$props.onChange;

        if (value == null) {
          throw new Error('Each Radio Button must have a value property');
        }

        var radioGroupOnClick = _this2.handleClickItem.bind(_this2, value);

        return _react["default"].cloneElement(child, {
          checked: selectedValue === value,
          labelBelow: labelsBelow,
          name: name,
          onChange: function onChange(checked, e) {
            if (_onChange) {
              _onChange(value);
            }

            radioGroupOnClick(); // Let the RadioGroup change event propagate.

            e.stopPropagation();
          }
        });
      }));
    }
  }]);

  return RadioGroup;
}(_react.Component), _defineProperty(_class2, "propTypes", {
  /**
   * Value of the starting selected radio within the group
   */
  defaultSelectedValue: _propTypes["default"].string,

  /**
   * Controlled: Value of the selected radio within the group
   */
  selectedValue: _propTypes["default"].string,

  /**
   * Whether the label is rendered below the radio
   */
  labelBelow: _propTypes["default"].bool,

  /**
   * Render the radio group vertically instead of default horizontal
   */
  vertical: _propTypes["default"].bool
}), _defineProperty(_class2, "defaultProps", {
  vertical: false,
  labelsBelow: false,
  onChange: function onChange() {}
}), _temp)) || _class;

exports["default"] = RadioGroup;
RadioGroup.displayName = 'RadioGroup';