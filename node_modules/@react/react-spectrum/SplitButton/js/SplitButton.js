"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _autobindDecorator = _interopRequireDefault(require("autobind-decorator"));

var _Button = _interopRequireDefault(require("../../Button"));

var _ChevronDownMedium = _interopRequireDefault(require("../../Icon/core/ChevronDownMedium"));

var _classnames = _interopRequireDefault(require("classnames"));

var _createId = _interopRequireDefault(require("../../utils/createId"));

var _Dropdown = _interopRequireDefault(require("../../Dropdown"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _Menu = require("../../Menu");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _class;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require("../../spectrum-css/splitbutton/index.css");

  require("../../spectrum-css/splitbutton/index-diff.css");
} else if (process.env.SCALE_LARGE) {
  require("../../spectrum-css/splitbutton/index-lg.css");
} else {
  require("../../spectrum-css/splitbutton/index.css");
}

var SplitButton = (0, _autobindDecorator["default"])(_class =
/*#__PURE__*/
function (_React$Component) {
  _inherits(SplitButton, _React$Component);

  function SplitButton(props) {
    var _this;

    _classCallCheck(this, SplitButton);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SplitButton).call(this, props));
    _this.buttonId = (0, _createId["default"])();
    return _this;
  }

  _createClass(SplitButton, [{
    key: "onKeyDown",
    value: function onKeyDown(e) {
      if ((e.key === 'ArrowDown' || e.key === 'Down') && (e.altKey || e.target === _reactDom["default"].findDOMNode(this.dropdownRef.triggerRef))) {
        e.preventDefault();
        e.stopPropagation();
        this.dropdownRef.overlayTrigger.show(e);
      }

      if (this.props.onKeyDown) {
        this.props.onKeyDown(e);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          children = _this$props.children,
          className = _this$props.className,
          _this$props$id = _this$props.id,
          id = _this$props$id === void 0 ? this.buttonId : _this$props$id,
          onSelect = _this$props.onSelect,
          onOpen = _this$props.onOpen,
          onClose = _this$props.onClose,
          variant = _this$props.variant,
          disabled = _this$props.disabled,
          otherProps = _objectWithoutProperties(_this$props, ["children", "className", "id", "onSelect", "onOpen", "onClose", "variant", "disabled"]);

      return _react["default"].createElement(_Dropdown["default"], {
        ref: function ref(d) {
          return _this2.dropdownRef = d;
        },
        className: (0, _classnames["default"])('spectrum-SplitButton', className),
        alignRight: true,
        onSelect: onSelect,
        onOpen: onOpen,
        onClose: onClose,
        onKeyDown: this.onKeyDown,
        role: "group",
        "aria-labelledby": id
      }, _react["default"].createElement(_Button["default"], _extends({
        variant: variant
      }, (0, _filterDOMProps["default"])(otherProps), {
        disabled: disabled,
        className: "spectrum-SplitButton-action",
        id: id
      })), _react["default"].createElement(_Button["default"], {
        variant: variant,
        className: "spectrum-SplitButton-trigger",
        "aria-labelledby": id,
        disabled: disabled,
        dropdownTrigger: true
      }, _react["default"].createElement(_ChevronDownMedium["default"], {
        size: null,
        className: "spectrum-SplitButton-icon"
      })), _react["default"].createElement(_Menu.Menu, {
        "aria-labelledby": id
      }, children));
    }
  }]);

  return SplitButton;
}(_react["default"].Component)) || _class;

exports["default"] = SplitButton;
SplitButton.propTypes = {
  /** Items to render as dropdown menu items. MenuItem components are commonly used here. */
  children: _propTypes["default"].node,

  /** Function to trigger once button is selected. */
  onSelect: _propTypes["default"].func,

  /** Function to trigger when the button dropdown menu opens. */
  onOpen: _propTypes["default"].func,

  /** Function to trigger when the button dropdown menu closes. */
  onClose: _propTypes["default"].func,

  /** SplitButton variant to render. */
  variant: _propTypes["default"].oneOf(['primary', 'secondary', 'cta'])
};