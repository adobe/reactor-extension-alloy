"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Image or file preview, displayed at the top of a card. Pass contents as children, often an Asset component.
 */
var CardPreview =
/*#__PURE__*/
function (_React$Component) {
  _inherits(CardPreview, _React$Component);

  function CardPreview() {
    _classCallCheck(this, CardPreview);

    return _possibleConstructorReturn(this, _getPrototypeOf(CardPreview).apply(this, arguments));
  }

  _createClass(CardPreview, [{
    key: "render",
    value: function render() {
      var child = _react["default"].Children.only(this.props.children);

      var _this$context = this.context,
          cardVariant = _this$context.cardVariant,
          onLoad = _this$context.onLoad,
          hasTitle = _this$context.hasTitle;
      var smartness = 0;

      if (cardVariant === 'quiet') {
        smartness = 1;
      } // Default image to decorative if there is already a title in the CardBody.
      // If the child already defines the decorative prop or alt prop, don't override it.


      var decorative = hasTitle;

      if (child.props.decorative != null || child.props.alt != null) {
        decorative = child.props.decorative;
      }

      return _react["default"].createElement("div", {
        className: "spectrum-Card-preview"
      }, _react["default"].cloneElement(child, {
        smartness: smartness,
        onLoad: onLoad,
        decorative: decorative
      }));
    }
  }]);

  return CardPreview;
}(_react["default"].Component);

exports["default"] = CardPreview;

_defineProperty(CardPreview, "contextTypes", {
  cardVariant: _propTypes["default"].string,
  onLoad: _propTypes["default"].func,
  hasTitle: _propTypes["default"].bool
});