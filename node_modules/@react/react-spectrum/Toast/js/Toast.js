"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Toast;

var _AlertMedium = _interopRequireDefault(require("../../Icon/core/AlertMedium"));

var _Button = _interopRequireDefault(require("../../Button"));

var _classnames = _interopRequireDefault(require("classnames"));

var _CrossMedium = _interopRequireDefault(require("../../Icon/core/CrossMedium"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _InfoMedium = _interopRequireDefault(require("../../Icon/core/InfoMedium"));

var _intl = require("../../utils/intl");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _SuccessMedium = _interopRequireDefault(require("../../Icon/core/SuccessMedium"));

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var intlMessages = {
  "cs-CZ": _interopRequireDefault(require("./../intl/cs-CZ.json"))["default"],
  "da-DK": _interopRequireDefault(require("./../intl/da-DK.json"))["default"],
  "de-DE": _interopRequireDefault(require("./../intl/de-DE.json"))["default"],
  "en-US": _interopRequireDefault(require("./../intl/en-US.json"))["default"],
  "es-ES": _interopRequireDefault(require("./../intl/es-ES.json"))["default"],
  "fi-FI": _interopRequireDefault(require("./../intl/fi-FI.json"))["default"],
  "fr-FR": _interopRequireDefault(require("./../intl/fr-FR.json"))["default"],
  "hu-HU": _interopRequireDefault(require("./../intl/hu-HU.json"))["default"],
  "it-IT": _interopRequireDefault(require("./../intl/it-IT.json"))["default"],
  "ja-JP": _interopRequireDefault(require("./../intl/ja-JP.json"))["default"],
  "ko-KR": _interopRequireDefault(require("./../intl/ko-KR.json"))["default"],
  "nb-NO": _interopRequireDefault(require("./../intl/nb-NO.json"))["default"],
  "nl-NL": _interopRequireDefault(require("./../intl/nl-NL.json"))["default"],
  "pl-PL": _interopRequireDefault(require("./../intl/pl-PL.json"))["default"],
  "pt-BR": _interopRequireDefault(require("./../intl/pt-BR.json"))["default"],
  "ru-RU": _interopRequireDefault(require("./../intl/ru-RU.json"))["default"],
  "sv-SE": _interopRequireDefault(require("./../intl/sv-SE.json"))["default"],
  "tr-TR": _interopRequireDefault(require("./../intl/tr-TR.json"))["default"],
  "uk-UA": _interopRequireDefault(require("./../intl/uk-UA.json"))["default"],
  "zh-CN": _interopRequireDefault(require("./../intl/zh-CN.json"))["default"],
  "zh-TW": _interopRequireDefault(require("./../intl/zh-TW.json"))["default"]
};

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require("../../spectrum-css/toast/index.css");

  require("../../spectrum-css/toast/index-diff.css");
} else if (process.env.SCALE_LARGE) {
  require("../../spectrum-css/toast/index-lg.css");
} else {
  require("../../spectrum-css/toast/index.css");
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require("../../spectrum-css/toast/multiStops/light.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require("../../spectrum-css/toast/multiStops/dark.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require("../../spectrum-css/toast/multiStops/lightest.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require("../../spectrum-css/toast/multiStops/darkest.css");
var formatMessage = (0, _intl.messageFormatter)(intlMessages);
var ICONS = {
  error: _AlertMedium["default"],
  warning: _AlertMedium["default"],
  info: _InfoMedium["default"],
  success: _SuccessMedium["default"]
};
var DEFAULT_ROLE = 'alert';

function Toast(_ref) {
  var variant = _ref.variant,
      children = _ref.children,
      closable = _ref.closable,
      onClose = _ref.onClose,
      onAction = _ref.onAction,
      className = _ref.className,
      timeout = _ref.timeout,
      actionLabel = _ref.actionLabel,
      closeOnAction = _ref.closeOnAction,
      otherProps = _objectWithoutProperties(_ref, ["variant", "children", "closable", "onClose", "onAction", "className", "timeout", "actionLabel", "closeOnAction"]);

  var Icon = ICONS[variant];
  var role = otherProps.role || DEFAULT_ROLE;

  var handleAction = function handleAction() {
    if (onAction) {
      onAction.apply(void 0, arguments);
    }

    if (closeOnAction && onClose) {
      onClose.apply(void 0, arguments);
    }
  };

  return _react["default"].createElement("div", _extends({
    role: role,
    className: (0, _classnames["default"])('spectrum-Toast', _defineProperty({}, 'spectrum-Toast--' + variant, variant), className)
  }, (0, _filterDOMProps["default"])(otherProps)), Icon && _react["default"].createElement(Icon, {
    size: null,
    className: "spectrum-Toast-typeIcon",
    alt: formatMessage(variant)
  }), _react["default"].createElement("div", {
    className: "spectrum-Toast-body"
  }, _react["default"].createElement("div", {
    className: "spectrum-Toast-content"
  }, children), actionLabel && _react["default"].createElement(_Button["default"], {
    label: actionLabel,
    quiet: true,
    variant: "overBackground",
    onClick: handleAction
  })), closable && _react["default"].createElement("div", {
    className: "spectrum-Toast-buttons"
  }, _react["default"].createElement("button", {
    "aria-label": formatMessage('close'),
    className: "spectrum-ClearButton spectrum-ClearButton--medium spectrum-ClearButton--overBackground",
    onClick: onClose
  }, _react["default"].createElement(_CrossMedium["default"], {
    size: null
  }))));
}

Toast.propTypes = {
  /** Contents to be displayed in the Toast. */
  children: _propTypes["default"].node,

  /** Variant of toast to use. */
  variant: _propTypes["default"].oneOf(['error', 'warning', 'info', 'success']),

  /** Whether to show close button on toast. */
  closable: _propTypes["default"].bool,

  /** Label for action button. */
  actionLabel: _propTypes["default"].string,

  /** Should the action button close the toast? */
  closeOnAction: _propTypes["default"].bool,

  /** Function called when toast is closed. */
  onClose: _propTypes["default"].func,

  /** Function called when action button is clicked. */
  onAction: _propTypes["default"].func,

  /**
   * Set the amount of time in milliseconds that the toast should persist.
   * If set to 0, the toast will remain until closed manually.
  */
  timeout: _propTypes["default"].number
};