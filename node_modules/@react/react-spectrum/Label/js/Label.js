"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Label;

var _classnames = _interopRequireDefault(require("classnames"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require("../../spectrum-css/label/index.css");

  require("../../spectrum-css/label/index-diff.css");
} else if (process.env.SCALE_LARGE) {
  require("../../spectrum-css/label/index-lg.css");
} else {
  require("../../spectrum-css/label/index.css");
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require("../../spectrum-css/label/multiStops/light.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require("../../spectrum-css/label/multiStops/dark.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require("../../spectrum-css/label/multiStops/lightest.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require("../../spectrum-css/label/multiStops/darkest.css");
var variants = ['grey', 'green', 'blue', 'red', 'orange', 'and', 'or', 'active', 'inactive'];

function Label(_ref) {
  var size = _ref.size,
      children = _ref.children,
      className = _ref.className,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? variants[0] : _ref$variant,
      otherProps = _objectWithoutProperties(_ref, ["size", "children", "className", "variant"]);

  var sizeClassPart = {
    L: 'large'
  }[size];
  return _react["default"].createElement("span", _extends({
    className: (0, _classnames["default"])('spectrum-Label', "spectrum-Label--".concat(variant), _defineProperty({}, "spectrum-Label--".concat(sizeClassPart), !!sizeClassPart), className)
  }, (0, _filterDOMProps["default"])(otherProps)), children);
}

Label.displayName = 'Label';
Label.propTypes = {
  /**
   * Size of the label
   */
  size: _propTypes["default"].string,

  /**
   * Variant of the label to display
   */
  variant: _propTypes["default"].oneOf(variants)
};