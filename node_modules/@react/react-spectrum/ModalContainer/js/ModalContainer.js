"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.modalManager = exports.Modal = exports["default"] = void 0;

var _autobindDecorator = _interopRequireDefault(require("autobind-decorator"));

var _Modal = _interopRequireDefault(require("react-overlays/lib/Modal"));

var _events = require("../../utils/events");

var _classnames = _interopRequireDefault(require("classnames"));

var _closest = _interopRequireDefault(require("dom-helpers/query/closest"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _ModalManager = _interopRequireDefault(require("./ModalManager"));

var _OpenTransition = _interopRequireDefault(require("../../utils/OpenTransition"));

var _PortalContainer = _interopRequireDefault(require("../../PortalContainer"));

var _react = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _class, _temp;

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require("../../spectrum-css/underlay/index.css");

  require("../../spectrum-css/underlay/index-diff.css");
} else if (process.env.SCALE_LARGE) {
  require("../../spectrum-css/underlay/index-lg.css");
} else {
  require("../../spectrum-css/underlay/index.css");
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require("../../spectrum-css/underlay/multiStops/light.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require("../../spectrum-css/underlay/multiStops/dark.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require("../../spectrum-css/underlay/multiStops/lightest.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require("../../spectrum-css/underlay/multiStops/darkest.css");
var MODAL_LIFECYCLE_METHODS = ['onBackdropClick', 'onEnter', 'onEntering', 'onEntered', 'onEscapeKeyDown', 'onExit', 'onExiting', 'onExited', 'onHide', 'onShow'];
var MANAGER_SINGLETON = new _ModalManager["default"]({
  handleContainerOverflow: false
});
exports.modalManager = MANAGER_SINGLETON;
var MODAL_KEY = 1;

var ModalContainer =
/*#__PURE__*/
function () {
  function ModalContainer() {
    _classCallCheck(this, ModalContainer);
  }

  _createClass(ModalContainer, null, [{
    key: "show",
    value: function show(content, context, container) {
      var key = MODAL_KEY++; // If container is not specified, look for the provider of context

      if (!container && context) {
        container = function container() {
          return (0, _closest["default"])(_reactDom["default"].findDOMNode(context), '.react-spectrum-provider');
        };
      } else if (!container) {
        container = function container() {
          return document.querySelector('.react-spectrum-provider') || document.body;
        };
      }

      var _content$props = content.props,
          disableEscKey = _content$props.disableEscKey,
          role = _content$props.role,
          onClose = _content$props.onClose,
          onHide = _content$props.onHide,
          onExited = _content$props.onExited,
          modalProps = _objectWithoutProperties(_content$props, ["disableEscKey", "role", "onClose", "onHide", "onExited"]);

      role = role && role.indexOf('dialog') !== -1 ? 'presentation' : 'dialog'; // filter out content.props that are not modal lifecycle methods

      modalProps = MODAL_LIFECYCLE_METHODS.reduce(function (obj, key) {
        return _objectSpread({}, obj, _defineProperty({}, key, modalProps[key]));
      }, {});

      var modal = _react["default"].createElement(Modal, _extends({}, modalProps, {
        container: container,
        key: key,
        keyboard: !disableEscKey,
        role: role,
        onClose: onClose,
        onHide: (0, _events.chain)(this.hide.bind(this, key), onHide, onExited),
        "aria-modal": role === 'dialog' || null
      }), content);

      _PortalContainer["default"].add(modal, context);

      return key;
    }
  }, {
    key: "hide",
    value: function hide(key) {
      _PortalContainer["default"].remove({
        key: key
      });
    }
  }]);

  return ModalContainer;
}();

exports["default"] = ModalContainer;

var Modal = (0, _autobindDecorator["default"])(_class = (_temp =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Modal, _React$Component);

  function Modal() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Modal);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Modal)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      show: true
    });

    return _this;
  }

  _createClass(Modal, [{
    key: "onClose",
    value: function onClose() {
      this.setState({
        show: false
      });

      if (this.props.onClose) {
        this.props.onClose();
      }
    }
  }, {
    key: "onEntering",
    value: function onEntering(e) {
      if (this.props.onEntering) {
        this.props.onEntering(e);
      } // Make sure that autoFocus actually moves focus to the Modal.


      if (this.baseModal.lastFocus === document.activeElement) {
        this.baseModal.autoFocus();
      }
    }
  }, {
    key: "backdropMode",
    value: function backdropMode() {
      /*
       * backdropClickable (bc)
       *     bc | !bc
       *     ---|------
       *      t |static
       * if fullscreenTakeover, then always false
       */
      var _this$props$children$ = this.props.children.props,
          backdropClickable = _this$props$children$.backdropClickable,
          mode = _this$props$children$.mode;
      var backdrop = 'static';

      if (backdropClickable) {
        backdrop = true;
      }

      if (mode === 'fullscreenTakeover') {
        backdrop = false;
      }

      return backdrop;
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var backdrop = this.backdropMode();

      var _this$props = this.props,
          children = _this$props.children,
          onHide = _this$props.onHide,
          modalProps = _objectWithoutProperties(_this$props, ["children", "onHide"]); // The z-index here should match the one in Overlay


      return _react["default"].createElement(_Modal["default"], _extends({}, modalProps, {
        style: {
          zIndex: 100000,
          position: 'relative'
        },
        show: this.state.show,
        ref: function ref(baseModal) {
          return _this2.baseModal = baseModal;
        },
        onEntering: this.onEntering,
        onExited: onHide,
        onHide: this.onClose,
        backdrop: backdrop,
        manager: MANAGER_SINGLETON,
        renderBackdrop: function renderBackdrop(props) {
          return _react["default"].createElement(Underlay, props);
        },
        transition: _OpenTransition["default"],
        backdropTransition: _OpenTransition["default"]
      }), (0, _react.cloneElement)(children, {
        onClose: this.onClose
      }));
    }
  }]);

  return Modal;
}(_react["default"].Component), _temp)) || _class;

exports.Modal = Modal;

var Underlay =
/*#__PURE__*/
function (_React$Component2) {
  _inherits(Underlay, _React$Component2);

  function Underlay() {
    _classCallCheck(this, Underlay);

    return _possibleConstructorReturn(this, _getPrototypeOf(Underlay).apply(this, arguments));
  }

  _createClass(Underlay, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          open = _this$props2.open,
          props = _objectWithoutProperties(_this$props2, ["open"]);

      return _react["default"].createElement("div", _extends({}, (0, _filterDOMProps["default"])(props), {
        className: (0, _classnames["default"])('spectrum-Underlay', {
          'is-open': open
        })
      }));
    }
  }]);

  return Underlay;
}(_react["default"].Component);