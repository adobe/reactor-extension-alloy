"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ModalManager2 = _interopRequireDefault(require("react-overlays/lib/ModalManager"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// needed for the modal manager class
var SpectrumModalManager =
/*#__PURE__*/
function (_ModalManager) {
  _inherits(SpectrumModalManager, _ModalManager);

  function SpectrumModalManager() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, SpectrumModalManager);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SpectrumModalManager)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "overflowMap", new Map());

    _defineProperty(_assertThisInitialized(_this), "superAdd", _this.add);

    _defineProperty(_assertThisInitialized(_this), "superRemove", _this.remove);

    _defineProperty(_assertThisInitialized(_this), "add", function (modal, container, className, isOverlay) {
      _this.superAdd(modal, container, className);

      _this.hideBodyOverflow(modal, isOverlay);
    });

    _defineProperty(_assertThisInitialized(_this), "hideBodyOverflow", function (modal, isOverlay) {
      var currentBodyOverflow = getComputedStyle(document.body).overflow; // if it's not an overlay, it's a modal and scrolling should be disabled (i know, it's weird to think about)

      if (!isOverlay && currentBodyOverflow !== 'hidden') {
        _this.overflowMap.set(modal, currentBodyOverflow);

        document.body.style.overflow = 'hidden';
      }
    });

    _defineProperty(_assertThisInitialized(_this), "remove", function (modal, container, className) {
      _this.superRemove(modal, container, className);

      _this.resetBodyOverflow(modal);
    });

    _defineProperty(_assertThisInitialized(_this), "resetBodyOverflow", function (modal) {
      if (_this.overflowMap.has(modal)) {
        document.body.style.overflow = _this.overflowMap.get(modal);

        _this.overflowMap["delete"](modal);
      }
    });

    return _this;
  }

  _createClass(SpectrumModalManager, [{
    key: "addToModal",
    value: function addToModal(child) {
      var isOverlay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var hideSiblingNodes = this.hideSiblingNodes;
      this.hideSiblingNodes = false;
      this.add(child, document.body, null, isOverlay);
      this.hideSiblingNodes = hideSiblingNodes;
    }
  }, {
    key: "removeFromModal",
    value: function removeFromModal(child) {
      var hideSiblingNodes = this.hideSiblingNodes;
      this.hideSiblingNodes = false;
      this.remove(child);
      this.hideSiblingNodes = hideSiblingNodes;
    }
  }]);

  return SpectrumModalManager;
}(_ModalManager2["default"]);

exports["default"] = SpectrumModalManager;