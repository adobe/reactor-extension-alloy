"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Radio;

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _SwitchBase = _interopRequireDefault(require("../../Switch/js/SwitchBase"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require("../../spectrum-css/radio/index.css");

  require("../../spectrum-css/radio/index-diff.css");
} else if (process.env.SCALE_LARGE) {
  require("../../spectrum-css/radio/index-lg.css");
} else {
  require("../../spectrum-css/radio/index.css");
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require("../../spectrum-css/radio/multiStops/light.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require("../../spectrum-css/radio/multiStops/dark.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require("../../spectrum-css/radio/multiStops/lightest.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require("../../spectrum-css/radio/multiStops/darkest.css");

function Radio(_ref) {
  var className = _ref.className,
      labelBelow = _ref.labelBelow,
      quiet = _ref.quiet,
      otherProps = _objectWithoutProperties(_ref, ["className", "labelBelow", "quiet"]);

  return _react["default"].createElement(_SwitchBase["default"], _extends({
    inputType: "radio",
    className: (0, _classnames["default"])('spectrum-Radio', {
      'spectrum-Radio--labelBelow': labelBelow,
      'spectrum-Radio--quiet': quiet
    }, className),
    inputClassName: "spectrum-Radio-input",
    markClassName: "spectrum-Radio-button",
    labelClassName: "spectrum-Radio-label"
  }, otherProps));
}

Radio.displayName = 'Radio';
Radio.propTypes = {
  /**
   * Whether the radio should start off checked (controlled state)
   */
  checked: _propTypes["default"].bool,

  /**
   * Class given to radio
   */
  className: _propTypes["default"].string,

  /**
   * Whether the radio should be checked on mount
   */
  defaultChecked: _propTypes["default"].bool,

  /**
   * Displays the invalid state of this component
   */
  invalid: _propTypes["default"].bool,

  /**
   * Label for radio
   */
  label: _propTypes["default"].string,

  /**
   * Whether label is below radio
   */
  labelBelow: _propTypes["default"].bool,

  /**
   * Whether radio is a quiet variation
   */
  quiet: _propTypes["default"].bool,

  /**
   * Whether label is rendered
   */
  renderLabel: _propTypes["default"].bool
};