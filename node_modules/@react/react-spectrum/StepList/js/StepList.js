"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = StepList;

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _TabListBase = _interopRequireDefault(require("../../TabList/js/TabListBase"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require("../../spectrum-css/steplist/index.css");

  require("../../spectrum-css/steplist/index-diff.css");
} else if (process.env.SCALE_LARGE) {
  require("../../spectrum-css/steplist/index-lg.css");
} else {
  require("../../spectrum-css/steplist/index.css");
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require("../../spectrum-css/steplist/multiStops/light.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require("../../spectrum-css/steplist/multiStops/dark.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require("../../spectrum-css/steplist/multiStops/lightest.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require("../../spectrum-css/steplist/multiStops/darkest.css");
var SMALL = 'S';
var LARGE = 'L';
var ON = 'on';

function StepList(_ref) {
  var className = _ref.className,
      _ref$interaction = _ref.interaction,
      interaction = _ref$interaction === void 0 ? ON : _ref$interaction,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? LARGE : _ref$size,
      otherProps = _objectWithoutProperties(_ref, ["className", "interaction", "size"]);

  return _react["default"].createElement(_TabListBase["default"], _extends({}, otherProps, {
    className: (0, _classnames["default"])('spectrum-Steplist', {
      'spectrum-Steplist--interactive': interaction === ON,
      'spectrum-Steplist--small': size === SMALL
    }, className),
    disabled: interaction !== ON,
    "aria-multiselectable": false,
    childMappingFunction: function childMappingFunction() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return getChildProps.apply(void 0, [size].concat(args));
    }
  }));
}

function getChildProps(size, tabList, child, index) {
  return {
    complete: +tabList.state.selectedIndex > index,
    size: size
  };
}

StepList.displayName = 'StepList';
StepList.propTypes = {
  /** Class to add to the step list */
  className: _propTypes["default"].string,

  /** Index of the selected step (uncontrolled state) */
  defaultSelectedIndex: _propTypes["default"].number,

  /** Turn step list interaction (clickable to progress) on or off */
  interaction: _propTypes["default"].oneOf([ON, 'off']),

  /** Index of the selected step */
  selectedIndex: _propTypes["default"].number,

  /** Size of the steps and step list */
  size: _propTypes["default"].oneOf(['S', 'L'])
};
StepList.defaultProps = {
  interaction: ON,
  size: LARGE
};