"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

require("../style/index.css");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require("../../spectrum-css/circleloader/index.css");

  require("../../spectrum-css/circleloader/index-diff.css");
} else if (process.env.SCALE_LARGE) {
  require("../../spectrum-css/circleloader/index-lg.css");
} else {
  require("../../spectrum-css/circleloader/index.css");
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require("../../spectrum-css/circleloader/multiStops/light.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require("../../spectrum-css/circleloader/multiStops/dark.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require("../../spectrum-css/circleloader/multiStops/lightest.css");
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require("../../spectrum-css/circleloader/multiStops/darkest.css");
var DETERMINATE = 'determinate';
var INDETERMINATE = 'indeterminate';

var Wait =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Wait, _React$Component);

  function Wait() {
    _classCallCheck(this, Wait);

    return _possibleConstructorReturn(this, _getPrototypeOf(Wait).apply(this, arguments));
  }

  _createClass(Wait, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          _this$props$value = _this$props.value,
          value = _this$props$value === void 0 ? 0 : _this$props$value,
          _this$props$size = _this$props.size,
          size = _this$props$size === void 0 ? 'M' : _this$props$size,
          _this$props$indetermi = _this$props.indeterminate,
          indeterminate = _this$props$indetermi === void 0 ? true : _this$props$indetermi,
          _this$props$centered = _this$props.centered,
          centered = _this$props$centered === void 0 ? false : _this$props$centered,
          className = _this$props.className,
          variant = _this$props.variant,
          otherProps = _objectWithoutProperties(_this$props, ["value", "size", "indeterminate", "centered", "className", "variant"]); // Determinate version has two high level masks, 1) right half, 2) left half
      // within each of those is a submask which rotates into view within that mask
      // but starts off on the opposite side so it's hidden
      // for first 50%, submask1 moves from -180 to 0 as it covers the first half
      // for the second 50%, submask1 stays in one place and submask2 rotates in
      // from -180 to 0


      var angle;
      var fillSubmask1Style = {};
      var fillSubmask2Style = {};
      var ariaValue = undefined;

      if (variant === DETERMINATE || variant === INDETERMINATE) {
        console.warn("The \"".concat(variant, "\" variant of Wait is deprecated. Please use the \"indeterminate\" prop instead."));
      }

      if (variant === DETERMINATE || !indeterminate) {
        value = Math.min(Math.max(+value, 0), 100);
        ariaValue = value;

        if (value > 0 && value <= 50) {
          angle = -180 + value / 50 * 180;
          fillSubmask1Style.transform = 'rotate(' + angle + 'deg)';
          fillSubmask2Style.transform = 'rotate(-180deg)';
        } else if (value > 50) {
          angle = -180 + (value - 50) / 50 * 180;
          fillSubmask1Style.transform = 'rotate(0deg)';
          fillSubmask2Style.transform = 'rotate(' + angle + 'deg)';
        }
      }

      return _react["default"].createElement("div", _extends({
        className: (0, _classnames["default"])('spectrum-CircleLoader', {
          'spectrum-CircleLoader--indeterminate': variant === INDETERMINATE || indeterminate && variant !== DETERMINATE,
          'spectrum-CircleLoader--small': size === 'S',
          'spectrum-CircleLoader--large': size === 'L',
          'spectrum-CircleLoader--overBackground': variant === 'overBackground',
          'react-spectrum-Wait--centered': centered
        }, className),
        role: "progressbar",
        "aria-valuenow": ariaValue,
        "aria-valuemin": 0,
        "aria-valuemax": 100
      }, (0, _filterDOMProps["default"])(otherProps)), _react["default"].createElement("div", {
        className: "spectrum-CircleLoader-track"
      }), _react["default"].createElement("div", {
        className: "spectrum-CircleLoader-fills"
      }, _react["default"].createElement("div", {
        className: "spectrum-CircleLoader-fillMask1"
      }, _react["default"].createElement("div", {
        className: "spectrum-CircleLoader-fillSubMask1",
        style: fillSubmask1Style
      }, _react["default"].createElement("div", {
        className: "spectrum-CircleLoader-fill"
      }))), _react["default"].createElement("div", {
        className: "spectrum-CircleLoader-fillMask2"
      }, _react["default"].createElement("div", {
        className: "spectrum-CircleLoader-fillSubMask2",
        style: fillSubmask2Style
      }, _react["default"].createElement("div", {
        className: "spectrum-CircleLoader-fill"
      })))));
    }
  }]);

  return Wait;
}(_react["default"].Component);

exports["default"] = Wait;

_defineProperty(Wait, "propTypes", {
  /** Whether to center the Wait compnent in the parent container. */
  centered: _propTypes["default"].bool,

  /** Custom CSS class to add to the Wait component */
  className: _propTypes["default"].string,

  /**
   * Boolean to determine if the Wait component should endlessly spin (indeterminate) or
   * if it should be controlled manually.
   */
  indeterminate: _propTypes["default"].bool,

  /** Size of the Wait component */
  size: _propTypes["default"].string,

  /** Adjust the filled portion of the Wait component to a determined value */
  value: _propTypes["default"].number,

  /**
  * The variant of Wait to display.
  */
  variant: _propTypes["default"].oneOf(['overBackground'])
});