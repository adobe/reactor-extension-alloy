"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _autobindDecorator = _interopRequireDefault(require("autobind-decorator"));

var _classnames = _interopRequireDefault(require("classnames"));

var _createId = _interopRequireDefault(require("../../utils/createId"));

var _Menu = _interopRequireDefault(require("./Menu"));

var _MenuItem = _interopRequireDefault(require("./MenuItem"));

var _OverlayTrigger = _interopRequireDefault(require("../../OverlayTrigger"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _class, _class2, _temp;

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var SubMenu =
/**
 * A menu item that has a sub menu under it that is opened on hover.
 */
(0, _autobindDecorator["default"])(_class = (_temp = _class2 =
/*#__PURE__*/
function (_Component) {
  _inherits(SubMenu, _Component);

  function SubMenu() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, SubMenu);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SubMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      opened: false,
      trapFocus: true
    });

    _defineProperty(_assertThisInitialized(_this), "menuId", (0, _createId["default"])());

    _defineProperty(_assertThisInitialized(_this), "subMenuId", (0, _createId["default"])());

    return _this;
  }

  _createClass(SubMenu, [{
    key: "handleKeyDown",
    value: function handleKeyDown(event) {
      var onKeyDown = this.props.onKeyDown;

      switch (event.key) {
        case 'ArrowLeft':
        case 'Left':
          event.preventDefault();
          event.stopPropagation();
          this.setState({
            opened: false
          });
          break;

        case 'Enter':
        case ' ':
        case 'ArrowRight':
        case 'Right':
          event.preventDefault();
          event.stopPropagation();
          this.setState({
            opened: true
          });
          break;
      }

      if (onKeyDown) {
        onKeyDown(event);
      }
    }
  }, {
    key: "handleSubMenuKeyDown",
    value: function handleSubMenuKeyDown(event) {
      switch (event.key) {
        case 'ArrowLeft':
        case 'Left':
          event.preventDefault();
          this.setState({
            opened: false
          });
          break;
      }
    }
  }, {
    key: "hide",
    value: function hide() {
      var _this2 = this;

      this.hideAnimationFrame = requestAnimationFrame(function () {
        return _this2.setState({
          opened: false
        });
      });
    }
  }, {
    key: "show",
    value: function show() {
      var _this3 = this;

      if (this.hideAnimationFrame) {
        cancelAnimationFrame(this.hideAnimationFrame);
      }

      requestAnimationFrame(function () {
        return _this3.setState({
          opened: true
        });
      });

      if (this.props._onNestedSubmenuOpen) {
        this.props._onNestedSubmenuOpen();
      }
    }
  }, {
    key: "cloneItem",
    value: function cloneItem(item) {
      var props = _objectSpread({}, item.props, {
        onKeyDown: this.handleSubMenuKeyDown
      });

      if (item.type === SubMenu) {
        props._onNestedSubmenuOpen = this.show;
      }

      return (0, _react.cloneElement)(item, props);
    }
  }, {
    key: "onHide",
    value: function onHide() {
      this.hide();
    }
  }, {
    key: "onMenuClose",
    value: function onMenuClose() {
      this.overlayTrigger.hide();
    }
  }, {
    key: "onSelect",
    value: function onSelect() {
      if (this.props.closeOnSelect) {
        this.onMenuClose();
      }

      if (this.props.onSelect) {
        var _this$props;

        (_this$props = this.props).onSelect.apply(_this$props, arguments);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var _this$props2 = this.props,
          children = _this$props2.children,
          className = _this$props2.className,
          closeOnSelect = _this$props2.closeOnSelect,
          label = _this$props2.label,
          trapFocus = _this$props2.trapFocus,
          otherProps = _objectWithoutProperties(_this$props2, ["children", "className", "closeOnSelect", "label", "trapFocus"]);

      delete otherProps.onSelect;
      var opened = this.state.opened;
      return _react["default"].createElement(_OverlayTrigger["default"], {
        placement: "right top",
        offset: -10,
        crossOffset: -4,
        selected: false,
        show: opened,
        onHide: this.onHide,
        closeOnSelect: closeOnSelect,
        ref: function ref(t) {
          return _this4.overlayTrigger = t;
        }
      }, _react["default"].createElement(_MenuItem["default"], _extends({
        id: this.menuId,
        className: (0, _classnames["default"])({
          'is-open': opened
        }, className),
        ref: function ref(r) {
          return _this4.menuItem = r;
        },
        "aria-haspopup": "menu",
        "aria-expanded": opened,
        "aria-owns": opened ? this.subMenuId : null
      }, otherProps, {
        onKeyDown: otherProps.disabled ? undefined : this.handleKeyDown,
        onClick: this.show,
        onMouseEnter: this.show,
        onMouseLeave: this.hide,
        hasNestedMenu: true
      }), label), _react["default"].createElement(_Menu["default"], {
        id: this.subMenuId,
        onSelect: this.onSelect,
        autoFocus: true,
        "aria-labelledby": this.menuId,
        onMouseEnter: this.show,
        onMouseLeave: this.hide,
        trapFocus: trapFocus
      }, _react["default"].Children.toArray(children).map(this.cloneItem)));
    }
  }]);

  return SubMenu;
}(_react.Component), _defineProperty(_class2, "displayName", 'SubMenu'), _defineProperty(_class2, "propTypes", _objectSpread({}, _MenuItem["default"].propTypes, {
  /**
   * A custom classname to be applied to the menu item
   */
  className: _propTypes["default"].string,

  /**
   * The displayed label of the submenu within its parent
   */
  label: _propTypes["default"].string,

  /**
   * A select handler for the submenu, triggered whenever an item is selected.
   */
  onSelect: _propTypes["default"].func,

  /**
   * True by default, this keeps focus within the expanded submenu of this component.
   * When disabled, focus may leave the expanded submenu component.
   */
  trapFocus: _propTypes["default"].bool
})), _temp)) || _class;

exports["default"] = SubMenu;