"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _autobindDecorator = _interopRequireDefault(require("autobind-decorator"));

var _List = require("../../List");

var _Popover = _interopRequireDefault(require("../../Popover"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _class, _class2, _temp;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Menu = (0, _autobindDecorator["default"])(_class = (_temp = _class2 =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Menu, _React$Component);

  function Menu() {
    _classCallCheck(this, Menu);

    return _possibleConstructorReturn(this, _getPrototypeOf(Menu).apply(this, arguments));
  }

  _createClass(Menu, [{
    key: "getListRef",
    value: function getListRef() {
      return this.listRef;
    }
  }, {
    key: "onClick",
    value: function onClick(e) {
      e.preventDefault();

      if (this.props.onClick) {
        this.props.onClick(e);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var _this$props = this.props,
          children = _this$props.children,
          className = _this$props.className,
          closeOnSelect = _this$props.closeOnSelect,
          open = _this$props.open,
          onClose = _this$props.onClose,
          onSelect = _this$props.onSelect,
          placement = _this$props.placement,
          _this$props$role = _this$props.role,
          role = _this$props$role === void 0 ? 'menu' : _this$props$role,
          style = _this$props.style,
          trapFocus = _this$props.trapFocus,
          otherProps = _objectWithoutProperties(_this$props, ["children", "className", "closeOnSelect", "open", "onClose", "onSelect", "placement", "role", "style", "trapFocus"]);

      delete otherProps.target;
      delete otherProps.onClick;
      return _react["default"].createElement(_Popover["default"], {
        isDialog: false,
        placement: placement,
        open: open,
        onClose: onClose,
        style: _objectSpread({}, style, {
          overflowY: 'auto'
        }),
        trapFocus: trapFocus
      }, _react["default"].createElement(_List.List, _extends({
        ref: function ref(l) {
          return _this.listRef = l;
        },
        role: role,
        className: className,
        onClick: this.onClick
      }, otherProps), _react["default"].Children.map(children, function (child) {
        return _react["default"].cloneElement(child, {
          onSelect: onSelect,
          closeOnSelect: closeOnSelect
        });
      })));
    }
  }]);

  return Menu;
}(_react["default"].Component), _defineProperty(_class2, "displayName", 'Menu'), _defineProperty(_class2, "propTypes", {
  /**
   * Location of the menu in relation to the element triggering it. If used
   * with overlay trigger and there isn't enough room for the menu in that
   * position, it will make a limited attempt to find a new position.
   */
  placement: _propTypes["default"].oneOf(['bottom', 'bottom left', 'bottom right', 'top', 'top left', 'top right', 'left', 'left top', 'left bottom', 'right', 'right top', 'right bottom']),

  /**
   * Whether the menu is opened.
   */
  open: _propTypes["default"].bool,

  /**
   * Callback when menu closes.
   */
  onClose: _propTypes["default"].func,

  /**
   * Callback when menu item is selected.
   */
  onSelect: _propTypes["default"].func,

  /**
   * String for extra class names to add to the menu
   */
  className: _propTypes["default"].string,

  /**
   * True by default, this keeps focus within children of this component.
   * When disabled, focus may leave this component.
   */
  trapFocus: _propTypes["default"].bool,

  /**
   * The WAI-ARIA role for the menu. Defaults to "menu", but could be "listbox" depending on context.
   */
  role: _propTypes["default"].oneOf(['menu', 'listbox'])
}), _defineProperty(_class2, "defaultProps", {
  trapFocus: true
}), _temp)) || _class;

exports["default"] = Menu;