"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ChevronRightMedium = _interopRequireDefault(require("../../Icon/core/ChevronRightMedium"));

var _classnames = _interopRequireDefault(require("classnames"));

var _convertUnsafeMethod = _interopRequireDefault(require("../../utils/convertUnsafeMethod"));

var _createId = _interopRequireDefault(require("../../utils/createId"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _focusRing = _interopRequireDefault(require("../../utils/focusRing"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _class, _class2, _temp;

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var AccordionItem =
/**
 * An AccordionItem component represents an item in an accordion
 */
(0, _convertUnsafeMethod["default"])(_class = (0, _focusRing["default"])(_class = (_temp = _class2 =
/*#__PURE__*/
function (_Component) {
  _inherits(AccordionItem, _Component);

  function AccordionItem(props) {
    var _this;

    _classCallCheck(this, AccordionItem);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(AccordionItem).call(this, props));
    _this.headerId = (0, _createId["default"])();
    _this.contentId = (0, _createId["default"])();
    return _this;
  }

  _createClass(AccordionItem, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          className = _this$props.className,
          onItemClick = _this$props.onItemClick,
          header = _this$props.header,
          selected = _this$props.selected,
          disabled = _this$props.disabled,
          ariaLevel = _this$props.ariaLevel,
          otherProps = _objectWithoutProperties(_this$props, ["children", "className", "onItemClick", "header", "selected", "disabled", "ariaLevel"]);

      return _react["default"].createElement("div", _extends({}, (0, _filterDOMProps["default"])(otherProps), {
        className: (0, _classnames["default"])('spectrum-Accordion-item', 'react-spectrum-Accordion-item', {
          'is-open': selected,
          'is-disabled': disabled
        }, className),
        role: "presentation"
      }), _react["default"].createElement("h3", {
        className: "spectrum-Accordion-itemHeading",
        "aria-level": ariaLevel
      }, _react["default"].createElement("button", {
        id: this.headerId,
        className: "spectrum-Accordion-itemHeader",
        "aria-controls": this.contentId,
        "aria-expanded": selected,
        disabled: disabled,
        type: "button",
        onClick: !disabled ? onItemClick : null
      }, header), _react["default"].createElement(_ChevronRightMedium["default"], {
        role: "presentation",
        size: null,
        className: "spectrum-Accordion-itemIndicator"
      })), _react["default"].createElement("div", {
        id: this.contentId,
        role: "region",
        "aria-labelledby": this.headerId,
        "aria-hidden": !selected,
        "aria-expanded": selected,
        className: "spectrum-Accordion-itemContent"
      }, selected ? children : null));
    }
  }]);

  return AccordionItem;
}(_react.Component), _defineProperty(_class2, "propTypes", {
  /**
   * A string or node which will be placed at the top of the accordion item.
   */
  header: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /**
   * Whether or not the accordion item is selected. Causes the item to expand.
   */
  selected: _propTypes["default"].bool,

  /**
   * Disables the accordion item, making it grey and uninteractable.
   */
  disabled: _propTypes["default"].bool,

  /**
   * The aria heading level of the AccordionItem. Defines the elements position
   * within a hierarchy. Set by ariaLevel prop in the parent Accordion
   * rather than directly on the component itself.
   */
  ariaLevel: _propTypes["default"].number,

  /**
   * The behavior executed upon click on the AccordionItem. Set by the parent Accordion component.
   */
  onItemClick: _propTypes["default"].func
}), _defineProperty(_class2, "defaultProps", {
  header: '',
  selected: false,
  disabled: false,
  onItemClick: function onItemClick() {}
}), _temp)) || _class) || _class;

exports["default"] = AccordionItem;