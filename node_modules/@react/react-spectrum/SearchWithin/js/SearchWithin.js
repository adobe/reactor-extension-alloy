"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _createId = _interopRequireDefault(require("../../utils/createId"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _intl = require("../../utils/intl");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _Search = _interopRequireDefault(require("../../Search"));

var _Select = _interopRequireDefault(require("../../Select"));

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var intlMessages = {
  "cs-CZ": _interopRequireDefault(require("./../intl/cs-CZ.json"))["default"],
  "da-DK": _interopRequireDefault(require("./../intl/da-DK.json"))["default"],
  "de-DE": _interopRequireDefault(require("./../intl/de-DE.json"))["default"],
  "en-US": _interopRequireDefault(require("./../intl/en-US.json"))["default"],
  "es-ES": _interopRequireDefault(require("./../intl/es-ES.json"))["default"],
  "fi-FI": _interopRequireDefault(require("./../intl/fi-FI.json"))["default"],
  "fr-FR": _interopRequireDefault(require("./../intl/fr-FR.json"))["default"],
  "hu-HU": _interopRequireDefault(require("./../intl/hu-HU.json"))["default"],
  "it-IT": _interopRequireDefault(require("./../intl/it-IT.json"))["default"],
  "ja-JP": _interopRequireDefault(require("./../intl/ja-JP.json"))["default"],
  "ko-KR": _interopRequireDefault(require("./../intl/ko-KR.json"))["default"],
  "nb-NO": _interopRequireDefault(require("./../intl/nb-NO.json"))["default"],
  "nl-NL": _interopRequireDefault(require("./../intl/nl-NL.json"))["default"],
  "pl-PL": _interopRequireDefault(require("./../intl/pl-PL.json"))["default"],
  "pt-BR": _interopRequireDefault(require("./../intl/pt-BR.json"))["default"],
  "ru-RU": _interopRequireDefault(require("./../intl/ru-RU.json"))["default"],
  "sv-SE": _interopRequireDefault(require("./../intl/sv-SE.json"))["default"],
  "tr-TR": _interopRequireDefault(require("./../intl/tr-TR.json"))["default"],
  "uk-UA": _interopRequireDefault(require("./../intl/uk-UA.json"))["default"],
  "zh-CN": _interopRequireDefault(require("./../intl/zh-CN.json"))["default"],
  "zh-TW": _interopRequireDefault(require("./../intl/zh-TW.json"))["default"]
};

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require("../../spectrum-css/searchwithin/index.css");

  require("../../spectrum-css/searchwithin/index-diff.css");
} else if (process.env.SCALE_LARGE) {
  require("../../spectrum-css/searchwithin/index-lg.css");
} else {
  require("../../spectrum-css/searchwithin/index.css");
}

require('../style/index.css');

var formatMessage = (0, _intl.messageFormatter)(intlMessages);
/**
 * A SearchWithin component displays a dropdown next to a search input, typically
 * used to select the scope of a search.
 */

var SearchWithin =
/*#__PURE__*/
function (_React$Component) {
  _inherits(SearchWithin, _React$Component);

  function SearchWithin(props) {
    var _this;

    _classCallCheck(this, SearchWithin);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchWithin).call(this, props));
    _this.outerId = (0, _createId["default"])();
    return _this;
  }

  _createClass(SearchWithin, [{
    key: "getChildId",
    value: function getChildId(childName) {
      return this.outerId + '-' + childName;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          scope = _this$props.scope,
          defaultScope = _this$props.defaultScope,
          value = _this$props.value,
          defaultValue = _this$props.defaultValue,
          onScopeChange = _this$props.onScopeChange,
          onValueChange = _this$props.onValueChange,
          onSubmit = _this$props.onSubmit,
          _this$props$disabled = _this$props.disabled,
          disabled = _this$props$disabled === void 0 ? false : _this$props$disabled,
          _this$props$placehold = _this$props.placeholder,
          placeholder = _this$props$placehold === void 0 ? '' : _this$props$placehold,
          _this$props$id = _this$props.id,
          id = _this$props$id === void 0 ? this.getChildId('search') : _this$props$id,
          _this$props$selectId = _this$props.selectId,
          selectId = _this$props$selectId === void 0 ? this.getChildId('select') : _this$props$selectId,
          ariaLabelledby = _this$props['aria-labelledby'],
          _this$props$ariaLabe = _this$props['aria-label'],
          ariaLabel = _this$props$ariaLabe === void 0 ? !ariaLabelledby ? formatMessage('Search within') : null : _this$props$ariaLabe,
          autoFocus = _this$props.autoFocus,
          className = _this$props.className,
          scopeOptions = _this$props.scopeOptions,
          otherProps = _objectWithoutProperties(_this$props, ["scope", "defaultScope", "value", "defaultValue", "onScopeChange", "onValueChange", "onSubmit", "disabled", "placeholder", "id", "selectId", "aria-labelledby", "aria-label", "autoFocus", "className", "scopeOptions"]);

      var formattedScopeOptions = scopeOptions.map(function (scope) {
        return typeof scope === 'string' ? {
          label: scope,
          value: scope
        } : scope;
      });

      if (ariaLabelledby) {
        if (ariaLabel) {
          ariaLabelledby += " ".concat(this.outerId);
        }
      } else {
        ariaLabelledby = this.outerId;
      }

      var selectProps = {};

      if (scope) {
        selectProps.value = scope;
      } else {
        selectProps.defaultValue = defaultScope ? defaultScope : formattedScopeOptions[0].value;
      }

      var select = _react["default"].createElement(_Select["default"], _extends({
        id: selectId,
        "aria-labelledby": ariaLabelledby,
        onChange: onScopeChange,
        options: formattedScopeOptions,
        disabled: disabled,
        required: true,
        flexible: true
      }, selectProps));

      var searchProps = {}; // comparison is on purpose, we don't want to mix undefined with null in equality

      if (value != null) {
        searchProps.value = value;
      } else if (defaultValue) {
        searchProps.defaultValue = defaultValue;
      }

      var search = _react["default"].createElement(_Search["default"], _extends({
        id: id,
        "aria-labelledby": ariaLabelledby + " ".concat(selectId, "-value"),
        placeholder: placeholder,
        onChange: onValueChange,
        onSubmit: onSubmit,
        disabled: disabled,
        role: "presentation",
        autoFocus: autoFocus
      }, searchProps));

      return _react["default"].createElement("div", _extends({
        className: (0, _classnames["default"])('spectrum-SearchWithin', 'react-spectrum-SearchWithin', className),
        "aria-label": ariaLabel,
        "aria-labelledby": ariaLabelledby,
        id: this.outerId,
        role: "search"
      }, (0, _filterDOMProps["default"])(otherProps)), select, search);
    }
  }]);

  return SearchWithin;
}(_react["default"].Component);

exports["default"] = SearchWithin;

_defineProperty(SearchWithin, "propTypes", {
  /**
   * Scope options to be shown in the dropdown
   */
  scopeOptions: _propTypes["default"].arrayOf(_propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].shape({
    label: _propTypes["default"].string,
    value: _propTypes["default"].string
  })])).isRequired,

  /**
   * The currently selected scope value (controlled).
   */
  scope: _propTypes["default"].string,

  /**
   * The default selected scope value (uncontrolled).
   */
  defaultScope: _propTypes["default"].string,

  /**
   * The current value of the textfield (controlled).
   */
  value: _propTypes["default"].string,

  /**
   * The default value of the textfield (uncontrolled).
   */
  defaultValue: _propTypes["default"].string,

  /**
   * A placeholder for the textfield.
   */
  placeholder: _propTypes["default"].string,

  /**
   * Whether the field is disabled
   */
  disabled: _propTypes["default"].bool,

  /**
   * A callback for when the field is submitted
   */
  onSubmit: _propTypes["default"].func,

  /**
   * A callback for when the textfield changes.
   */
  onValueChange: _propTypes["default"].func,

  /**
   * A callback for when the scope changes
   */
  onScopeChange: _propTypes["default"].func,

  /**
  * Class given to SearchWithin
  */
  className: _propTypes["default"].string
});