"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _icon = require("../../utils/icon");

var _convertUnsafeMethod = _interopRequireDefault(require("../../utils/convertUnsafeMethod"));

var _createId = _interopRequireDefault(require("../../utils/createId"));

var _filterDOMProps = _interopRequireDefault(require("../../utils/filterDOMProps"));

var _focusRing = _interopRequireDefault(require("../../utils/focusRing"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _class, _class2, _temp;

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Tab =
/**
 * An individual tab in a TabList or TabView
 */
(0, _convertUnsafeMethod["default"])(_class = (0, _focusRing["default"])(_class = (_temp = _class2 =
/*#__PURE__*/
function (_Component) {
  _inherits(Tab, _Component);

  function Tab(props) {
    var _this;

    _classCallCheck(this, Tab);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tab).call(this, props));

    _defineProperty(_assertThisInitialized(_this), "handleClick", function (e) {
      if (!_this.props.disabled && _this.props.onClick) {
        _this.props.onClick(e);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleKeyPress", function (e) {
      if (e.key === 'Enter' || e.key === ' ') {
        e.preventDefault();

        _this.handleClick(e);
      }
    });

    _this.tabId = (0, _createId["default"])();
    return _this;
  }

  _createClass(Tab, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          _this$props$id = _this$props.id,
          id = _this$props$id === void 0 ? this.tabId : _this$props$id,
          label = _this$props.label,
          children = _this$props.children,
          className = _this$props.className,
          selected = _this$props.selected,
          disabled = _this$props.disabled,
          invalid = _this$props.invalid,
          icon = _this$props.icon,
          renderChildren = _this$props.renderChildren,
          _this$props$tabIndex = _this$props.tabIndex,
          tabIndex = _this$props$tabIndex === void 0 ? 0 : _this$props$tabIndex,
          otherProps = _objectWithoutProperties(_this$props, ["id", "label", "children", "className", "selected", "disabled", "invalid", "icon", "renderChildren", "tabIndex"]);

      var iconSize = label || renderChildren && children ? 'XS' : 'S';
      return _react["default"].createElement("div", _extends({}, (0, _filterDOMProps["default"])(otherProps), {
        className: (0, _classnames["default"])('spectrum-Tabs-item', {
          'is-selected': selected,
          'is-disabled': disabled,
          'is-invalid': invalid
        }, className),
        id: id,
        role: "tab",
        "aria-selected": selected,
        "aria-invalid": invalid || null,
        "aria-disabled": disabled || null,
        tabIndex: !disabled ? tabIndex : null,
        onClick: !disabled ? this.handleClick : null,
        onKeyPress: !disabled ? this.handleKeyPress : null
      }), (0, _icon.cloneIcon)(icon, {
        size: iconSize,
        className: 'spectrum-Tabs-item-icon'
      }), (label || renderChildren && children) && _react["default"].createElement("span", {
        className: "spectrum-Tabs-itemLabel"
      }, label || renderChildren && children));
    }
  }]);

  return Tab;
}(_react.Component), _defineProperty(_class2, "displayName", 'Tab'), _defineProperty(_class2, "propTypes", {
  /** Class to add to tab */
  className: _propTypes["default"].string,

  /** Whether the tab should be disabled or not */
  disabled: _propTypes["default"].bool,

  /** Icon to add to tab */
  icon: _propTypes["default"].object,

  /** Whether to disable the invalid icon on the tab */
  invalid: _propTypes["default"].bool,

  /** Tab label */
  label: _propTypes["default"].string,

  /** Whether to render children in the tab */
  renderChildren: _propTypes["default"].bool,

  /** Whether the tab is selected */
  selected: _propTypes["default"].bool,

  /** Index of the tab in the grouping */
  tabIndex: _propTypes["default"].number
}), _defineProperty(_class2, "defaultProps", {
  disabled: false,
  invalid: false,
  selected: false,
  tabIndex: 0,
  renderChildren: true
}), _temp)) || _class) || _class;

exports["default"] = Tab;