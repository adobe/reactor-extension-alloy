"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = TabLine;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/*************************************************************************
* ADOBE CONFIDENTIAL
* ___________________
*
* Copyright 2019 Adobe
* All Rights Reserved.
*
* NOTICE: All information contained herein is, and remains
* the property of Adobe and its suppliers, if any. The intellectual
* and technical concepts contained herein are proprietary to Adobe
* and its suppliers and are protected by all applicable intellectual
* property laws, including trade secret and copyright laws.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe.
**************************************************************************/
function TabLine(_ref) {
  var orientation = _ref.orientation,
      selectedTab = _ref.selectedTab;
  // Ideally this would be a DNA variable, but vertical tabs aren't even in DNA, soo...
  var verticalSelectionIndicatorOffset = 12;
  var style = {
    transform: orientation === 'vertical' ? "translateY(".concat(selectedTab.offsetTop + verticalSelectionIndicatorOffset / 2, "px)") : "translateX(".concat(selectedTab.offsetLeft, "px) ")
  };

  if (orientation === 'horizontal') {
    style.width = "".concat(selectedTab.offsetWidth, "px");
  } else {
    style.height = "".concat(selectedTab.offsetHeight - verticalSelectionIndicatorOffset, "px");
  }

  return _react["default"].createElement("div", {
    className: "spectrum-Tabs-selectionIndicator",
    role: "presentation",
    style: style
  });
}