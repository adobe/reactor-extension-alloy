"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _autobindDecorator = _interopRequireDefault(require("autobind-decorator"));

var _classnames = _interopRequireDefault(require("classnames"));

var _CoachMark = _interopRequireDefault(require("./CoachMark"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _class, _class2, _temp;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var FASTEST_SETINTERVAL_TIMEOUT = 10;

var CoachMarkIndicator = (0, _autobindDecorator["default"])(_class = (_temp = _class2 =
/*#__PURE__*/
function (_React$Component) {
  _inherits(CoachMarkIndicator, _React$Component);

  function CoachMarkIndicator(props) {
    var _this;

    _classCallCheck(this, CoachMarkIndicator);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(CoachMarkIndicator).call(this, props));
    _this.state = {
      style: {
        position: 'relative'
      }
    };
    _this.indicatorRef = null;
    _this.debouncedResizeUpdate = null;
    return _this;
  }

  _createClass(CoachMarkIndicator, [{
    key: "calculateDOMLocation",
    value: function calculateDOMLocation(targetNode) {
      var _targetNode$getBoundi = targetNode.getBoundingClientRect(),
          left = _targetNode$getBoundi.left,
          top = _targetNode$getBoundi.top,
          width = _targetNode$getBoundi.width,
          height = _targetNode$getBoundi.height;

      if (this.indicatorRef) {
        var _this$indicatorRef$ge = this.indicatorRef.getBoundingClientRect(),
            indicatorDiameter = _this$indicatorRef$ge.height;

        indicatorDiameter += _CoachMark["default"].INDICATOR_OFFSET;
        this.setState({
          style: {
            position: 'absolute',
            top: top + height / 2 - indicatorDiameter / 2,
            left: left + width / 2 - indicatorDiameter / 2
          }
        });
      }
    }
  }, {
    key: "resizeListener",
    value: function resizeListener() {
      var _this2 = this;

      if (!this.debouncedResizeUpdate) {
        this.debouncedResizeUpdate = setTimeout(function () {
          _this2.updateTargetNode();

          _this2.debouncedResizeUpdate = null;
        }, 50);
      }
    }
  }, {
    key: "updateTargetNode",
    value: function updateTargetNode() {
      if (this.indicatorRef) {
        var targetNode = document.querySelector(this.props.selector);

        if (targetNode) {
          this.calculateDOMLocation(targetNode);
        }

        return targetNode;
      }

      return null;
    }
  }, {
    key: "tryAttachToDOM",
    value: function tryAttachToDOM() {
      var _this3 = this;

      if (!this.updateTargetNode()) {
        var tryCount = 0;

        if (this.attachInterval) {
          this.clearAttachInterval();
        }

        this.attachInterval = setInterval(function () {
          if (_this3.updateTargetNode() || tryCount > 10) {
            _this3.clearAttachInterval();
          }

          tryCount++;
        }, FASTEST_SETINTERVAL_TIMEOUT);
      }
    }
  }, {
    key: "componentDidMount",
    value: function () {
      var _componentDidMount = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.tryAttachToDOM();
                window.addEventListener('resize', this.resizeListener);

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function componentDidMount() {
        return _componentDidMount.apply(this, arguments);
      }

      return componentDidMount;
    }()
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      if (prevProps.selector !== this.props.selector) {
        this.tryAttachToDOM();
      }

      if (prevState.style.top !== this.state.style.top || prevState.style.left !== this.state.style.left) {
        this.props.onPositioned();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      window.removeEventListener('resize', this.resizeListener);
      this.clearDebouncedResizeUpdateInterval();
      this.clearAttachInterval();
    }
  }, {
    key: "clearDebouncedResizeUpdateInterval",
    value: function clearDebouncedResizeUpdateInterval() {
      if (this.debouncedResizeUpdate) {
        clearTimeout(this.debouncedResizeUpdate);
        this.debouncedResizeUpdate = null;
      }
    }
  }, {
    key: "clearAttachInterval",
    value: function clearAttachInterval() {
      if (this.attachInterval) {
        clearInterval(this.attachInterval);
        this.attachInterval = null;
      }
    }
  }, {
    key: "setReference",
    value: function setReference(ref) {
      this.indicatorRef = ref;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          quiet = _this$props.quiet,
          onClick = _this$props.onClick,
          otherProps = _objectWithoutProperties(_this$props, ["quiet", "onClick"]);

      var style = this.state.style;
      return _react["default"].createElement("div", _extends({
        className: (0, _classnames["default"])('spectrum-CoachMarkIndicator', {
          'spectrum-CoachMarkIndicator--quiet': quiet
        }),
        role: "presentation"
      }, otherProps, {
        onClick: onClick,
        ref: this.setReference,
        style: style
      }), _react["default"].createElement("div", {
        className: "spectrum-CoachMarkIndicator-ring"
      }), _react["default"].createElement("div", {
        className: "spectrum-CoachMarkIndicator-ring"
      }), _react["default"].createElement("div", {
        className: "spectrum-CoachMarkIndicator-ring"
      }));
    }
  }]);

  return CoachMarkIndicator;
}(_react["default"].Component), _defineProperty(_class2, "propTypes", {
  /** The selector is used to select the element the coach mark should attach to.
   * Any valid element query that will only return 1 element
   **/
  selector: _propTypes["default"].string.isRequired,

  /** Quiet variant, uses a smaller indicator */
  quiet: _propTypes["default"].bool,

  /** Fires when the coachmark changes position  */
  onPositioned: _propTypes["default"].func
}), _defineProperty(_class2, "defaultProps", {
  quiet: false,
  onPositioned: function onPositioned() {}
}), _temp)) || _class;

exports["default"] = CoachMarkIndicator;