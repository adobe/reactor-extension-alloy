"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Represents a 2d size, with a width and height.
 */
var Size = function () {
  /** @public */
  function Size() {
    var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    _classCallCheck(this, Size);

    /**
     * The width
     * @type {number}
     */
    this.width = width;

    /**
     * The height
     * @type {number}
     */
    this.height = height;
  }

  /**
   * Returns a copy of this size
   * @return {Size}
   */


  _createClass(Size, [{
    key: "copy",
    value: function copy() {
      return new Size(this.width, this.height);
    }

    /**
     * Returns whether this size is equal to another one
     * @param {Size} other
     * @return {boolean}
     */

  }, {
    key: "equals",
    value: function equals(other) {
      return this.width === other.width && this.height === other.height;
    }
  }]);

  return Size;
}();

exports.default = Size;